{
  "data": {
    "__schema": {
      "types": [
        {
          "name": "AccessLevel",
          "kind": "OBJECT",
          "description": "Represents the access level of a relationship between a User and object that it is related to",
          "fields": [
            {
              "name": "integerValue",
              "description": "Integer representation of access level."
            },
            {
              "name": "stringValue",
              "description": "String representation of access level."
            }
          ]
        },
        {
          "name": "AccessLevelEnum",
          "kind": "ENUM",
          "description": "Access level to a resource",
          "fields": null
        },
        {
          "name": "AccessLevelGroup",
          "kind": "OBJECT",
          "description": "Representation of a GitLab group.",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "Avatar URL of the group."
            },
            {
              "name": "id",
              "description": "ID of the group."
            },
            {
              "name": "name",
              "description": "Name of the group."
            },
            {
              "name": "parent",
              "description": "Parent group."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the group."
            }
          ]
        },
        {
          "name": "AccessLevelUser",
          "kind": "OBJECT",
          "description": "Representation of a GitLab user.",
          "fields": [
            {
              "name": "avatarUrl",
              "description": "URL of the user's avatar."
            },
            {
              "name": "id",
              "description": "ID of the user."
            },
            {
              "name": "name",
              "description": "Human-readable name of the user.\nReturns `****` if the user is a project bot and the requester does not have permission to view the project.\n"
            },
            {
              "name": "publicEmail",
              "description": "User's public email."
            },
            {
              "name": "username",
              "description": "Username of the user. Unique within this instance of GitLab."
            },
            {
              "name": "webPath",
              "description": "Web path of the user."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the user."
            }
          ]
        },
        {
          "name": "Achievement",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "avatarUrl",
              "description": "URL to avatar of the achievement."
            },
            {
              "name": "createdAt",
              "description": "Timestamp the achievement was created."
            },
            {
              "name": "description",
              "description": "Description or notes for the achievement."
            },
            {
              "name": "id",
              "description": "ID of the achievement."
            },
            {
              "name": "name",
              "description": "Name of the achievement."
            },
            {
              "name": "namespace",
              "description": "Namespace of the achievement."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the achievement was last updated."
            }
          ]
        },
        {
          "name": "AchievementConnection",
          "kind": "OBJECT",
          "description": "The connection type for Achievement.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "AchievementEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "AchievementsAchievementID",
          "kind": "SCALAR",
          "description": "A `AchievementsAchievementID` is a global ID. It is encoded as a string.\n\nAn example `AchievementsAchievementID` is: `\"gid://gitlab/Achievements::Achievement/1\"`.",
          "fields": null
        },
        {
          "name": "AchievementsCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AchievementsCreate",
          "fields": null
        },
        {
          "name": "AchievementsCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AchievementsCreate",
          "fields": [
            {
              "name": "achievement",
              "description": "Achievement created."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "AddProjectToSecurityDashboardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AddProjectToSecurityDashboard",
          "fields": null
        },
        {
          "name": "AddProjectToSecurityDashboardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AddProjectToSecurityDashboard",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "project",
              "description": "Project that was added to the Instance Security Dashboard."
            }
          ]
        },
        {
          "name": "AdminSidekiqQueuesDeleteJobsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AdminSidekiqQueuesDeleteJobs",
          "fields": null
        },
        {
          "name": "AdminSidekiqQueuesDeleteJobsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AdminSidekiqQueuesDeleteJobs",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "result",
              "description": "Information about the status of the deletion request."
            }
          ]
        },
        {
          "name": "AgentConfiguration",
          "kind": "OBJECT",
          "description": "Configuration details for an Agent",
          "fields": [
            {
              "name": "agentName",
              "description": "Name of the agent."
            }
          ]
        },
        {
          "name": "AgentConfigurationConnection",
          "kind": "OBJECT",
          "description": "The connection type for AgentConfiguration.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "AgentConfigurationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "AgentMetadata",
          "kind": "OBJECT",
          "description": "Information about a connected Agent",
          "fields": [
            {
              "name": "commit",
              "description": "Agent version commit."
            },
            {
              "name": "podName",
              "description": "Name of the pod running the Agent."
            },
            {
              "name": "podNamespace",
              "description": "Namespace of the pod running the Agent."
            },
            {
              "name": "version",
              "description": "Agent version tag."
            }
          ]
        },
        {
          "name": "AgentTokenStatus",
          "kind": "ENUM",
          "description": "Agent token statuses",
          "fields": null
        },
        {
          "name": "AlertManagementAlert",
          "kind": "OBJECT",
          "description": "Describes an alert from the project's Alert Management",
          "fields": [
            {
              "name": "assignees",
              "description": "Assignees of the alert."
            },
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "createdAt",
              "description": "Timestamp the alert was created."
            },
            {
              "name": "description",
              "description": "Description of the alert."
            },
            {
              "name": "details",
              "description": "Alert details."
            },
            {
              "name": "detailsUrl",
              "description": "URL of the alert detail page."
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "endedAt",
              "description": "Timestamp the alert ended."
            },
            {
              "name": "environment",
              "description": "Environment for the alert."
            },
            {
              "name": "eventCount",
              "description": "Number of events of this alert."
            },
            {
              "name": "hosts",
              "description": "List of hosts the alert came from."
            },
            {
              "name": "id",
              "description": "ID of the alert."
            },
            {
              "name": "iid",
              "description": "Internal ID of the alert."
            },
            {
              "name": "issue",
              "description": "Issue attached to the alert."
            },
            {
              "name": "metricsDashboardUrl",
              "description": "URL for metrics embed for the alert."
            },
            {
              "name": "monitoringTool",
              "description": "Monitoring tool the alert came from."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "prometheusAlert",
              "description": "Alert condition for Prometheus."
            },
            {
              "name": "runbook",
              "description": "Runbook for the alert as defined in alert details."
            },
            {
              "name": "service",
              "description": "Service the alert came from."
            },
            {
              "name": "severity",
              "description": "Severity of the alert."
            },
            {
              "name": "startedAt",
              "description": "Timestamp the alert was raised."
            },
            {
              "name": "status",
              "description": "Status of the alert."
            },
            {
              "name": "title",
              "description": "Title of the alert."
            },
            {
              "name": "todos",
              "description": "To-do items of the current user for the alert."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the alert was last updated."
            },
            {
              "name": "webUrl",
              "description": "URL of the alert."
            }
          ]
        },
        {
          "name": "AlertManagementAlertConnection",
          "kind": "OBJECT",
          "description": "The connection type for AlertManagementAlert.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "AlertManagementAlertEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "AlertManagementAlertID",
          "kind": "SCALAR",
          "description": "A `AlertManagementAlertID` is a global ID. It is encoded as a string.\n\nAn example `AlertManagementAlertID` is: `\"gid://gitlab/AlertManagement::Alert/1\"`.",
          "fields": null
        },
        {
          "name": "AlertManagementAlertSort",
          "kind": "ENUM",
          "description": "Values for sorting alerts",
          "fields": null
        },
        {
          "name": "AlertManagementAlertStatusCountsType",
          "kind": "OBJECT",
          "description": "Represents total number of alerts for the represented categories",
          "fields": [
            {
              "name": "acknowledged",
              "description": "Number of alerts with status ACKNOWLEDGED for the project"
            },
            {
              "name": "all",
              "description": "Total number of alerts for the project."
            },
            {
              "name": "ignored",
              "description": "Number of alerts with status IGNORED for the project"
            },
            {
              "name": "open",
              "description": "Number of alerts with status TRIGGERED or ACKNOWLEDGED for the project."
            },
            {
              "name": "resolved",
              "description": "Number of alerts with status RESOLVED for the project"
            },
            {
              "name": "triggered",
              "description": "Number of alerts with status TRIGGERED for the project"
            }
          ]
        },
        {
          "name": "AlertManagementDomainFilter",
          "kind": "ENUM",
          "description": "Filters the alerts based on given domain",
          "fields": null
        },
        {
          "name": "AlertManagementHttpIntegration",
          "kind": "OBJECT",
          "description": "An endpoint and credentials used to accept alerts for a project",
          "fields": [
            {
              "name": "active",
              "description": "Whether the endpoint is currently accepting alerts."
            },
            {
              "name": "apiUrl",
              "description": "URL at which Prometheus metrics can be queried to populate the metrics dashboard."
            },
            {
              "name": "id",
              "description": "ID of the integration."
            },
            {
              "name": "name",
              "description": "Name of the integration."
            },
            {
              "name": "payloadAlertFields",
              "description": "Extract alert fields from payload example for custom mapping."
            },
            {
              "name": "payloadAttributeMappings",
              "description": "The custom mapping of GitLab alert attributes to fields from the payload_example."
            },
            {
              "name": "payloadExample",
              "description": "Example of an alert payload."
            },
            {
              "name": "token",
              "description": "Token used to authenticate alert notification requests."
            },
            {
              "name": "type",
              "description": "Type of integration."
            },
            {
              "name": "url",
              "description": "Endpoint which accepts alert notifications."
            }
          ]
        },
        {
          "name": "AlertManagementHttpIntegrationConnection",
          "kind": "OBJECT",
          "description": "The connection type for AlertManagementHttpIntegration.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "AlertManagementHttpIntegrationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "AlertManagementHttpIntegrationID",
          "kind": "SCALAR",
          "description": "A `AlertManagementHttpIntegrationID` is a global ID. It is encoded as a string.\n\nAn example `AlertManagementHttpIntegrationID` is: `\"gid://gitlab/AlertManagement::HttpIntegration/1\"`.",
          "fields": null
        },
        {
          "name": "AlertManagementIntegration",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "Whether the endpoint is currently accepting alerts."
            },
            {
              "name": "apiUrl",
              "description": "URL at which Prometheus metrics can be queried to populate the metrics dashboard."
            },
            {
              "name": "id",
              "description": "ID of the integration."
            },
            {
              "name": "name",
              "description": "Name of the integration."
            },
            {
              "name": "token",
              "description": "Token used to authenticate alert notification requests."
            },
            {
              "name": "type",
              "description": "Type of integration."
            },
            {
              "name": "url",
              "description": "Endpoint which accepts alert notifications."
            }
          ]
        },
        {
          "name": "AlertManagementIntegrationConnection",
          "kind": "OBJECT",
          "description": "The connection type for AlertManagementIntegration.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "AlertManagementIntegrationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "AlertManagementIntegrationType",
          "kind": "ENUM",
          "description": "Values of types of integrations",
          "fields": null
        },
        {
          "name": "AlertManagementPayloadAlertField",
          "kind": "OBJECT",
          "description": "Parsed field from an alert used for custom mappings",
          "fields": [
            {
              "name": "label",
              "description": "Human-readable label of the payload path."
            },
            {
              "name": "path",
              "description": "Path to value inside payload JSON."
            },
            {
              "name": "type",
              "description": "Type of the parsed value."
            }
          ]
        },
        {
          "name": "AlertManagementPayloadAlertFieldInput",
          "kind": "INPUT_OBJECT",
          "description": "Field that are available while modifying the custom mapping attributes for an HTTP integration",
          "fields": null
        },
        {
          "name": "AlertManagementPayloadAlertFieldName",
          "kind": "ENUM",
          "description": "Values for alert field names used in the custom mapping",
          "fields": null
        },
        {
          "name": "AlertManagementPayloadAlertFieldType",
          "kind": "ENUM",
          "description": "Values for alert field types used in the custom mapping",
          "fields": null
        },
        {
          "name": "AlertManagementPayloadAlertMappingField",
          "kind": "OBJECT",
          "description": "Parsed field (with its name) from an alert used for custom mappings",
          "fields": [
            {
              "name": "fieldName",
              "description": "GitLab alert field name."
            },
            {
              "name": "label",
              "description": "Human-readable label of the payload path."
            },
            {
              "name": "path",
              "description": "Path to value inside payload JSON."
            },
            {
              "name": "type",
              "description": "Type of the parsed value."
            }
          ]
        },
        {
          "name": "AlertManagementPrometheusIntegration",
          "kind": "OBJECT",
          "description": "An endpoint and credentials used to accept Prometheus alerts for a project",
          "fields": [
            {
              "name": "active",
              "description": "Whether the endpoint is currently accepting alerts."
            },
            {
              "name": "apiUrl",
              "description": "URL at which Prometheus metrics can be queried to populate the metrics dashboard."
            },
            {
              "name": "id",
              "description": "ID of the integration."
            },
            {
              "name": "name",
              "description": "Name of the integration."
            },
            {
              "name": "token",
              "description": "Token used to authenticate alert notification requests."
            },
            {
              "name": "type",
              "description": "Type of integration."
            },
            {
              "name": "url",
              "description": "Endpoint which accepts alert notifications."
            }
          ]
        },
        {
          "name": "AlertManagementSeverity",
          "kind": "ENUM",
          "description": "Alert severity values",
          "fields": null
        },
        {
          "name": "AlertManagementStatus",
          "kind": "ENUM",
          "description": "Alert status values",
          "fields": null
        },
        {
          "name": "AlertSetAssigneesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AlertSetAssignees",
          "fields": null
        },
        {
          "name": "AlertSetAssigneesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AlertSetAssignees",
          "fields": [
            {
              "name": "alert",
              "description": "Alert after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue created after mutation."
            },
            {
              "name": "todo",
              "description": "To-do item after mutation."
            }
          ]
        },
        {
          "name": "AlertTodoCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AlertTodoCreate",
          "fields": null
        },
        {
          "name": "AlertTodoCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AlertTodoCreate",
          "fields": [
            {
              "name": "alert",
              "description": "Alert after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue created after mutation."
            },
            {
              "name": "todo",
              "description": "To-do item after mutation."
            }
          ]
        },
        {
          "name": "AnalyticsDevopsAdoptionEnabledNamespaceID",
          "kind": "SCALAR",
          "description": "A `AnalyticsDevopsAdoptionEnabledNamespaceID` is a global ID. It is encoded as a string.\n\nAn example `AnalyticsDevopsAdoptionEnabledNamespaceID` is: `\"gid://gitlab/Analytics::DevopsAdoption::EnabledNamespace/1\"`.",
          "fields": null
        },
        {
          "name": "ApiFuzzingCiConfiguration",
          "kind": "OBJECT",
          "description": "Data associated with configuring API fuzzing scans in GitLab CI",
          "fields": [
            {
              "name": "scanModes",
              "description": "All available scan modes."
            },
            {
              "name": "scanProfiles",
              "description": "All default scan profiles."
            }
          ]
        },
        {
          "name": "ApiFuzzingCiConfigurationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ApiFuzzingCiConfigurationCreate",
          "fields": null
        },
        {
          "name": "ApiFuzzingCiConfigurationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ApiFuzzingCiConfigurationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ApiFuzzingScanMode",
          "kind": "ENUM",
          "description": "All possible ways to specify the API surface for an API fuzzing scan.",
          "fields": null
        },
        {
          "name": "ApiFuzzingScanProfile",
          "kind": "OBJECT",
          "description": "An API Fuzzing scan profile.",
          "fields": [
            {
              "name": "description",
              "description": "Short description of the profile."
            },
            {
              "name": "name",
              "description": "Unique name of the profile."
            },
            {
              "name": "yaml",
              "description": "Syntax highlighted HTML representation of the YAML."
            }
          ]
        },
        {
          "name": "AppSecFuzzingCoverageCorpusID",
          "kind": "SCALAR",
          "description": "A `AppSecFuzzingCoverageCorpusID` is a global ID. It is encoded as a string.\n\nAn example `AppSecFuzzingCoverageCorpusID` is: `\"gid://gitlab/AppSec::Fuzzing::Coverage::Corpus/1\"`.",
          "fields": null
        },
        {
          "name": "ApprovalProjectRule",
          "kind": "OBJECT",
          "description": "Describes a project approval rule regarding who can approve merge requests.",
          "fields": [
            {
              "name": "approvalsRequired",
              "description": "Number of required approvals."
            },
            {
              "name": "eligibleApprovers",
              "description": "List of users eligible to approve merge requests for this approval rule."
            },
            {
              "name": "id",
              "description": "ID of the rule."
            },
            {
              "name": "name",
              "description": "Name of the rule."
            },
            {
              "name": "type",
              "description": "Type of the rule."
            }
          ]
        },
        {
          "name": "ApprovalProjectRuleConnection",
          "kind": "OBJECT",
          "description": "The connection type for ApprovalProjectRule.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ApprovalProjectRuleEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ApprovalRule",
          "kind": "OBJECT",
          "description": "Describes a rule for who can approve merge requests.",
          "fields": [
            {
              "name": "approvalsRequired",
              "description": "Number of required approvals."
            },
            {
              "name": "approved",
              "description": "Indicates if the rule is satisfied."
            },
            {
              "name": "approvedBy",
              "description": "List of users defined in the rule that approved the merge request."
            },
            {
              "name": "commentedBy",
              "description": "List of users, defined in the rule, who commented on the merge request."
            },
            {
              "name": "containsHiddenGroups",
              "description": "Indicates if the rule contains approvers from a hidden group."
            },
            {
              "name": "eligibleApprovers",
              "description": "List of all users eligible to approve the merge request (defined explicitly and from associated groups)."
            },
            {
              "name": "groups",
              "description": "List of groups added as approvers for the rule."
            },
            {
              "name": "id",
              "description": "ID of the rule."
            },
            {
              "name": "name",
              "description": "Name of the rule."
            },
            {
              "name": "overridden",
              "description": "Indicates if the rule was overridden for the merge request."
            },
            {
              "name": "section",
              "description": "Named section of the Code Owners file that the rule applies to."
            },
            {
              "name": "sourceRule",
              "description": "Source rule used to create the rule."
            },
            {
              "name": "type",
              "description": "Type of the rule."
            },
            {
              "name": "users",
              "description": "List of users added as approvers for the rule."
            }
          ]
        },
        {
          "name": "ApprovalRuleType",
          "kind": "ENUM",
          "description": "The kind of an approval rule.",
          "fields": null
        },
        {
          "name": "ApproveDeploymentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ApproveDeployment",
          "fields": null
        },
        {
          "name": "ApproveDeploymentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ApproveDeployment",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "deploymentApproval",
              "description": "DeploymentApproval after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ArtifactDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ArtifactDestroy",
          "fields": null
        },
        {
          "name": "ArtifactDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ArtifactDestroy",
          "fields": [
            {
              "name": "artifact",
              "description": "Deleted artifact."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "AssetType",
          "kind": "OBJECT",
          "description": "Represents a vulnerability asset type.",
          "fields": [
            {
              "name": "name",
              "description": "Name of the asset."
            },
            {
              "name": "type",
              "description": "Type of the asset."
            },
            {
              "name": "url",
              "description": "URL of the asset."
            }
          ]
        },
        {
          "name": "AssigneeWildcardId",
          "kind": "ENUM",
          "description": "Assignee ID wildcard values",
          "fields": null
        },
        {
          "name": "AuditEventStreamingHeader",
          "kind": "OBJECT",
          "description": "Represents a HTTP header key/value that belongs to an audit streaming destination.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the header."
            },
            {
              "name": "key",
              "description": "Key of the header."
            },
            {
              "name": "value",
              "description": "Value of the header."
            }
          ]
        },
        {
          "name": "AuditEventStreamingHeaderConnection",
          "kind": "OBJECT",
          "description": "The connection type for AuditEventStreamingHeader.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "AuditEventStreamingHeaderEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "AuditEventsExternalAuditEventDestinationID",
          "kind": "SCALAR",
          "description": "A `AuditEventsExternalAuditEventDestinationID` is a global ID. It is encoded as a string.\n\nAn example `AuditEventsExternalAuditEventDestinationID` is: `\"gid://gitlab/AuditEvents::ExternalAuditEventDestination/1\"`.",
          "fields": null
        },
        {
          "name": "AuditEventsStreamingDestinationEventsAddInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AuditEventsStreamingDestinationEventsAdd",
          "fields": null
        },
        {
          "name": "AuditEventsStreamingDestinationEventsAddPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AuditEventsStreamingDestinationEventsAdd",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "eventTypeFilters",
              "description": "Event type filters present."
            }
          ]
        },
        {
          "name": "AuditEventsStreamingDestinationEventsRemoveInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AuditEventsStreamingDestinationEventsRemove",
          "fields": null
        },
        {
          "name": "AuditEventsStreamingDestinationEventsRemovePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AuditEventsStreamingDestinationEventsRemove",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "AuditEventsStreamingHeaderID",
          "kind": "SCALAR",
          "description": "A `AuditEventsStreamingHeaderID` is a global ID. It is encoded as a string.\n\nAn example `AuditEventsStreamingHeaderID` is: `\"gid://gitlab/AuditEvents::Streaming::Header/1\"`.",
          "fields": null
        },
        {
          "name": "AuditEventsStreamingHeadersCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AuditEventsStreamingHeadersCreate",
          "fields": null
        },
        {
          "name": "AuditEventsStreamingHeadersCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AuditEventsStreamingHeadersCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "header",
              "description": "Created header."
            }
          ]
        },
        {
          "name": "AuditEventsStreamingHeadersDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AuditEventsStreamingHeadersDestroy",
          "fields": null
        },
        {
          "name": "AuditEventsStreamingHeadersDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AuditEventsStreamingHeadersDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "AuditEventsStreamingHeadersUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AuditEventsStreamingHeadersUpdate",
          "fields": null
        },
        {
          "name": "AuditEventsStreamingHeadersUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AuditEventsStreamingHeadersUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "header",
              "description": "Updates header."
            }
          ]
        },
        {
          "name": "AvailabilityEnum",
          "kind": "ENUM",
          "description": "User availability status",
          "fields": null
        },
        {
          "name": "AwardEmoji",
          "kind": "OBJECT",
          "description": "An emoji awarded by a user",
          "fields": [
            {
              "name": "description",
              "description": "Emoji description."
            },
            {
              "name": "emoji",
              "description": "Emoji as an icon."
            },
            {
              "name": "name",
              "description": "Emoji name."
            },
            {
              "name": "unicode",
              "description": "Emoji in Unicode."
            },
            {
              "name": "unicodeVersion",
              "description": "Unicode version for this emoji."
            },
            {
              "name": "user",
              "description": "User who awarded the emoji."
            }
          ]
        },
        {
          "name": "AwardEmojiAddInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AwardEmojiAdd",
          "fields": null
        },
        {
          "name": "AwardEmojiAddPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AwardEmojiAdd",
          "fields": [
            {
              "name": "awardEmoji",
              "description": "Award emoji after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "AwardEmojiConnection",
          "kind": "OBJECT",
          "description": "The connection type for AwardEmoji.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "AwardEmojiEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "AwardEmojiRemoveInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AwardEmojiRemove",
          "fields": null
        },
        {
          "name": "AwardEmojiRemovePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AwardEmojiRemove",
          "fields": [
            {
              "name": "awardEmoji",
              "description": "Award emoji after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "AwardEmojiToggleInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of AwardEmojiToggle",
          "fields": null
        },
        {
          "name": "AwardEmojiTogglePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of AwardEmojiToggle",
          "fields": [
            {
              "name": "awardEmoji",
              "description": "Award emoji after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "toggledOn",
              "description": "Indicates the status of the emoji. True if the toggle awarded the emoji, and false if the toggle removed the emoji."
            }
          ]
        },
        {
          "name": "AwardableID",
          "kind": "SCALAR",
          "description": "A `AwardableID` is a global ID. It is encoded as a string.\n\nAn example `AwardableID` is: `\"gid://gitlab/Awardable/1\"`.",
          "fields": null
        },
        {
          "name": "BaseService",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "Indicates if the service is active."
            },
            {
              "name": "serviceType",
              "description": "Type of the service."
            },
            {
              "name": "type",
              "description": "Class name of the service."
            }
          ]
        },
        {
          "name": "BigInt",
          "kind": "SCALAR",
          "description": "Represents non-fractional signed whole numeric values. Since the value may exceed the size of a 32-bit integer, it's encoded as a string.",
          "fields": null
        },
        {
          "name": "Blob",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "flatPath",
              "description": "Flat path of the entry."
            },
            {
              "name": "id",
              "description": "ID of the entry."
            },
            {
              "name": "lfsOid",
              "description": "LFS ID of the blob."
            },
            {
              "name": "mode",
              "description": "Blob mode in numeric format."
            },
            {
              "name": "name",
              "description": "Name of the entry."
            },
            {
              "name": "path",
              "description": "Path of the entry."
            },
            {
              "name": "sha",
              "description": "Last commit SHA for the entry."
            },
            {
              "name": "type",
              "description": "Type of tree entry."
            },
            {
              "name": "webPath",
              "description": "Web path of the blob."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the blob."
            }
          ]
        },
        {
          "name": "BlobConnection",
          "kind": "OBJECT",
          "description": "The connection type for Blob.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "BlobEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "BlobViewer",
          "kind": "OBJECT",
          "description": "Represents how the blob content should be displayed",
          "fields": [
            {
              "name": "collapsed",
              "description": "Shows whether the blob should be displayed collapsed."
            },
            {
              "name": "fileType",
              "description": "Content file type."
            },
            {
              "name": "loadAsync",
              "description": "Shows whether the blob content is loaded asynchronously."
            },
            {
              "name": "loadingPartialName",
              "description": "Loading partial name."
            },
            {
              "name": "renderError",
              "description": "Error rendering the blob content."
            },
            {
              "name": "tooLarge",
              "description": "Shows whether the blob is too large to be displayed."
            },
            {
              "name": "type",
              "description": "Type of blob viewer."
            }
          ]
        },
        {
          "name": "BlobViewersType",
          "kind": "ENUM",
          "description": "Types of blob viewers",
          "fields": null
        },
        {
          "name": "Board",
          "kind": "OBJECT",
          "description": "Represents a project or group issue board",
          "fields": [
            {
              "name": "assignee",
              "description": "Board assignee."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the board was created."
            },
            {
              "name": "epics",
              "description": "Epics associated with board issues."
            },
            {
              "name": "hideBacklogList",
              "description": "Whether or not backlog list is hidden."
            },
            {
              "name": "hideClosedList",
              "description": "Whether or not closed list is hidden."
            },
            {
              "name": "id",
              "description": "ID (global ID) of the board."
            },
            {
              "name": "iteration",
              "description": "Board iteration."
            },
            {
              "name": "iterationCadence",
              "description": "Board iteration cadence."
            },
            {
              "name": "labels",
              "description": "Labels of the board."
            },
            {
              "name": "lists",
              "description": "Lists of the board."
            },
            {
              "name": "milestone",
              "description": "Board milestone."
            },
            {
              "name": "name",
              "description": "Name of the board."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the board was last updated."
            },
            {
              "name": "webPath",
              "description": "Web path of the board."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the board."
            },
            {
              "name": "weight",
              "description": "Weight of the board."
            }
          ]
        },
        {
          "name": "BoardConnection",
          "kind": "OBJECT",
          "description": "The connection type for Board.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "BoardEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "BoardEpic",
          "kind": "OBJECT",
          "description": "Represents an epic on an issue board",
          "fields": [
            {
              "name": "ancestors",
              "description": "Ancestors (parents) of the epic."
            },
            {
              "name": "author",
              "description": "Author of the epic."
            },
            {
              "name": "awardEmoji",
              "description": "List of award emojis associated with the epic."
            },
            {
              "name": "blocked",
              "description": "Indicates the epic is blocked."
            },
            {
              "name": "blockedByCount",
              "description": "Count of epics blocking this epic."
            },
            {
              "name": "blockedByEpics",
              "description": "Epics blocking this epic."
            },
            {
              "name": "blockingCount",
              "description": "Count of epics that this epic is blocking."
            },
            {
              "name": "children",
              "description": "Children (sub-epics) of the epic."
            },
            {
              "name": "closedAt",
              "description": "Timestamp of when the epic was closed."
            },
            {
              "name": "color",
              "description": "Color of the epic. Returns `null` if `epic_color_highlight` feature flag is disabled."
            },
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "confidential",
              "description": "Indicates if the epic is confidential."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the epic was created."
            },
            {
              "name": "currentUserTodos",
              "description": "To-do items for the current user."
            },
            {
              "name": "defaultProjectForIssueCreation",
              "description": "Default Project for issue creation. Based on the project the user created the last issue in."
            },
            {
              "name": "descendantCounts",
              "description": "Number of open and closed descendant epics and issues."
            },
            {
              "name": "descendantWeightSum",
              "description": "Total weight of open and closed issues in the epic and its descendants."
            },
            {
              "name": "description",
              "description": "Description of the epic."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "downvotes",
              "description": "Number of downvotes the epic has received."
            },
            {
              "name": "dueDate",
              "description": "Due date of the epic."
            },
            {
              "name": "dueDateFixed",
              "description": "Fixed due date of the epic."
            },
            {
              "name": "dueDateFromInheritedSource",
              "description": "Inherited due date of the epic from child epics or milestones."
            },
            {
              "name": "dueDateFromMilestones",
              "description": "Inherited due date of the epic from milestones."
            },
            {
              "name": "dueDateIsFixed",
              "description": "Indicates if the due date has been manually set."
            },
            {
              "name": "events",
              "description": "List of events associated with the object."
            },
            {
              "name": "group",
              "description": "Group to which the epic belongs."
            },
            {
              "name": "hasChildren",
              "description": "Indicates if the epic has children."
            },
            {
              "name": "hasIssues",
              "description": "Indicates if the epic has direct issues."
            },
            {
              "name": "hasParent",
              "description": "Indicates if the epic has a parent epic."
            },
            {
              "name": "healthStatus",
              "description": "Current health status of the epic."
            },
            {
              "name": "id",
              "description": "ID of the epic."
            },
            {
              "name": "iid",
              "description": "Internal ID of the epic."
            },
            {
              "name": "issues",
              "description": "A list of issues associated with the epic."
            },
            {
              "name": "labels",
              "description": "Labels assigned to the epic."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "parent",
              "description": "Parent epic of the epic."
            },
            {
              "name": "participants",
              "description": "List of participants for the epic."
            },
            {
              "name": "reference",
              "description": "Internal reference of the epic. Returned in shortened format by default."
            },
            {
              "name": "relationPath",
              "description": "URI path of the epic-issue relationship."
            },
            {
              "name": "relativePosition",
              "description": "Relative position of the epic in the epic tree."
            },
            {
              "name": "startDate",
              "description": "Start date of the epic."
            },
            {
              "name": "startDateFixed",
              "description": "Fixed start date of the epic."
            },
            {
              "name": "startDateFromInheritedSource",
              "description": "Inherited start date of the epic from child epics or milestones."
            },
            {
              "name": "startDateFromMilestones",
              "description": "Inherited start date of the epic from milestones."
            },
            {
              "name": "startDateIsFixed",
              "description": "Indicates if the start date has been manually set."
            },
            {
              "name": "state",
              "description": "State of the epic."
            },
            {
              "name": "subscribed",
              "description": "Indicates the currently logged in user is subscribed to the epic."
            },
            {
              "name": "textColor",
              "description": "Text color generated for the epic. Returns `null` if `epic_color_highlight` feature flag is disabled."
            },
            {
              "name": "title",
              "description": "Title of the epic."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`"
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the epic was updated."
            },
            {
              "name": "upvotes",
              "description": "Number of upvotes the epic has received."
            },
            {
              "name": "userDiscussionsCount",
              "description": "Number of user discussions in the epic."
            },
            {
              "name": "userNotesCount",
              "description": "Number of user notes of the epic."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "userPreferences",
              "description": "User preferences for the epic on the issue board."
            },
            {
              "name": "webPath",
              "description": "Web path of the epic."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the epic."
            }
          ]
        },
        {
          "name": "BoardEpicConnection",
          "kind": "OBJECT",
          "description": "The connection type for BoardEpic.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "BoardEpicCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of BoardEpicCreate",
          "fields": null
        },
        {
          "name": "BoardEpicCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of BoardEpicCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epic",
              "description": "Epic after creation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "BoardEpicEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "BoardEpicUserPreferences",
          "kind": "OBJECT",
          "description": "Represents user preferences for a board epic",
          "fields": [
            {
              "name": "collapsed",
              "description": "Indicates epic should be displayed as collapsed."
            }
          ]
        },
        {
          "name": "BoardID",
          "kind": "SCALAR",
          "description": "A `BoardID` is a global ID. It is encoded as a string.\n\nAn example `BoardID` is: `\"gid://gitlab/Board/1\"`.",
          "fields": null
        },
        {
          "name": "BoardIssueInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "BoardList",
          "kind": "OBJECT",
          "description": "Represents a list for an issue board",
          "fields": [
            {
              "name": "assignee",
              "description": "Assignee in the list."
            },
            {
              "name": "collapsed",
              "description": "Indicates if the list is collapsed for this user."
            },
            {
              "name": "id",
              "description": "ID (global ID) of the list."
            },
            {
              "name": "issues",
              "description": "Board issues."
            },
            {
              "name": "issuesCount",
              "description": "Count of issues in the list."
            },
            {
              "name": "iteration",
              "description": "Iteration of the list."
            },
            {
              "name": "label",
              "description": "Label of the list."
            },
            {
              "name": "limitMetric",
              "description": "Current limit metric for the list."
            },
            {
              "name": "listType",
              "description": "Type of the list."
            },
            {
              "name": "maxIssueCount",
              "description": "Maximum number of issues in the list."
            },
            {
              "name": "maxIssueWeight",
              "description": "Maximum weight of issues in the list."
            },
            {
              "name": "milestone",
              "description": "Milestone of the list."
            },
            {
              "name": "position",
              "description": "Position of list within the board."
            },
            {
              "name": "title",
              "description": "Title of the list."
            },
            {
              "name": "totalWeight",
              "description": "Total weight of all issues in the list."
            }
          ]
        },
        {
          "name": "BoardListConnection",
          "kind": "OBJECT",
          "description": "The connection type for BoardList.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "BoardListCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of BoardListCreate",
          "fields": null
        },
        {
          "name": "BoardListCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of BoardListCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "list",
              "description": "Issue list in the issue board."
            }
          ]
        },
        {
          "name": "BoardListEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "BoardListUpdateLimitMetricsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of BoardListUpdateLimitMetrics",
          "fields": null
        },
        {
          "name": "BoardListUpdateLimitMetricsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of BoardListUpdateLimitMetrics",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "list",
              "description": "Updated list."
            }
          ]
        },
        {
          "name": "BoardsEpicBoardID",
          "kind": "SCALAR",
          "description": "A `BoardsEpicBoardID` is a global ID. It is encoded as a string.\n\nAn example `BoardsEpicBoardID` is: `\"gid://gitlab/Boards::EpicBoard/1\"`.",
          "fields": null
        },
        {
          "name": "BoardsEpicListID",
          "kind": "SCALAR",
          "description": "A `BoardsEpicListID` is a global ID. It is encoded as a string.\n\nAn example `BoardsEpicListID` is: `\"gid://gitlab/Boards::EpicList/1\"`.",
          "fields": null
        },
        {
          "name": "Boolean",
          "kind": "SCALAR",
          "description": "Represents `true` or `false` values.",
          "fields": null
        },
        {
          "name": "Branch",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "commit",
              "description": "Commit for the branch."
            },
            {
              "name": "name",
              "description": "Name of the branch."
            }
          ]
        },
        {
          "name": "BranchProtection",
          "kind": "OBJECT",
          "description": "Branch protection details for a branch rule.",
          "fields": [
            {
              "name": "allowForcePush",
              "description": "Toggle force push to the branch for users with write access."
            },
            {
              "name": "codeOwnerApprovalRequired",
              "description": "Enforce code owner approvals before allowing a merge."
            },
            {
              "name": "mergeAccessLevels",
              "description": "Details about who can merge when this branch is the source branch."
            },
            {
              "name": "pushAccessLevels",
              "description": "Details about who can push when this branch is the source branch."
            },
            {
              "name": "unprotectAccessLevels",
              "description": "Details about who can unprotect this branch."
            }
          ]
        },
        {
          "name": "BranchRule",
          "kind": "OBJECT",
          "description": "List of branch rules for a project, grouped by branch name.",
          "fields": [
            {
              "name": "approvalRules",
              "description": "Merge request approval rules configured for this branch rule."
            },
            {
              "name": "branchProtection",
              "description": "Branch protections configured for this branch rule."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the branch rule was created."
            },
            {
              "name": "externalStatusChecks",
              "description": "External status checks configured for this branch rule."
            },
            {
              "name": "isDefault",
              "description": "Check if this branch rule protects the project's default branch."
            },
            {
              "name": "isProtected",
              "description": "Check if this branch rule protects access for the branch."
            },
            {
              "name": "matchingBranchesCount",
              "description": "Number of existing branches that match this branch rule."
            },
            {
              "name": "name",
              "description": "Branch name, with wildcards, for the branch rules."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the branch rule was last updated."
            }
          ]
        },
        {
          "name": "BranchRuleConnection",
          "kind": "OBJECT",
          "description": "The connection type for BranchRule.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "BranchRuleEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "BulkEnableDevopsAdoptionNamespacesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of BulkEnableDevopsAdoptionNamespaces",
          "fields": null
        },
        {
          "name": "BulkEnableDevopsAdoptionNamespacesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of BulkEnableDevopsAdoptionNamespaces",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "enabledNamespaces",
              "description": "Enabled namespaces after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "BulkRunnerDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of BulkRunnerDelete",
          "fields": null
        },
        {
          "name": "BulkRunnerDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of BulkRunnerDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "deletedCount",
              "description": "Number of records effectively deleted. Only present if operation was performed synchronously."
            },
            {
              "name": "deletedIds",
              "description": "IDs of records effectively deleted. Only present if operation was performed synchronously."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "BurnupChartDailyTotals",
          "kind": "OBJECT",
          "description": "Represents the total number of issues and their weights for a particular day",
          "fields": [
            {
              "name": "completedCount",
              "description": "Number of closed issues as of this day."
            },
            {
              "name": "completedWeight",
              "description": "Total weight of closed issues as of this day."
            },
            {
              "name": "date",
              "description": "Date for burnup totals."
            },
            {
              "name": "scopeCount",
              "description": "Number of issues as of this day."
            },
            {
              "name": "scopeWeight",
              "description": "Total weight of issues as of this day."
            }
          ]
        },
        {
          "name": "CiApplicationSettings",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "keepLatestArtifact",
              "description": "Whether to keep the latest jobs artifacts."
            }
          ]
        },
        {
          "name": "CiBuildID",
          "kind": "SCALAR",
          "description": "A `CiBuildID` is a global ID. It is encoded as a string.\n\nAn example `CiBuildID` is: `\"gid://gitlab/Ci::Build/1\"`.",
          "fields": null
        },
        {
          "name": "CiBuildNeed",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "ID of the BuildNeed."
            },
            {
              "name": "name",
              "description": "Name of the job we need to complete."
            }
          ]
        },
        {
          "name": "CiBuildNeedConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiBuildNeed.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiBuildNeedEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiCdSettingsUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CiCdSettingsUpdate",
          "fields": null
        },
        {
          "name": "CiCdSettingsUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CiCdSettingsUpdate",
          "fields": [
            {
              "name": "ciCdSettings",
              "description": "CI/CD settings after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CiConfig",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "errors",
              "description": "Linting errors."
            },
            {
              "name": "includes",
              "description": "List of included files."
            },
            {
              "name": "mergedYaml",
              "description": "Merged CI configuration YAML."
            },
            {
              "name": "stages",
              "description": "Stages of the pipeline."
            },
            {
              "name": "status",
              "description": "Status of linting, can be either valid or invalid."
            },
            {
              "name": "warnings",
              "description": "Linting warnings."
            }
          ]
        },
        {
          "name": "CiConfigGroup",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "jobs",
              "description": "Jobs in group."
            },
            {
              "name": "name",
              "description": "Name of the job group."
            },
            {
              "name": "size",
              "description": "Size of the job group."
            }
          ]
        },
        {
          "name": "CiConfigGroupConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiConfigGroup.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiConfigGroupEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiConfigInclude",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "blob",
              "description": "File blob location. It can be masked if it contains masked variables, e.g., \"https://gitlab.com/gitlab-org/gitlab/-/blob/e52d6d0246d7375291850e61f0abc101fbda9dc2/.gitlab/ci/build-images.gitlab-ci.yml\"."
            },
            {
              "name": "contextProject",
              "description": "Current project scope, e.g., \"gitlab-org/gitlab\"."
            },
            {
              "name": "contextSha",
              "description": "Current sha scope."
            },
            {
              "name": "extra",
              "description": "Extra information for the `include`, which can contain `job_name`, `project`, and `ref`. Values can be masked if they contain masked variables."
            },
            {
              "name": "location",
              "description": "File location. It can be masked if it contains masked variables, e.g., \".gitlab/ci/build-images.gitlab-ci.yml\"."
            },
            {
              "name": "raw",
              "description": "File raw location. It can be masked if it contains masked variables, e.g., \"https://gitlab.com/gitlab-org/gitlab/-/raw/e52d6d0246d7375291850e61f0abc101fbda9dc2/.gitlab/ci/build-images.gitlab-ci.yml\"."
            },
            {
              "name": "type",
              "description": "Include type."
            }
          ]
        },
        {
          "name": "CiConfigIncludeType",
          "kind": "ENUM",
          "description": "Include type.",
          "fields": null
        },
        {
          "name": "CiConfigJob",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "afterScript",
              "description": "Override a set of commands that are executed after the job."
            },
            {
              "name": "allowFailure",
              "description": "Allow job to fail."
            },
            {
              "name": "beforeScript",
              "description": "Override a set of commands that are executed before the job."
            },
            {
              "name": "environment",
              "description": "Name of an environment to which the job deploys."
            },
            {
              "name": "except",
              "description": "Limit when jobs are not created."
            },
            {
              "name": "groupName",
              "description": "Name of the job group."
            },
            {
              "name": "name",
              "description": "Name of the job."
            },
            {
              "name": "needs",
              "description": "Builds that must complete before the jobs run."
            },
            {
              "name": "only",
              "description": "Jobs are created when these conditions do not apply."
            },
            {
              "name": "script",
              "description": "Shell script that is executed by a runner."
            },
            {
              "name": "stage",
              "description": "Name of the job stage."
            },
            {
              "name": "tags",
              "description": "List of tags that are used to select a runner."
            },
            {
              "name": "when",
              "description": "When to run the job."
            }
          ]
        },
        {
          "name": "CiConfigJobConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiConfigJob.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiConfigJobEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiConfigJobRestriction",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "refs",
              "description": "Git refs the job restriction applies to."
            }
          ]
        },
        {
          "name": "CiConfigNeed",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "name",
              "description": "Name of the need."
            }
          ]
        },
        {
          "name": "CiConfigNeedConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiConfigNeed.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiConfigNeedEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiConfigStage",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "groups",
              "description": "Groups of jobs for the stage."
            },
            {
              "name": "name",
              "description": "Name of the stage."
            }
          ]
        },
        {
          "name": "CiConfigStageConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiConfigStage.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiConfigStageEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiConfigStatus",
          "kind": "ENUM",
          "description": "Values for YAML processor result",
          "fields": null
        },
        {
          "name": "CiConfigVariable",
          "kind": "OBJECT",
          "description": "CI/CD config variables.",
          "fields": [
            {
              "name": "description",
              "description": "Description for the CI/CD config variable."
            },
            {
              "name": "key",
              "description": "Name of the variable."
            },
            {
              "name": "value",
              "description": "Value of the variable."
            },
            {
              "name": "valueOptions",
              "description": "Value options for the variable."
            }
          ]
        },
        {
          "name": "CiFreezePeriod",
          "kind": "OBJECT",
          "description": "Represents a deployment freeze window of a project",
          "fields": [
            {
              "name": "cronTimezone",
              "description": "Time zone for the cron fields, defaults to UTC if not provided."
            },
            {
              "name": "endCron",
              "description": "End of the freeze period in cron format."
            },
            {
              "name": "endTime",
              "description": "Timestamp (UTC) of when the current/next active period ends."
            },
            {
              "name": "startCron",
              "description": "Start of the freeze period in cron format."
            },
            {
              "name": "startTime",
              "description": "Timestamp (UTC) of when the current/next active period starts."
            },
            {
              "name": "status",
              "description": "Freeze period status."
            }
          ]
        },
        {
          "name": "CiFreezePeriodStatus",
          "kind": "ENUM",
          "description": "Deploy freeze period status",
          "fields": null
        },
        {
          "name": "CiGroup",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "detailedStatus",
              "description": "Detailed status of the group."
            },
            {
              "name": "id",
              "description": "ID for a group."
            },
            {
              "name": "jobs",
              "description": "Jobs in group."
            },
            {
              "name": "name",
              "description": "Name of the job group."
            },
            {
              "name": "size",
              "description": "Size of the group."
            }
          ]
        },
        {
          "name": "CiGroupConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiGroup.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiGroupEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiGroupVariable",
          "kind": "OBJECT",
          "description": "CI/CD variables for a group.",
          "fields": [
            {
              "name": "environmentScope",
              "description": "Scope defining the environments that can use the variable."
            },
            {
              "name": "id",
              "description": "ID of the variable."
            },
            {
              "name": "key",
              "description": "Name of the variable."
            },
            {
              "name": "masked",
              "description": "Indicates whether the variable is masked."
            },
            {
              "name": "protected",
              "description": "Indicates whether the variable is protected."
            },
            {
              "name": "raw",
              "description": "Indicates whether the variable is raw."
            },
            {
              "name": "value",
              "description": "Value of the variable."
            },
            {
              "name": "variableType",
              "description": "Type of the variable."
            }
          ]
        },
        {
          "name": "CiGroupVariableConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiGroupVariable.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "limit",
              "description": "Maximum amount of group CI/CD variables."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiGroupVariableEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiInstanceVariable",
          "kind": "OBJECT",
          "description": "CI/CD variables for a GitLab instance.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the variable."
            },
            {
              "name": "key",
              "description": "Name of the variable."
            },
            {
              "name": "masked",
              "description": "Indicates whether the variable is masked."
            },
            {
              "name": "protected",
              "description": "Indicates whether the variable is protected."
            },
            {
              "name": "raw",
              "description": "Indicates whether the variable is raw."
            },
            {
              "name": "value",
              "description": "Value of the variable."
            },
            {
              "name": "variableType",
              "description": "Type of the variable."
            }
          ]
        },
        {
          "name": "CiInstanceVariableConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiInstanceVariable.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiInstanceVariableEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiJob",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "Indicates the job is active."
            },
            {
              "name": "allowFailure",
              "description": "Whether the job is allowed to fail."
            },
            {
              "name": "artifacts",
              "description": "Artifacts generated by the job."
            },
            {
              "name": "browseArtifactsPath",
              "description": "URL for browsing the artifact's archive."
            },
            {
              "name": "cancelable",
              "description": "Indicates the job can be canceled."
            },
            {
              "name": "commitPath",
              "description": "Path to the commit that triggered the job."
            },
            {
              "name": "coverage",
              "description": "Coverage level of the job."
            },
            {
              "name": "createdAt",
              "description": "When the job was created."
            },
            {
              "name": "createdByTag",
              "description": "Whether the job was created by a tag."
            },
            {
              "name": "detailedStatus",
              "description": "Detailed status of the job."
            },
            {
              "name": "downstreamPipeline",
              "description": "Downstream pipeline for a bridge."
            },
            {
              "name": "duration",
              "description": "Duration of the job in seconds."
            },
            {
              "name": "erasedAt",
              "description": "When the job was erased."
            },
            {
              "name": "finishedAt",
              "description": "When a job has finished running."
            },
            {
              "name": "id",
              "description": "ID of the job."
            },
            {
              "name": "kind",
              "description": "Indicates the type of job."
            },
            {
              "name": "manualJob",
              "description": "Whether the job has a manual action."
            },
            {
              "name": "manualVariables",
              "description": "Variables added to a manual job when the job is triggered."
            },
            {
              "name": "name",
              "description": "Name of the job."
            },
            {
              "name": "needs",
              "description": "References to builds that must complete before the jobs run."
            },
            {
              "name": "pipeline",
              "description": "Pipeline the job belongs to."
            },
            {
              "name": "playable",
              "description": "Indicates the job can be played."
            },
            {
              "name": "previousStageJobsOrNeeds",
              "description": "Jobs that must complete before the job runs. Returns `BuildNeed`, which is the needed jobs if the job uses the `needs` keyword, or the previous stage jobs otherwise."
            },
            {
              "name": "project",
              "description": "Project that the job belongs to."
            },
            {
              "name": "queuedAt",
              "description": "When the job was enqueued and marked as pending."
            },
            {
              "name": "queuedDuration",
              "description": "How long the job was enqueued before starting."
            },
            {
              "name": "refName",
              "description": "Ref name of the job."
            },
            {
              "name": "refPath",
              "description": "Path to the ref."
            },
            {
              "name": "retried",
              "description": "Indicates that the job has been retried."
            },
            {
              "name": "retryable",
              "description": "Indicates the job can be retried."
            },
            {
              "name": "scheduledAt",
              "description": "Schedule for the build."
            },
            {
              "name": "schedulingType",
              "description": "Type of job scheduling. Value is `dag` if the job uses the `needs` keyword, and `stage` otherwise."
            },
            {
              "name": "shortSha",
              "description": "Short SHA1 ID of the commit."
            },
            {
              "name": "stage",
              "description": "Stage of the job."
            },
            {
              "name": "startedAt",
              "description": "When the job was started."
            },
            {
              "name": "status",
              "description": "Status of the job."
            },
            {
              "name": "stuck",
              "description": "Indicates the job is stuck."
            },
            {
              "name": "tags",
              "description": "Tags for the current job."
            },
            {
              "name": "triggered",
              "description": "Whether the job was triggered."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "webPath",
              "description": "Web path of the job."
            }
          ]
        },
        {
          "name": "CiJobArtifact",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "downloadPath",
              "description": "URL for downloading the artifact's file."
            },
            {
              "name": "expireAt",
              "description": "Expiry date of the artifact."
            },
            {
              "name": "fileType",
              "description": "File type of the artifact."
            },
            {
              "name": "id",
              "description": "ID of the artifact."
            },
            {
              "name": "name",
              "description": "File name of the artifact."
            },
            {
              "name": "size",
              "description": "Size of the artifact in bytes."
            }
          ]
        },
        {
          "name": "CiJobArtifactConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiJobArtifact.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiJobArtifactEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiJobArtifactID",
          "kind": "SCALAR",
          "description": "A `CiJobArtifactID` is a global ID. It is encoded as a string.\n\nAn example `CiJobArtifactID` is: `\"gid://gitlab/Ci::JobArtifact/1\"`.",
          "fields": null
        },
        {
          "name": "CiJobConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiJob.",
          "fields": [
            {
              "name": "count",
              "description": "Limited count of collection. Returns limit + 1 for counts greater than the limit."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiJobEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiJobKind",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CiJobStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CiJobTokenScopeAddProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CiJobTokenScopeAddProject",
          "fields": null
        },
        {
          "name": "CiJobTokenScopeAddProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CiJobTokenScopeAddProject",
          "fields": [
            {
              "name": "ciJobTokenScope",
              "description": "CI job token's access scope."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CiJobTokenScopeDirection",
          "kind": "ENUM",
          "description": "Direction of access.",
          "fields": null
        },
        {
          "name": "CiJobTokenScopeRemoveProjectInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CiJobTokenScopeRemoveProject",
          "fields": null
        },
        {
          "name": "CiJobTokenScopeRemoveProjectPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CiJobTokenScopeRemoveProject",
          "fields": [
            {
              "name": "ciJobTokenScope",
              "description": "CI job token's scope of access."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CiJobTokenScopeType",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "inboundAllowlist",
              "description": "Allow list of projects that can access the current project through its CI Job tokens."
            },
            {
              "name": "outboundAllowlist",
              "description": "Allow list of projects that are accessible using the current project's CI Job tokens."
            }
          ]
        },
        {
          "name": "CiJobsDurationStatistics",
          "kind": "OBJECT",
          "description": "Representation of duration statistics for a group of CI jobs.",
          "fields": []
        },
        {
          "name": "CiJobsStatistics",
          "kind": "OBJECT",
          "description": "Statistics for a group of CI jobs.",
          "fields": []
        },
        {
          "name": "CiManualVariable",
          "kind": "OBJECT",
          "description": "CI/CD variables given to a manual job.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the variable."
            },
            {
              "name": "key",
              "description": "Name of the variable."
            },
            {
              "name": "raw",
              "description": "Indicates whether the variable is raw."
            },
            {
              "name": "value",
              "description": "Value of the variable."
            },
            {
              "name": "variableType",
              "description": "Type of the variable."
            }
          ]
        },
        {
          "name": "CiManualVariableConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiManualVariable.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiManualVariableEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiMinutesNamespaceMonthlyUsage",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "minutes",
              "description": "Total number of minutes used by all projects in the namespace."
            },
            {
              "name": "month",
              "description": "Month related to the usage data."
            },
            {
              "name": "monthIso8601",
              "description": "Month related to the usage data in ISO 8601 date format."
            },
            {
              "name": "projects",
              "description": "CI/CD minutes usage data for projects in the namespace."
            },
            {
              "name": "sharedRunnersDuration",
              "description": "Total duration (in seconds) of shared runners use by the namespace for the month."
            }
          ]
        },
        {
          "name": "CiMinutesNamespaceMonthlyUsageConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiMinutesNamespaceMonthlyUsage.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiMinutesNamespaceMonthlyUsageEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiMinutesProjectMonthlyUsage",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "minutes",
              "description": "Number of CI/CD minutes used by the project in the month."
            },
            {
              "name": "project",
              "description": "Project having the recorded usage."
            },
            {
              "name": "sharedRunnersDuration",
              "description": "Total duration (in seconds) of shared runners use by the project for the month."
            }
          ]
        },
        {
          "name": "CiMinutesProjectMonthlyUsageConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiMinutesProjectMonthlyUsage.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiMinutesProjectMonthlyUsageEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiPipelineID",
          "kind": "SCALAR",
          "description": "A `CiPipelineID` is a global ID. It is encoded as a string.\n\nAn example `CiPipelineID` is: `\"gid://gitlab/Ci::Pipeline/1\"`.",
          "fields": null
        },
        {
          "name": "CiPipelineScheduleID",
          "kind": "SCALAR",
          "description": "A `CiPipelineScheduleID` is a global ID. It is encoded as a string.\n\nAn example `CiPipelineScheduleID` is: `\"gid://gitlab/Ci::PipelineSchedule/1\"`.",
          "fields": null
        },
        {
          "name": "CiProjectVariable",
          "kind": "OBJECT",
          "description": "CI/CD variables for a project.",
          "fields": [
            {
              "name": "environmentScope",
              "description": "Scope defining the environments that can use the variable."
            },
            {
              "name": "id",
              "description": "ID of the variable."
            },
            {
              "name": "key",
              "description": "Name of the variable."
            },
            {
              "name": "masked",
              "description": "Indicates whether the variable is masked."
            },
            {
              "name": "protected",
              "description": "Indicates whether the variable is protected."
            },
            {
              "name": "raw",
              "description": "Indicates whether the variable is raw."
            },
            {
              "name": "value",
              "description": "Value of the variable."
            },
            {
              "name": "variableType",
              "description": "Type of the variable."
            }
          ]
        },
        {
          "name": "CiProjectVariableConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiProjectVariable.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "limit",
              "description": "Maximum amount of project CI/CD variables."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiProjectVariableEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiRunner",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "accessLevel",
              "description": "Access level of the runner."
            },
            {
              "name": "adminUrl",
              "description": "Admin URL of the runner. Only available for administrators."
            },
            {
              "name": "architectureName",
              "description": "Architecture provided by the the runner."
            },
            {
              "name": "contactedAt",
              "description": "Timestamp of last contact from this runner."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of creation of this runner."
            },
            {
              "name": "description",
              "description": "Description of the runner."
            },
            {
              "name": "editAdminUrl",
              "description": "Admin form URL of the runner. Only available for administrators."
            },
            {
              "name": "executorName",
              "description": "Executor last advertised by the runner."
            },
            {
              "name": "groups",
              "description": "Groups the runner is associated with. For group runners only."
            },
            {
              "name": "id",
              "description": "ID of the runner."
            },
            {
              "name": "ipAddress",
              "description": "IP address of the runner."
            },
            {
              "name": "jobCount",
              "description": "Number of jobs processed by the runner (limited to 1000, plus one to indicate that more items exist)."
            },
            {
              "name": "jobs",
              "description": "Jobs assigned to the runner. This field can only be resolved for one runner in any single request."
            },
            {
              "name": "locked",
              "description": "Indicates the runner is locked."
            },
            {
              "name": "maintenanceNote",
              "description": "Runner's maintenance notes."
            },
            {
              "name": "maintenanceNoteHtml",
              "description": "GitLab Flavored Markdown rendering of `maintenance_note`"
            },
            {
              "name": "maximumTimeout",
              "description": "Maximum timeout (in seconds) for jobs processed by the runner."
            },
            {
              "name": "ownerProject",
              "description": "Project that owns the runner. For project runners only."
            },
            {
              "name": "paused",
              "description": "Indicates the runner is paused and not available to run jobs."
            },
            {
              "name": "platformName",
              "description": "Platform provided by the runner."
            },
            {
              "name": "privateProjectsMinutesCostFactor",
              "description": "Private projects' \"minutes cost factor\" associated with the runner (GitLab.com only)."
            },
            {
              "name": "projectCount",
              "description": "Number of projects that the runner is associated with."
            },
            {
              "name": "projects",
              "description": "Find projects the runner is associated with. For project runners only."
            },
            {
              "name": "publicProjectsMinutesCostFactor",
              "description": "Public projects' \"minutes cost factor\" associated with the runner (GitLab.com only)."
            },
            {
              "name": "revision",
              "description": "Revision of the runner."
            },
            {
              "name": "runUntagged",
              "description": "Indicates the runner is able to run untagged jobs."
            },
            {
              "name": "runnerType",
              "description": "Type of the runner."
            },
            {
              "name": "shortSha",
              "description": "First eight characters of the runner's token used to authenticate new job requests. Used as the runner's unique ID."
            },
            {
              "name": "status",
              "description": "Status of the runner."
            },
            {
              "name": "tagList",
              "description": "Tags associated with the runner."
            },
            {
              "name": "tokenExpiresAt",
              "description": "Runner token expiration time."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "version",
              "description": "Version of the runner."
            }
          ]
        },
        {
          "name": "CiRunnerAccessLevel",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CiRunnerConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiRunner.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "jobsStatistics",
              "description": "Jobs statistics for jobs executed by a collection of runners. Available only to admins.\n"
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiRunnerEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "editUrl",
              "description": "Web URL of the runner edit page. The value depends on where you put this field in the query. You can use it for projects or groups."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the runner. The value depends on where you put this field in the query. You can use it for projects or groups."
            }
          ]
        },
        {
          "name": "CiRunnerID",
          "kind": "SCALAR",
          "description": "A `CiRunnerID` is a global ID. It is encoded as a string.\n\nAn example `CiRunnerID` is: `\"gid://gitlab/Ci::Runner/1\"`.",
          "fields": null
        },
        {
          "name": "CiRunnerJobExecutionStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CiRunnerMembershipFilter",
          "kind": "ENUM",
          "description": "Values for filtering runners in namespaces. The previous type name `RunnerMembershipFilter` was deprecated in 15.4.",
          "fields": null
        },
        {
          "name": "CiRunnerSort",
          "kind": "ENUM",
          "description": "Values for sorting runners",
          "fields": null
        },
        {
          "name": "CiRunnerStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CiRunnerType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CiRunnerUpgradeStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CiSecureFileRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo replication and verification state of a ci_secure_file.",
          "fields": [
            {
              "name": "ciSecureFileId",
              "description": "ID of the Ci Secure File."
            },
            {
              "name": "createdAt",
              "description": "Timestamp when the CiSecureFileRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the CiSecureFileRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the CiSecureFileRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the CiSecureFileRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the CiSecureFileRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the CiSecureFileRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the CiSecureFileRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the CiSecureFileRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the CiSecureFileRegistry"
            }
          ]
        },
        {
          "name": "CiSecureFileRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiSecureFileRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiSecureFileRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiStage",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "detailedStatus",
              "description": "Detailed status of the stage."
            },
            {
              "name": "groups",
              "description": "Group of jobs for the stage."
            },
            {
              "name": "id",
              "description": "ID of the stage."
            },
            {
              "name": "jobs",
              "description": "Jobs for the stage."
            },
            {
              "name": "name",
              "description": "Name of the stage."
            },
            {
              "name": "status",
              "description": "Status of the pipeline stage."
            }
          ]
        },
        {
          "name": "CiStageConnection",
          "kind": "OBJECT",
          "description": "The connection type for CiStage.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CiStageEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CiTemplate",
          "kind": "OBJECT",
          "description": "GitLab CI/CD configuration template.",
          "fields": [
            {
              "name": "content",
              "description": "Contents of the CI template."
            },
            {
              "name": "name",
              "description": "Name of the CI template."
            }
          ]
        },
        {
          "name": "CiVariable",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "ID of the variable."
            },
            {
              "name": "key",
              "description": "Name of the variable."
            },
            {
              "name": "raw",
              "description": "Indicates whether the variable is raw."
            },
            {
              "name": "value",
              "description": "Value of the variable."
            },
            {
              "name": "variableType",
              "description": "Type of the variable."
            }
          ]
        },
        {
          "name": "CiVariableInput",
          "kind": "INPUT_OBJECT",
          "description": "Attributes for defining a CI/CD variable.",
          "fields": null
        },
        {
          "name": "CiVariableSort",
          "kind": "ENUM",
          "description": "Values for sorting variables",
          "fields": null
        },
        {
          "name": "CiVariableType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "ClusterAgent",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "activityEvents",
              "description": "Recent activity for the cluster agent."
            },
            {
              "name": "connections",
              "description": "Active connections for the cluster agent"
            },
            {
              "name": "createdAt",
              "description": "Timestamp the cluster agent was created."
            },
            {
              "name": "createdByUser",
              "description": "User object, containing information about the person who created the agent."
            },
            {
              "name": "id",
              "description": "ID of the cluster agent."
            },
            {
              "name": "name",
              "description": "Name of the cluster agent."
            },
            {
              "name": "project",
              "description": "Project this cluster agent is associated with."
            },
            {
              "name": "tokens",
              "description": "Tokens associated with the cluster agent."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the cluster agent was updated."
            },
            {
              "name": "vulnerabilityImages",
              "description": "Container images reported on the agent vulnerabilities."
            },
            {
              "name": "webPath",
              "description": "Web path of the cluster agent."
            }
          ]
        },
        {
          "name": "ClusterAgentActivityEvent",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "agentToken",
              "description": "Agent token associated with the event."
            },
            {
              "name": "kind",
              "description": "Type of event."
            },
            {
              "name": "level",
              "description": "Severity of the event."
            },
            {
              "name": "recordedAt",
              "description": "Timestamp the event was recorded."
            },
            {
              "name": "user",
              "description": "User associated with the event."
            }
          ]
        },
        {
          "name": "ClusterAgentActivityEventConnection",
          "kind": "OBJECT",
          "description": "The connection type for ClusterAgentActivityEvent.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ClusterAgentActivityEventEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ClusterAgentConnection",
          "kind": "OBJECT",
          "description": "The connection type for ClusterAgent.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ClusterAgentDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ClusterAgentDelete",
          "fields": null
        },
        {
          "name": "ClusterAgentDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ClusterAgentDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ClusterAgentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ClusterAgentToken",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "clusterAgent",
              "description": "Cluster agent this token is associated with."
            },
            {
              "name": "createdAt",
              "description": "Timestamp the token was created."
            },
            {
              "name": "createdByUser",
              "description": "User who created the token."
            },
            {
              "name": "description",
              "description": "Description of the token."
            },
            {
              "name": "id",
              "description": "Global ID of the token."
            },
            {
              "name": "lastUsedAt",
              "description": "Timestamp the token was last used."
            },
            {
              "name": "name",
              "description": "Name given to the token."
            },
            {
              "name": "status",
              "description": "Current status of the token."
            }
          ]
        },
        {
          "name": "ClusterAgentTokenConnection",
          "kind": "OBJECT",
          "description": "The connection type for ClusterAgentToken.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ClusterAgentTokenCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ClusterAgentTokenCreate",
          "fields": null
        },
        {
          "name": "ClusterAgentTokenCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ClusterAgentTokenCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "secret",
              "description": "Token secret value. Make sure you save it - you won't be able to access it again."
            },
            {
              "name": "token",
              "description": "Token created after mutation."
            }
          ]
        },
        {
          "name": "ClusterAgentTokenEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ClusterAgentTokenRevokeInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ClusterAgentTokenRevoke",
          "fields": null
        },
        {
          "name": "ClusterAgentTokenRevokePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ClusterAgentTokenRevoke",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ClustersAgentID",
          "kind": "SCALAR",
          "description": "A `ClustersAgentID` is a global ID. It is encoded as a string.\n\nAn example `ClustersAgentID` is: `\"gid://gitlab/Clusters::Agent/1\"`.",
          "fields": null
        },
        {
          "name": "ClustersAgentTokenID",
          "kind": "SCALAR",
          "description": "A `ClustersAgentTokenID` is a global ID. It is encoded as a string.\n\nAn example `ClustersAgentTokenID` is: `\"gid://gitlab/Clusters::AgentToken/1\"`.",
          "fields": null
        },
        {
          "name": "ClustersClusterID",
          "kind": "SCALAR",
          "description": "A `ClustersClusterID` is a global ID. It is encoded as a string.\n\nAn example `ClustersClusterID` is: `\"gid://gitlab/Clusters::Cluster/1\"`.",
          "fields": null
        },
        {
          "name": "CodeCoverageActivity",
          "kind": "OBJECT",
          "description": "Represents the code coverage activity for a group",
          "fields": [
            {
              "name": "averageCoverage",
              "description": "Average percentage of the different code coverage results available for the group."
            },
            {
              "name": "coverageCount",
              "description": "Number of different code coverage results available for the group."
            },
            {
              "name": "date",
              "description": "Date when the code coverage was created."
            },
            {
              "name": "projectCount",
              "description": "Number of projects with code coverage results for the group."
            }
          ]
        },
        {
          "name": "CodeCoverageActivityConnection",
          "kind": "OBJECT",
          "description": "The connection type for CodeCoverageActivity.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CodeCoverageActivityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CodeCoverageSummary",
          "kind": "OBJECT",
          "description": "Represents the code coverage summary for a project",
          "fields": [
            {
              "name": "averageCoverage",
              "description": "Average percentage of the different code coverage results available for the project."
            },
            {
              "name": "coverageCount",
              "description": "Number of different code coverage results available."
            },
            {
              "name": "lastUpdatedOn",
              "description": "Latest date when the code coverage was created for the project."
            }
          ]
        },
        {
          "name": "CodeQualityDegradation",
          "kind": "OBJECT",
          "description": "Represents a code quality degradation on the pipeline.",
          "fields": [
            {
              "name": "description",
              "description": "Description of the code quality degradation."
            },
            {
              "name": "engineName",
              "description": "Code Quality plugin that reported the finding."
            },
            {
              "name": "fingerprint",
              "description": "Unique fingerprint to identify the code quality degradation. For example, an MD5 hash."
            },
            {
              "name": "line",
              "description": "Line on which the code quality degradation occurred."
            },
            {
              "name": "path",
              "description": "Relative path to the file containing the code quality degradation."
            },
            {
              "name": "severity",
              "description": "Status of the degradation (BLOCKER, CRITICAL, MAJOR, MINOR, INFO, UNKNOWN)."
            },
            {
              "name": "webUrl",
              "description": "URL to the file along with line number."
            }
          ]
        },
        {
          "name": "CodeQualityDegradationConnection",
          "kind": "OBJECT",
          "description": "The connection type for CodeQualityDegradation.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CodeQualityDegradationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CodeQualityDegradationSeverity",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CodeQualityReportSummary",
          "kind": "OBJECT",
          "description": "Code Quality report for a pipeline",
          "fields": [
            {
              "name": "blocker",
              "description": "Total number of blocker status."
            },
            {
              "name": "count",
              "description": "Total number of Code Quality reports."
            },
            {
              "name": "critical",
              "description": "Total number of critical status."
            },
            {
              "name": "info",
              "description": "Total number of info status."
            },
            {
              "name": "major",
              "description": "Total number of major status."
            },
            {
              "name": "minor",
              "description": "Total number of minor status."
            },
            {
              "name": "unknown",
              "description": "Total number of unknown status."
            }
          ]
        },
        {
          "name": "Color",
          "kind": "SCALAR",
          "description": "Color represented as a hex code or named color.\n\nFor example: \"#fefefe\".\n",
          "fields": null
        },
        {
          "name": "Commit",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "author",
              "description": "Author of the commit."
            },
            {
              "name": "authorEmail",
              "description": "Commit author's email."
            },
            {
              "name": "authorGravatar",
              "description": "Commit authors gravatar."
            },
            {
              "name": "authorName",
              "description": "Commit authors name."
            },
            {
              "name": "authoredDate",
              "description": "Timestamp of when the commit was authored."
            },
            {
              "name": "description",
              "description": "Description of the commit message."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "fullTitle",
              "description": "Full title of the commit message."
            },
            {
              "name": "fullTitleHtml",
              "description": "GitLab Flavored Markdown rendering of `full_title`"
            },
            {
              "name": "id",
              "description": "ID (global ID) of the commit."
            },
            {
              "name": "message",
              "description": "Raw commit message."
            },
            {
              "name": "pipelines",
              "description": "Pipelines of the commit ordered latest first."
            },
            {
              "name": "sha",
              "description": "SHA1 ID of the commit."
            },
            {
              "name": "shortId",
              "description": "Short SHA1 ID of the commit."
            },
            {
              "name": "signature",
              "description": "Signature of the commit."
            },
            {
              "name": "signatureHtml",
              "description": "Rendered HTML of the commit signature."
            },
            {
              "name": "title",
              "description": "Title of the commit message."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`"
            },
            {
              "name": "webPath",
              "description": "Web path of the commit."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the commit."
            }
          ]
        },
        {
          "name": "CommitAction",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "CommitActionMode",
          "kind": "ENUM",
          "description": "Mode of a commit action",
          "fields": null
        },
        {
          "name": "CommitConnection",
          "kind": "OBJECT",
          "description": "The connection type for Commit.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CommitCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CommitCreate",
          "fields": null
        },
        {
          "name": "CommitCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CommitCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "commit",
              "description": "Commit after mutation."
            },
            {
              "name": "commitPipelinePath",
              "description": "ETag path for the commit's pipeline."
            },
            {
              "name": "content",
              "description": "Contents of the commit."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CommitEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CommitEncoding",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CommitSignature",
          "kind": "INTERFACE",
          "description": "Represents signing information for a commit",
          "fields": [
            {
              "name": "commitSha",
              "description": "SHA of the associated commit."
            },
            {
              "name": "project",
              "description": "Project of the associated commit."
            },
            {
              "name": "verificationStatus",
              "description": "Indicates verification status of the associated key or certificate."
            }
          ]
        },
        {
          "name": "ComplianceFramework",
          "kind": "OBJECT",
          "description": "Represents a ComplianceFramework associated with a Project",
          "fields": [
            {
              "name": "color",
              "description": "Hexadecimal representation of compliance framework's label color."
            },
            {
              "name": "default",
              "description": "Default compliance framework for the group."
            },
            {
              "name": "description",
              "description": "Description of the compliance framework."
            },
            {
              "name": "id",
              "description": "Compliance framework ID."
            },
            {
              "name": "name",
              "description": "Name of the compliance framework."
            },
            {
              "name": "pipelineConfigurationFullPath",
              "description": "Full path of the compliance pipeline configuration stored in a project repository, such as `.gitlab/.compliance-gitlab-ci.yml@compliance/hipaa` **(ULTIMATE)**."
            }
          ]
        },
        {
          "name": "ComplianceFrameworkConnection",
          "kind": "OBJECT",
          "description": "The connection type for ComplianceFramework.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ComplianceFrameworkEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ComplianceFrameworkInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ComplianceManagementFrameworkID",
          "kind": "SCALAR",
          "description": "A `ComplianceManagementFrameworkID` is a global ID. It is encoded as a string.\n\nAn example `ComplianceManagementFrameworkID` is: `\"gid://gitlab/ComplianceManagement::Framework/1\"`.",
          "fields": null
        },
        {
          "name": "ComplianceViolation",
          "kind": "OBJECT",
          "description": "Compliance violation associated with a merged merge request.",
          "fields": [
            {
              "name": "id",
              "description": "Compliance violation ID."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request the compliance violation occurred in."
            },
            {
              "name": "reason",
              "description": "Reason the compliance violation occurred."
            },
            {
              "name": "severityLevel",
              "description": "Severity of the compliance violation."
            },
            {
              "name": "violatingUser",
              "description": "User suspected of causing the compliance violation."
            }
          ]
        },
        {
          "name": "ComplianceViolationConnection",
          "kind": "OBJECT",
          "description": "The connection type for ComplianceViolation.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ComplianceViolationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ComplianceViolationInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "ComplianceViolationReason",
          "kind": "ENUM",
          "description": "Reason for the compliance violation.",
          "fields": null
        },
        {
          "name": "ComplianceViolationSeverity",
          "kind": "ENUM",
          "description": "Severity of the compliance violation.",
          "fields": null
        },
        {
          "name": "ComplianceViolationSort",
          "kind": "ENUM",
          "description": "Compliance violation sort values.",
          "fields": null
        },
        {
          "name": "ComposerMetadata",
          "kind": "OBJECT",
          "description": "Composer metadata",
          "fields": [
            {
              "name": "composerJson",
              "description": "Data of the Composer JSON file."
            },
            {
              "name": "targetSha",
              "description": "Target SHA of the package."
            }
          ]
        },
        {
          "name": "ConanFileMetadata",
          "kind": "OBJECT",
          "description": "Conan file metadata",
          "fields": [
            {
              "name": "conanFileType",
              "description": "Type of the Conan file."
            },
            {
              "name": "conanPackageReference",
              "description": "Reference of the Conan package."
            },
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "id",
              "description": "ID of the metadatum."
            },
            {
              "name": "packageRevision",
              "description": "Revision of the package."
            },
            {
              "name": "recipeRevision",
              "description": "Revision of the Conan recipe."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            }
          ]
        },
        {
          "name": "ConanMetadata",
          "kind": "OBJECT",
          "description": "Conan metadata",
          "fields": [
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "id",
              "description": "ID of the metadatum."
            },
            {
              "name": "packageChannel",
              "description": "Channel of the Conan package."
            },
            {
              "name": "packageUsername",
              "description": "Username of the Conan package."
            },
            {
              "name": "recipe",
              "description": "Recipe of the Conan package."
            },
            {
              "name": "recipePath",
              "description": "Recipe path of the Conan package."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            }
          ]
        },
        {
          "name": "ConanMetadatumFileTypeEnum",
          "kind": "ENUM",
          "description": "Conan file types",
          "fields": null
        },
        {
          "name": "ConfigureContainerScanningInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ConfigureContainerScanning",
          "fields": null
        },
        {
          "name": "ConfigureContainerScanningPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ConfigureContainerScanning",
          "fields": [
            {
              "name": "branch",
              "description": "Branch that has the new/modified `.gitlab-ci.yml` file."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "successPath",
              "description": "Redirect path to use when the response is successful."
            }
          ]
        },
        {
          "name": "ConfigureDependencyScanningInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ConfigureDependencyScanning",
          "fields": null
        },
        {
          "name": "ConfigureDependencyScanningPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ConfigureDependencyScanning",
          "fields": [
            {
              "name": "branch",
              "description": "Branch that has the new/modified `.gitlab-ci.yml` file."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "successPath",
              "description": "Redirect path to use when the response is successful."
            }
          ]
        },
        {
          "name": "ConfigureSastIacInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ConfigureSastIac",
          "fields": null
        },
        {
          "name": "ConfigureSastIacPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ConfigureSastIac",
          "fields": [
            {
              "name": "branch",
              "description": "Branch that has the new/modified `.gitlab-ci.yml` file."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "successPath",
              "description": "Redirect path to use when the response is successful."
            }
          ]
        },
        {
          "name": "ConfigureSastInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ConfigureSast",
          "fields": null
        },
        {
          "name": "ConfigureSastPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ConfigureSast",
          "fields": [
            {
              "name": "branch",
              "description": "Branch that has the new/modified `.gitlab-ci.yml` file."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "successPath",
              "description": "Redirect path to use when the response is successful."
            }
          ]
        },
        {
          "name": "ConfigureSecretDetectionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ConfigureSecretDetection",
          "fields": null
        },
        {
          "name": "ConfigureSecretDetectionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ConfigureSecretDetection",
          "fields": [
            {
              "name": "branch",
              "description": "Branch that has the new/modified `.gitlab-ci.yml` file."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "successPath",
              "description": "Redirect path to use when the response is successful."
            }
          ]
        },
        {
          "name": "ConnectedAgent",
          "kind": "OBJECT",
          "description": "Connection details for an Agent",
          "fields": [
            {
              "name": "connectedAt",
              "description": "When the connection was established."
            },
            {
              "name": "connectionId",
              "description": "ID of the connection."
            },
            {
              "name": "metadata",
              "description": "Information about the Agent."
            }
          ]
        },
        {
          "name": "ConnectedAgentConnection",
          "kind": "OBJECT",
          "description": "The connection type for ConnectedAgent.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ConnectedAgentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ContactSort",
          "kind": "ENUM",
          "description": "Values for sorting contacts",
          "fields": null
        },
        {
          "name": "ContactStateCounts",
          "kind": "OBJECT",
          "description": "Represents the total number of contacts for the represented states.",
          "fields": [
            {
              "name": "active",
              "description": "Number of contacts with state `ACTIVE`"
            },
            {
              "name": "all",
              "description": "Number of contacts with state `ALL`"
            },
            {
              "name": "inactive",
              "description": "Number of contacts with state `INACTIVE`"
            }
          ]
        },
        {
          "name": "ContainerExpirationPolicy",
          "kind": "OBJECT",
          "description": "A tag expiration policy designed to keep only the images that matter most",
          "fields": [
            {
              "name": "cadence",
              "description": "This container expiration policy schedule."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the container expiration policy was created."
            },
            {
              "name": "enabled",
              "description": "Indicates whether this container expiration policy is enabled."
            },
            {
              "name": "keepN",
              "description": "Number of tags to retain."
            },
            {
              "name": "nameRegex",
              "description": "Tags with names matching this regex pattern will expire."
            },
            {
              "name": "nameRegexKeep",
              "description": "Tags with names matching this regex pattern will be preserved."
            },
            {
              "name": "nextRunAt",
              "description": "Next time that this container expiration policy will get executed."
            },
            {
              "name": "olderThan",
              "description": "Tags older that this will expire."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the container expiration policy was updated."
            }
          ]
        },
        {
          "name": "ContainerExpirationPolicyCadenceEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "ContainerExpirationPolicyKeepEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "ContainerExpirationPolicyOlderThanEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "ContainerRepository",
          "kind": "OBJECT",
          "description": "A container repository",
          "fields": [
            {
              "name": "canDelete",
              "description": "Can the current user delete the container repository."
            },
            {
              "name": "createdAt",
              "description": "Timestamp when the container repository was created."
            },
            {
              "name": "expirationPolicyCleanupStatus",
              "description": "Tags cleanup status for the container repository."
            },
            {
              "name": "expirationPolicyStartedAt",
              "description": "Timestamp when the cleanup done by the expiration policy was started on the container repository."
            },
            {
              "name": "id",
              "description": "ID of the container repository."
            },
            {
              "name": "lastCleanupDeletedTagsCount",
              "description": "Number of deleted tags from the last cleanup."
            },
            {
              "name": "location",
              "description": "URL of the container repository."
            },
            {
              "name": "migrationState",
              "description": "Migration state of the container repository."
            },
            {
              "name": "name",
              "description": "Name of the container repository."
            },
            {
              "name": "path",
              "description": "Path of the container repository."
            },
            {
              "name": "project",
              "description": "Project of the container registry."
            },
            {
              "name": "status",
              "description": "Status of the container repository."
            },
            {
              "name": "tagsCount",
              "description": "Number of tags associated with this image."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp when the container repository was updated."
            }
          ]
        },
        {
          "name": "ContainerRepositoryCleanupStatus",
          "kind": "ENUM",
          "description": "Status of the tags cleanup of a container repository",
          "fields": null
        },
        {
          "name": "ContainerRepositoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for ContainerRepository.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ContainerRepositoryDetails",
          "kind": "OBJECT",
          "description": "Details of a container repository",
          "fields": [
            {
              "name": "canDelete",
              "description": "Can the current user delete the container repository."
            },
            {
              "name": "createdAt",
              "description": "Timestamp when the container repository was created."
            },
            {
              "name": "expirationPolicyCleanupStatus",
              "description": "Tags cleanup status for the container repository."
            },
            {
              "name": "expirationPolicyStartedAt",
              "description": "Timestamp when the cleanup done by the expiration policy was started on the container repository."
            },
            {
              "name": "id",
              "description": "ID of the container repository."
            },
            {
              "name": "lastCleanupDeletedTagsCount",
              "description": "Number of deleted tags from the last cleanup."
            },
            {
              "name": "location",
              "description": "URL of the container repository."
            },
            {
              "name": "migrationState",
              "description": "Migration state of the container repository."
            },
            {
              "name": "name",
              "description": "Name of the container repository."
            },
            {
              "name": "path",
              "description": "Path of the container repository."
            },
            {
              "name": "project",
              "description": "Project of the container registry."
            },
            {
              "name": "size",
              "description": "Deduplicated size of the image repository in bytes. This is only available on GitLab.com for repositories created after `2021-11-04`."
            },
            {
              "name": "status",
              "description": "Status of the container repository."
            },
            {
              "name": "tags",
              "description": "Tags of the container repository."
            },
            {
              "name": "tagsCount",
              "description": "Number of tags associated with this image."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp when the container repository was updated."
            }
          ]
        },
        {
          "name": "ContainerRepositoryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ContainerRepositoryID",
          "kind": "SCALAR",
          "description": "A `ContainerRepositoryID` is a global ID. It is encoded as a string.\n\nAn example `ContainerRepositoryID` is: `\"gid://gitlab/ContainerRepository/1\"`.",
          "fields": null
        },
        {
          "name": "ContainerRepositoryRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo replication and verification state of an Container Repository.",
          "fields": [
            {
              "name": "containerRepositoryId",
              "description": "ID of the ContainerRepository."
            },
            {
              "name": "createdAt",
              "description": "Timestamp when the ContainerRepositoryRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the ContainerRepositoryRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the ContainerRepositoryRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the ContainerRepositoryRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the ContainerRepositoryRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the ContainerRepositoryRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the ContainerRepositoryRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the ContainerRepositoryRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the ContainerRepositoryRegistry"
            }
          ]
        },
        {
          "name": "ContainerRepositoryRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for ContainerRepositoryRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ContainerRepositoryRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ContainerRepositorySort",
          "kind": "ENUM",
          "description": "Values for sorting container repositories",
          "fields": null
        },
        {
          "name": "ContainerRepositoryStatus",
          "kind": "ENUM",
          "description": "Status of a container repository",
          "fields": null
        },
        {
          "name": "ContainerRepositoryTag",
          "kind": "OBJECT",
          "description": "A tag from a container repository",
          "fields": [
            {
              "name": "canDelete",
              "description": "Can the current user delete this tag."
            },
            {
              "name": "createdAt",
              "description": "Timestamp when the tag was created."
            },
            {
              "name": "digest",
              "description": "Digest of the tag."
            },
            {
              "name": "location",
              "description": "URL of the tag."
            },
            {
              "name": "name",
              "description": "Name of the tag."
            },
            {
              "name": "path",
              "description": "Path of the tag."
            },
            {
              "name": "revision",
              "description": "Revision of the tag."
            },
            {
              "name": "shortRevision",
              "description": "Short revision of the tag."
            },
            {
              "name": "totalSize",
              "description": "Size of the tag."
            }
          ]
        },
        {
          "name": "ContainerRepositoryTagConnection",
          "kind": "OBJECT",
          "description": "The connection type for ContainerRepositoryTag.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ContainerRepositoryTagEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ContainerRepositoryTagSort",
          "kind": "ENUM",
          "description": "Values for sorting tags",
          "fields": null
        },
        {
          "name": "ContributionAnalyticsContribution",
          "kind": "OBJECT",
          "description": "Represents the contributions of a user.",
          "fields": [
            {
              "name": "issuesClosed",
              "description": "Number of issues closed by the user."
            },
            {
              "name": "issuesCreated",
              "description": "Number of issues created by the user."
            },
            {
              "name": "mergeRequestsApproved",
              "description": "Number of merge requests approved by the user."
            },
            {
              "name": "mergeRequestsClosed",
              "description": "Number of merge requests closed by the user."
            },
            {
              "name": "mergeRequestsCreated",
              "description": "Number of merge requests created by the user."
            },
            {
              "name": "mergeRequestsMerged",
              "description": "Number of merge requests merged by the user."
            },
            {
              "name": "repoPushed",
              "description": "Number of repository pushes the user made."
            },
            {
              "name": "totalEvents",
              "description": "Total number of events contributed by the user."
            },
            {
              "name": "user",
              "description": "Contributor User object."
            }
          ]
        },
        {
          "name": "ContributionAnalyticsContributionConnection",
          "kind": "OBJECT",
          "description": "The connection type for ContributionAnalyticsContribution.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ContributionAnalyticsContributionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CorpusCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CorpusCreate",
          "fields": null
        },
        {
          "name": "CorpusCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CorpusCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CoverageFuzzingCorpus",
          "kind": "OBJECT",
          "description": "Corpus for a coverage fuzzing job.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the corpus."
            },
            {
              "name": "package",
              "description": "Package of the corpus."
            }
          ]
        },
        {
          "name": "CoverageFuzzingCorpusConnection",
          "kind": "OBJECT",
          "description": "The connection type for CoverageFuzzingCorpus.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CoverageFuzzingCorpusEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CreateAlertIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateAlertIssue",
          "fields": null
        },
        {
          "name": "CreateAlertIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateAlertIssue",
          "fields": [
            {
              "name": "alert",
              "description": "Alert after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue created after mutation."
            },
            {
              "name": "todo",
              "description": "To-do item after mutation."
            }
          ]
        },
        {
          "name": "CreateAnnotationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateAnnotation",
          "fields": null
        },
        {
          "name": "CreateAnnotationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateAnnotation",
          "fields": [
            {
              "name": "annotation",
              "description": "Created annotation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CreateBoardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateBoard",
          "fields": null
        },
        {
          "name": "CreateBoardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateBoard",
          "fields": [
            {
              "name": "board",
              "description": "Board after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CreateBranchInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateBranch",
          "fields": null
        },
        {
          "name": "CreateBranchPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateBranch",
          "fields": [
            {
              "name": "branch",
              "description": "Branch after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CreateClusterAgentInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateClusterAgent",
          "fields": null
        },
        {
          "name": "CreateClusterAgentPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateClusterAgent",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "clusterAgent",
              "description": "Cluster agent created after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CreateComplianceFrameworkInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateComplianceFramework",
          "fields": null
        },
        {
          "name": "CreateComplianceFrameworkPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateComplianceFramework",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "framework",
              "description": "Created compliance framework."
            }
          ]
        },
        {
          "name": "CreateCustomEmojiInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateCustomEmoji",
          "fields": null
        },
        {
          "name": "CreateCustomEmojiPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateCustomEmoji",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "customEmoji",
              "description": "New custom emoji."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CreateDiffNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateDiffNote",
          "fields": null
        },
        {
          "name": "CreateDiffNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateDiffNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "note",
              "description": "Note after mutation."
            }
          ]
        },
        {
          "name": "CreateEpicInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateEpic",
          "fields": null
        },
        {
          "name": "CreateEpicPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateEpic",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epic",
              "description": "Created epic."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CreateImageDiffNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateImageDiffNote",
          "fields": null
        },
        {
          "name": "CreateImageDiffNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateImageDiffNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "note",
              "description": "Note after mutation."
            }
          ]
        },
        {
          "name": "CreateIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateIssue",
          "fields": null
        },
        {
          "name": "CreateIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateIssue",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "CreateIterationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateIteration",
          "fields": null
        },
        {
          "name": "CreateIterationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateIteration",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "iteration",
              "description": "Created iteration."
            }
          ]
        },
        {
          "name": "CreateNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateNote",
          "fields": null
        },
        {
          "name": "CreateNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "note",
              "description": "Note after mutation."
            }
          ]
        },
        {
          "name": "CreateRequirementInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateRequirement",
          "fields": null
        },
        {
          "name": "CreateRequirementPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateRequirement",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "requirement",
              "description": "Requirement after mutation."
            }
          ]
        },
        {
          "name": "CreateSnippetInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateSnippet",
          "fields": null
        },
        {
          "name": "CreateSnippetPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateSnippet",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "snippet",
              "description": "Snippet after mutation."
            }
          ]
        },
        {
          "name": "CreateTestCaseInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CreateTestCase",
          "fields": null
        },
        {
          "name": "CreateTestCasePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CreateTestCase",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "testCase",
              "description": "Test case created."
            }
          ]
        },
        {
          "name": "CurrentLicense",
          "kind": "OBJECT",
          "description": "Represents the current license",
          "fields": [
            {
              "name": "activatedAt",
              "description": "Date when the license was activated."
            },
            {
              "name": "billableUsersCount",
              "description": "Number of billable users on the system."
            },
            {
              "name": "blockChangesAt",
              "description": "Date, including grace period, when licensed features will be blocked."
            },
            {
              "name": "company",
              "description": "Company of the licensee."
            },
            {
              "name": "createdAt",
              "description": "Date when the license was added."
            },
            {
              "name": "email",
              "description": "Email of the licensee."
            },
            {
              "name": "expiresAt",
              "description": "Date when the license expires."
            },
            {
              "name": "id",
              "description": "ID of the license extracted from the license data."
            },
            {
              "name": "lastSync",
              "description": "Date when the license was last synced."
            },
            {
              "name": "maximumUserCount",
              "description": "Highest number of billable users on the system during the term of the current license."
            },
            {
              "name": "name",
              "description": "Name of the licensee."
            },
            {
              "name": "plan",
              "description": "Name of the subscription plan."
            },
            {
              "name": "startsAt",
              "description": "Date when the license started."
            },
            {
              "name": "type",
              "description": "Type of the license."
            },
            {
              "name": "usersInLicenseCount",
              "description": "Number of paid users in the license."
            },
            {
              "name": "usersOverLicenseCount",
              "description": "Number of users over the paid users in the license."
            }
          ]
        },
        {
          "name": "CurrentUserTodos",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "currentUserTodos",
              "description": "To-do items for the current user."
            }
          ]
        },
        {
          "name": "CustomEmoji",
          "kind": "OBJECT",
          "description": "A custom emoji uploaded by user",
          "fields": [
            {
              "name": "external",
              "description": "Whether the emoji is an external link."
            },
            {
              "name": "id",
              "description": "ID of the emoji."
            },
            {
              "name": "name",
              "description": "Name of the emoji."
            },
            {
              "name": "url",
              "description": "Link to file of the emoji."
            }
          ]
        },
        {
          "name": "CustomEmojiConnection",
          "kind": "OBJECT",
          "description": "The connection type for CustomEmoji.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CustomEmojiEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CustomEmojiID",
          "kind": "SCALAR",
          "description": "A `CustomEmojiID` is a global ID. It is encoded as a string.\n\nAn example `CustomEmojiID` is: `\"gid://gitlab/CustomEmoji/1\"`.",
          "fields": null
        },
        {
          "name": "CustomerRelationsContact",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "State of the contact."
            },
            {
              "name": "createdAt",
              "description": "Timestamp the contact was created."
            },
            {
              "name": "description",
              "description": "Description of or notes for the contact."
            },
            {
              "name": "email",
              "description": "Email address of the contact."
            },
            {
              "name": "firstName",
              "description": "First name of the contact."
            },
            {
              "name": "id",
              "description": "Internal ID of the contact."
            },
            {
              "name": "lastName",
              "description": "Last name of the contact."
            },
            {
              "name": "organization",
              "description": "Organization of the contact."
            },
            {
              "name": "phone",
              "description": "Phone number of the contact."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the contact was last updated."
            }
          ]
        },
        {
          "name": "CustomerRelationsContactConnection",
          "kind": "OBJECT",
          "description": "The connection type for CustomerRelationsContact.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CustomerRelationsContactCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CustomerRelationsContactCreate",
          "fields": null
        },
        {
          "name": "CustomerRelationsContactCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CustomerRelationsContactCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "contact",
              "description": "Contact after the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CustomerRelationsContactEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CustomerRelationsContactID",
          "kind": "SCALAR",
          "description": "A `CustomerRelationsContactID` is a global ID. It is encoded as a string.\n\nAn example `CustomerRelationsContactID` is: `\"gid://gitlab/CustomerRelations::Contact/1\"`.",
          "fields": null
        },
        {
          "name": "CustomerRelationsContactState",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CustomerRelationsContactUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CustomerRelationsContactUpdate",
          "fields": null
        },
        {
          "name": "CustomerRelationsContactUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CustomerRelationsContactUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "contact",
              "description": "Contact after the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "CustomerRelationsOrganization",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "State of the organization."
            },
            {
              "name": "createdAt",
              "description": "Timestamp the organization was created."
            },
            {
              "name": "defaultRate",
              "description": "Standard billing rate for the organization."
            },
            {
              "name": "description",
              "description": "Description of or notes for the organization."
            },
            {
              "name": "id",
              "description": "Internal ID of the organization."
            },
            {
              "name": "name",
              "description": "Name of the organization."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the organization was last updated."
            }
          ]
        },
        {
          "name": "CustomerRelationsOrganizationConnection",
          "kind": "OBJECT",
          "description": "The connection type for CustomerRelationsOrganization.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "CustomerRelationsOrganizationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CustomerRelationsOrganizationCreate",
          "fields": null
        },
        {
          "name": "CustomerRelationsOrganizationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CustomerRelationsOrganizationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "organization",
              "description": "Organization after the mutation."
            }
          ]
        },
        {
          "name": "CustomerRelationsOrganizationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "CustomerRelationsOrganizationID",
          "kind": "SCALAR",
          "description": "A `CustomerRelationsOrganizationID` is a global ID. It is encoded as a string.\n\nAn example `CustomerRelationsOrganizationID` is: `\"gid://gitlab/CustomerRelations::Organization/1\"`.",
          "fields": null
        },
        {
          "name": "CustomerRelationsOrganizationState",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "CustomerRelationsOrganizationUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of CustomerRelationsOrganizationUpdate",
          "fields": null
        },
        {
          "name": "CustomerRelationsOrganizationUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of CustomerRelationsOrganizationUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "organization",
              "description": "Organization after the mutation."
            }
          ]
        },
        {
          "name": "DastOnDemandScanCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastOnDemandScanCreate",
          "fields": null
        },
        {
          "name": "DastOnDemandScanCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastOnDemandScanCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineUrl",
              "description": "URL of the pipeline that was created."
            }
          ]
        },
        {
          "name": "DastPreScanVerification",
          "kind": "OBJECT",
          "description": "Represents a DAST Pre Scan Verification",
          "fields": [
            {
              "name": "preScanVerificationSteps",
              "description": "Pre Scan Verifications Steps."
            },
            {
              "name": "status",
              "description": "Status of the pre scan verification."
            },
            {
              "name": "valid",
              "description": "Whether or not the configuration has changed after the last pre scan run."
            }
          ]
        },
        {
          "name": "DastPreScanVerificationStatus",
          "kind": "ENUM",
          "description": "Status of DAST pre scan verification.",
          "fields": null
        },
        {
          "name": "DastPreScanVerificationStep",
          "kind": "OBJECT",
          "description": "Represents a DAST Pre Scan Verification Step",
          "fields": [
            {
              "name": "errors",
              "description": "Errors that occurred in the pre scan verification step."
            },
            {
              "name": "name",
              "description": "Name of the pre scan verification step."
            },
            {
              "name": "success",
              "description": "Whether or not the pre scan verification step has errors."
            }
          ]
        },
        {
          "name": "DastProfile",
          "kind": "OBJECT",
          "description": "Represents a DAST Profile",
          "fields": [
            {
              "name": "branch",
              "description": "Associated branch."
            },
            {
              "name": "dastPreScanVerification",
              "description": "DAST Pre Scan Verification associated with the site profile. Will always return `null` if `dast_on_demand_scans_scheduler` feature flag is disabled."
            },
            {
              "name": "dastProfileSchedule",
              "description": "Associated profile schedule."
            },
            {
              "name": "dastScannerProfile",
              "description": "Associated scanner profile."
            },
            {
              "name": "dastSiteProfile",
              "description": "Associated site profile."
            },
            {
              "name": "description",
              "description": "Description of the scan."
            },
            {
              "name": "editPath",
              "description": "Relative web path to the edit page of a profile."
            },
            {
              "name": "id",
              "description": "ID of the profile."
            },
            {
              "name": "name",
              "description": "Name of the profile."
            },
            {
              "name": "tagList",
              "description": "Runner tags associated with the profile."
            }
          ]
        },
        {
          "name": "DastProfileBranch",
          "kind": "OBJECT",
          "description": "Represents a DAST Profile Branch",
          "fields": [
            {
              "name": "exists",
              "description": "Indicates whether or not the branch exists."
            },
            {
              "name": "name",
              "description": "Name of the branch."
            }
          ]
        },
        {
          "name": "DastProfileCadence",
          "kind": "OBJECT",
          "description": "Represents DAST Profile Cadence.",
          "fields": [
            {
              "name": "duration",
              "description": "Duration of the DAST profile cadence."
            },
            {
              "name": "unit",
              "description": "Unit for the duration of DAST profile cadence."
            }
          ]
        },
        {
          "name": "DastProfileCadenceInput",
          "kind": "INPUT_OBJECT",
          "description": "Represents DAST Profile Cadence.",
          "fields": null
        },
        {
          "name": "DastProfileCadenceUnit",
          "kind": "ENUM",
          "description": "Unit for the duration of Dast Profile Cadence.",
          "fields": null
        },
        {
          "name": "DastProfileConnection",
          "kind": "OBJECT",
          "description": "The connection type for DastProfile.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DastProfileCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastProfileCreate",
          "fields": null
        },
        {
          "name": "DastProfileCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastProfileCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dastProfile",
              "description": "Created profile."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineUrl",
              "description": "URL of the pipeline that was created. Requires `runAfterCreate` to be set to `true`."
            }
          ]
        },
        {
          "name": "DastProfileDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastProfileDelete",
          "fields": null
        },
        {
          "name": "DastProfileDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastProfileDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastProfileEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DastProfileID",
          "kind": "SCALAR",
          "description": "A `DastProfileID` is a global ID. It is encoded as a string.\n\nAn example `DastProfileID` is: `\"gid://gitlab/Dast::Profile/1\"`.",
          "fields": null
        },
        {
          "name": "DastProfileRunInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastProfileRun",
          "fields": null
        },
        {
          "name": "DastProfileRunPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastProfileRun",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineUrl",
              "description": "URL of the pipeline that was created."
            }
          ]
        },
        {
          "name": "DastProfileSchedule",
          "kind": "OBJECT",
          "description": "Represents a DAST profile schedule.",
          "fields": [
            {
              "name": "active",
              "description": "Status of the DAST profile schedule."
            },
            {
              "name": "cadence",
              "description": "Cadence of the DAST profile schedule."
            },
            {
              "name": "id",
              "description": "ID of the DAST profile schedule."
            },
            {
              "name": "nextRunAt",
              "description": "Next run time of the DAST profile schedule in the given timezone."
            },
            {
              "name": "ownerValid",
              "description": "Status of the current owner of the DAST profile schedule."
            },
            {
              "name": "startsAt",
              "description": "Start time of the DAST profile schedule in the given timezone."
            },
            {
              "name": "timezone",
              "description": "Time zone of the start time of the DAST profile schedule."
            }
          ]
        },
        {
          "name": "DastProfileScheduleID",
          "kind": "SCALAR",
          "description": "A `DastProfileScheduleID` is a global ID. It is encoded as a string.\n\nAn example `DastProfileScheduleID` is: `\"gid://gitlab/Dast::ProfileSchedule/1\"`.",
          "fields": null
        },
        {
          "name": "DastProfileScheduleInput",
          "kind": "INPUT_OBJECT",
          "description": "Input type for DAST Profile Schedules",
          "fields": null
        },
        {
          "name": "DastProfileUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastProfileUpdate",
          "fields": null
        },
        {
          "name": "DastProfileUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastProfileUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dastProfile",
              "description": "Updated profile."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineUrl",
              "description": "The URL of the pipeline that was created. Requires the input argument `runAfterUpdate` to be set to `true` when calling the mutation, otherwise no pipeline will be created."
            }
          ]
        },
        {
          "name": "DastScanMethodType",
          "kind": "ENUM",
          "description": "Scan method to be used by the scanner.",
          "fields": null
        },
        {
          "name": "DastScanTypeEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "DastScannerProfile",
          "kind": "OBJECT",
          "description": "Represents a DAST scanner profile",
          "fields": [
            {
              "name": "editPath",
              "description": "Relative web path to the edit page of a scanner profile."
            },
            {
              "name": "id",
              "description": "ID of the DAST scanner profile."
            },
            {
              "name": "profileName",
              "description": "Name of the DAST scanner profile."
            },
            {
              "name": "referencedInSecurityPolicies",
              "description": "List of security policy names that are referencing given project."
            },
            {
              "name": "scanType",
              "description": "Indicates the type of DAST scan that will run. Either a Passive Scan or an Active Scan."
            },
            {
              "name": "showDebugMessages",
              "description": "Indicates if debug messages should be included in DAST console output. True to include the debug messages."
            },
            {
              "name": "spiderTimeout",
              "description": "Maximum number of minutes allowed for the spider to traverse the site."
            },
            {
              "name": "targetTimeout",
              "description": "Maximum number of seconds allowed for the site under test to respond to a request."
            },
            {
              "name": "useAjaxSpider",
              "description": "Indicates if the AJAX spider should be used to crawl the target site. True to run the AJAX spider in addition to the traditional spider, and false to run only the traditional spider."
            }
          ]
        },
        {
          "name": "DastScannerProfileConnection",
          "kind": "OBJECT",
          "description": "The connection type for DastScannerProfile.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DastScannerProfileCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastScannerProfileCreate",
          "fields": null
        },
        {
          "name": "DastScannerProfileCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastScannerProfileCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dastScannerProfile",
              "description": "Created scanner profile."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastScannerProfileDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastScannerProfileDelete",
          "fields": null
        },
        {
          "name": "DastScannerProfileDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastScannerProfileDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastScannerProfileEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DastScannerProfileID",
          "kind": "SCALAR",
          "description": "A `DastScannerProfileID` is a global ID. It is encoded as a string.\n\nAn example `DastScannerProfileID` is: `\"gid://gitlab/DastScannerProfile/1\"`.",
          "fields": null
        },
        {
          "name": "DastScannerProfileUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastScannerProfileUpdate",
          "fields": null
        },
        {
          "name": "DastScannerProfileUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastScannerProfileUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dastScannerProfile",
              "description": "Updated scanner profile."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastSiteProfile",
          "kind": "OBJECT",
          "description": "Represents a DAST Site Profile",
          "fields": [
            {
              "name": "auth",
              "description": "Target authentication details."
            },
            {
              "name": "editPath",
              "description": "Relative web path to the edit page of a site profile."
            },
            {
              "name": "excludedUrls",
              "description": "URLs to skip during an authenticated scan."
            },
            {
              "name": "id",
              "description": "ID of the site profile."
            },
            {
              "name": "normalizedTargetUrl",
              "description": "Normalized URL of the target to be scanned."
            },
            {
              "name": "profileName",
              "description": "Name of the site profile."
            },
            {
              "name": "referencedInSecurityPolicies",
              "description": "List of security policy names that are referencing given project."
            },
            {
              "name": "requestHeaders",
              "description": "Comma-separated list of request header names and values to be added to every request made by DAST."
            },
            {
              "name": "scanFilePath",
              "description": "Scan File Path used as input for the scanner."
            },
            {
              "name": "scanMethod",
              "description": "Scan method used by the scanner."
            },
            {
              "name": "targetType",
              "description": "Type of target to be scanned."
            },
            {
              "name": "targetUrl",
              "description": "URL of the target to be scanned."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "validationStartedAt",
              "description": "Site profile validation start time."
            },
            {
              "name": "validationStatus",
              "description": "Current validation status of the site profile."
            }
          ]
        },
        {
          "name": "DastSiteProfileAuth",
          "kind": "OBJECT",
          "description": "Input type for DastSiteProfile authentication",
          "fields": [
            {
              "name": "enabled",
              "description": "Indicates whether authentication is enabled."
            },
            {
              "name": "password",
              "description": "Redacted password to authenticate with on the target website."
            },
            {
              "name": "passwordField",
              "description": "Name of password field at the sign-in HTML form."
            },
            {
              "name": "submitField",
              "description": "Name or ID of sign-in submit button at the sign-in HTML form."
            },
            {
              "name": "url",
              "description": "The URL of the page containing the sign-in HTML form on the target website."
            },
            {
              "name": "username",
              "description": "Username to authenticate with on the target website."
            },
            {
              "name": "usernameField",
              "description": "Name of username field at the sign-in HTML form."
            }
          ]
        },
        {
          "name": "DastSiteProfileAuthInput",
          "kind": "INPUT_OBJECT",
          "description": "Input type for DastSiteProfile authentication",
          "fields": null
        },
        {
          "name": "DastSiteProfileConnection",
          "kind": "OBJECT",
          "description": "The connection type for DastSiteProfile.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DastSiteProfileCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastSiteProfileCreate",
          "fields": null
        },
        {
          "name": "DastSiteProfileCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastSiteProfileCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dastSiteProfile",
              "description": "Site Profile object."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastSiteProfileDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastSiteProfileDelete",
          "fields": null
        },
        {
          "name": "DastSiteProfileDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastSiteProfileDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastSiteProfileEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DastSiteProfileID",
          "kind": "SCALAR",
          "description": "A `DastSiteProfileID` is a global ID. It is encoded as a string.\n\nAn example `DastSiteProfileID` is: `\"gid://gitlab/DastSiteProfile/1\"`.",
          "fields": null
        },
        {
          "name": "DastSiteProfilePermissions",
          "kind": "OBJECT",
          "description": "Check permissions for the current user on site profile",
          "fields": [
            {
              "name": "createOnDemandDastScan",
              "description": "Indicates the user can perform `create_on_demand_dast_scan` on this resource"
            }
          ]
        },
        {
          "name": "DastSiteProfileUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastSiteProfileUpdate",
          "fields": null
        },
        {
          "name": "DastSiteProfileUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastSiteProfileUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dastSiteProfile",
              "description": "Site profile object."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastSiteProfileValidationStatusEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "DastSiteTokenCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastSiteTokenCreate",
          "fields": null
        },
        {
          "name": "DastSiteTokenCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastSiteTokenCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "id",
              "description": "ID of the site token."
            },
            {
              "name": "status",
              "description": "Current validation status of the target."
            },
            {
              "name": "token",
              "description": "Token string."
            }
          ]
        },
        {
          "name": "DastSiteTokenID",
          "kind": "SCALAR",
          "description": "A `DastSiteTokenID` is a global ID. It is encoded as a string.\n\nAn example `DastSiteTokenID` is: `\"gid://gitlab/DastSiteToken/1\"`.",
          "fields": null
        },
        {
          "name": "DastSiteValidation",
          "kind": "OBJECT",
          "description": "Represents a DAST Site Validation",
          "fields": [
            {
              "name": "id",
              "description": "Global ID of the site validation."
            },
            {
              "name": "normalizedTargetUrl",
              "description": "Normalized URL of the target to be validated."
            },
            {
              "name": "status",
              "description": "Status of the site validation."
            },
            {
              "name": "validationStartedAt",
              "description": "Timestamp of when the validation started."
            }
          ]
        },
        {
          "name": "DastSiteValidationConnection",
          "kind": "OBJECT",
          "description": "The connection type for DastSiteValidation.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DastSiteValidationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastSiteValidationCreate",
          "fields": null
        },
        {
          "name": "DastSiteValidationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastSiteValidationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "id",
              "description": "ID of the site validation."
            },
            {
              "name": "status",
              "description": "Current validation status."
            }
          ]
        },
        {
          "name": "DastSiteValidationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DastSiteValidationID",
          "kind": "SCALAR",
          "description": "A `DastSiteValidationID` is a global ID. It is encoded as a string.\n\nAn example `DastSiteValidationID` is: `\"gid://gitlab/DastSiteValidation/1\"`.",
          "fields": null
        },
        {
          "name": "DastSiteValidationRevokeInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DastSiteValidationRevoke",
          "fields": null
        },
        {
          "name": "DastSiteValidationRevokePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DastSiteValidationRevoke",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DastSiteValidationStatusEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "DastSiteValidationStrategyEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "DastTargetTypeEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "DataVisualizationColorEnum",
          "kind": "ENUM",
          "description": "Color of the data visualization palette",
          "fields": null
        },
        {
          "name": "DataVisualizationWeightEnum",
          "kind": "ENUM",
          "description": "Weight of the data visualization palette",
          "fields": null
        },
        {
          "name": "Date",
          "kind": "SCALAR",
          "description": "Date represented in ISO 8601",
          "fields": null
        },
        {
          "name": "DeleteAnnotationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DeleteAnnotation",
          "fields": null
        },
        {
          "name": "DeleteAnnotationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DeleteAnnotation",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DeleteJobsResponse",
          "kind": "OBJECT",
          "description": "The response from the AdminSidekiqQueuesDeleteJobs mutation",
          "fields": [
            {
              "name": "completed",
              "description": "Whether or not the entire queue was processed in time; if not, retrying the same request is safe."
            },
            {
              "name": "deletedJobs",
              "description": "Number of matching jobs deleted."
            },
            {
              "name": "queueSize",
              "description": "Queue size after processing."
            }
          ]
        },
        {
          "name": "DeletedNote",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "discussionId",
              "description": "ID of the discussion for the deleted note."
            },
            {
              "name": "id",
              "description": "ID of the deleted note."
            },
            {
              "name": "lastDiscussionNote",
              "description": "Whether deleted note is the last note in the discussion."
            }
          ]
        },
        {
          "name": "DependencyLinkMetadata",
          "kind": "UNION",
          "description": "Represents metadata associated with a dependency link",
          "fields": null
        },
        {
          "name": "DependencyProxyBlob",
          "kind": "OBJECT",
          "description": "Dependency proxy blob",
          "fields": [
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "fileName",
              "description": "Name of the blob."
            },
            {
              "name": "size",
              "description": "Size of the blob file."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            }
          ]
        },
        {
          "name": "DependencyProxyBlobConnection",
          "kind": "OBJECT",
          "description": "The connection type for DependencyProxyBlob.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DependencyProxyBlobEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DependencyProxyBlobRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo replication and verification state of a dependency_proxy_blob",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the DependencyProxyBlobRegistry was created"
            },
            {
              "name": "dependencyProxyBlobId",
              "description": "ID of the Dependency Proxy Blob."
            },
            {
              "name": "id",
              "description": "ID of the DependencyProxyBlobRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the DependencyProxyBlobRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the DependencyProxyBlobRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the DependencyProxyBlobRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the DependencyProxyBlobRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the DependencyProxyBlobRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the DependencyProxyBlobRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the DependencyProxyBlobRegistry"
            }
          ]
        },
        {
          "name": "DependencyProxyBlobRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for DependencyProxyBlobRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DependencyProxyBlobRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DependencyProxyImageTtlGroupPolicy",
          "kind": "OBJECT",
          "description": "Group-level Dependency Proxy TTL policy settings",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of creation."
            },
            {
              "name": "enabled",
              "description": "Indicates whether the policy is enabled or disabled."
            },
            {
              "name": "ttl",
              "description": "Number of days to retain a cached image file."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of the most recent update."
            }
          ]
        },
        {
          "name": "DependencyProxyManifest",
          "kind": "OBJECT",
          "description": "Dependency proxy manifest",
          "fields": [
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "digest",
              "description": "Digest of the manifest."
            },
            {
              "name": "fileName",
              "description": "Name of the manifest."
            },
            {
              "name": "id",
              "description": "ID of the manifest."
            },
            {
              "name": "imageName",
              "description": "Name of the image."
            },
            {
              "name": "size",
              "description": "Size of the manifest file."
            },
            {
              "name": "status",
              "description": "Status of the manifest (default, pending_destruction, processing, error)"
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            }
          ]
        },
        {
          "name": "DependencyProxyManifestConnection",
          "kind": "OBJECT",
          "description": "The connection type for DependencyProxyManifest.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DependencyProxyManifestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DependencyProxyManifestID",
          "kind": "SCALAR",
          "description": "A `DependencyProxyManifestID` is a global ID. It is encoded as a string.\n\nAn example `DependencyProxyManifestID` is: `\"gid://gitlab/DependencyProxy::Manifest/1\"`.",
          "fields": null
        },
        {
          "name": "DependencyProxyManifestRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo replication and verification state of a dependency_proxy_manifest",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the DependencyProxyManifestRegistry was created"
            },
            {
              "name": "dependencyProxyManifestId",
              "description": "ID of the Dependency Proxy Manifest."
            },
            {
              "name": "id",
              "description": "ID of the DependencyProxyManifestRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the DependencyProxyManifestRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the DependencyProxyManifestRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the DependencyProxyManifestRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the DependencyProxyManifestRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the DependencyProxyManifestRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the DependencyProxyManifestRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the DependencyProxyManifestRegistry"
            }
          ]
        },
        {
          "name": "DependencyProxyManifestRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for DependencyProxyManifestRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DependencyProxyManifestRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DependencyProxyManifestStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "DependencyProxySetting",
          "kind": "OBJECT",
          "description": "Group-level Dependency Proxy settings",
          "fields": [
            {
              "name": "enabled",
              "description": "Indicates whether the dependency proxy is enabled for the group."
            }
          ]
        },
        {
          "name": "Deployment",
          "kind": "OBJECT",
          "description": "The deployment of an environment",
          "fields": [
            {
              "name": "approvalSummary",
              "description": "Approval summary of the deployment.This field can only be resolved for one deployment in any single request."
            },
            {
              "name": "commit",
              "description": "Commit details of the deployment."
            },
            {
              "name": "createdAt",
              "description": "When the deployment record was created."
            },
            {
              "name": "finishedAt",
              "description": "When the deployment finished."
            },
            {
              "name": "id",
              "description": "Global ID of the deployment."
            },
            {
              "name": "iid",
              "description": "Project-level internal ID of the deployment."
            },
            {
              "name": "job",
              "description": "Pipeline job of the deployment."
            },
            {
              "name": "ref",
              "description": "Git-Ref that the deployment ran on."
            },
            {
              "name": "sha",
              "description": "Git-SHA that the deployment ran on."
            },
            {
              "name": "status",
              "description": "Status of the deployment."
            },
            {
              "name": "tag",
              "description": "True or false if the deployment ran on a Git-tag."
            },
            {
              "name": "tags",
              "description": "Git tags that contain this deployment. This field can only be resolved for two deployments in any single request."
            },
            {
              "name": "triggerer",
              "description": "User who executed the deployment."
            },
            {
              "name": "updatedAt",
              "description": "When the deployment record was updated."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            }
          ]
        },
        {
          "name": "DeploymentApproval",
          "kind": "OBJECT",
          "description": "Approval of the deployment.",
          "fields": [
            {
              "name": "comment",
              "description": "Additional comment."
            },
            {
              "name": "createdAt",
              "description": "When the user approved/rejected first time."
            },
            {
              "name": "status",
              "description": "Whether the deployment was approved/rejected."
            },
            {
              "name": "updatedAt",
              "description": "When the user updated the approval."
            },
            {
              "name": "user",
              "description": "User who approved or rejected the deployment."
            }
          ]
        },
        {
          "name": "DeploymentApprovalSummary",
          "kind": "OBJECT",
          "description": "Approval summary of the deployment.",
          "fields": [
            {
              "name": "rules",
              "description": "Approval Rules for the deployment."
            },
            {
              "name": "status",
              "description": "Status of the approvals."
            },
            {
              "name": "totalPendingApprovalCount",
              "description": "Total pending approval count."
            },
            {
              "name": "totalRequiredApprovals",
              "description": "Total number of required approvals."
            }
          ]
        },
        {
          "name": "DeploymentApprovalSummaryStatus",
          "kind": "ENUM",
          "description": "Status of the deployment approval summary.",
          "fields": null
        },
        {
          "name": "DeploymentConnection",
          "kind": "OBJECT",
          "description": "The connection type for Deployment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DeploymentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DeploymentID",
          "kind": "SCALAR",
          "description": "A `DeploymentID` is a global ID. It is encoded as a string.\n\nAn example `DeploymentID` is: `\"gid://gitlab/Deployment/1\"`.",
          "fields": null
        },
        {
          "name": "DeploymentPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "approveDeployment",
              "description": "Indicates the user can perform `approve_deployment` on this resource. This field can only be resolved for one environment in any single request."
            },
            {
              "name": "destroyDeployment",
              "description": "Indicates the user can perform `destroy_deployment` on this resource"
            },
            {
              "name": "updateDeployment",
              "description": "Indicates the user can perform `update_deployment` on this resource"
            }
          ]
        },
        {
          "name": "DeploymentStatus",
          "kind": "ENUM",
          "description": "All deployment statuses.",
          "fields": null
        },
        {
          "name": "DeploymentTag",
          "kind": "OBJECT",
          "description": "Tags for a given deployment",
          "fields": [
            {
              "name": "name",
              "description": "Name of this git tag."
            },
            {
              "name": "path",
              "description": "Path for this tag."
            }
          ]
        },
        {
          "name": "DeploymentTier",
          "kind": "ENUM",
          "description": "All environment deployment tiers.",
          "fields": null
        },
        {
          "name": "DeploymentsApprovalStatus",
          "kind": "ENUM",
          "description": "Status of the deployment approval.",
          "fields": null
        },
        {
          "name": "DeploymentsOrderByInput",
          "kind": "INPUT_OBJECT",
          "description": "Values for ordering deployments by a specific field",
          "fields": null
        },
        {
          "name": "DescriptionVersion",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "description",
              "description": "Content of the given description version."
            },
            {
              "name": "diff",
              "description": "Description diff between versions."
            },
            {
              "name": "id",
              "description": "ID of the description version."
            }
          ]
        },
        {
          "name": "DescriptionVersionID",
          "kind": "SCALAR",
          "description": "A `DescriptionVersionID` is a global ID. It is encoded as a string.\n\nAn example `DescriptionVersionID` is: `\"gid://gitlab/DescriptionVersion/1\"`.",
          "fields": null
        },
        {
          "name": "Design",
          "kind": "OBJECT",
          "description": "A single design",
          "fields": [
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "currentUserTodos",
              "description": "To-do items for the current user."
            },
            {
              "name": "diffRefs",
              "description": "Diff refs for this design."
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "event",
              "description": "How this design was changed in the current version."
            },
            {
              "name": "filename",
              "description": "Filename of the design."
            },
            {
              "name": "fullPath",
              "description": "Full path to the design file."
            },
            {
              "name": "id",
              "description": "ID of this design."
            },
            {
              "name": "image",
              "description": "URL of the full-sized image."
            },
            {
              "name": "imageV432x230",
              "description": "The URL of the design resized to fit within the bounds of 432x230. This will be `null` if the image has not been generated"
            },
            {
              "name": "issue",
              "description": "Issue the design belongs to."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "notesCount",
              "description": "Total count of user-created notes for this design."
            },
            {
              "name": "project",
              "description": "Project the design belongs to."
            },
            {
              "name": "versions",
              "description": "All versions related to this design ordered newest first."
            },
            {
              "name": "webUrl",
              "description": "URL of the design."
            }
          ]
        },
        {
          "name": "DesignAtVersion",
          "kind": "OBJECT",
          "description": "A design pinned to a specific version. The image field reflects the design as of the associated version",
          "fields": [
            {
              "name": "design",
              "description": "Underlying design."
            },
            {
              "name": "diffRefs",
              "description": "Diff refs for this design."
            },
            {
              "name": "event",
              "description": "How this design was changed in the current version."
            },
            {
              "name": "filename",
              "description": "Filename of the design."
            },
            {
              "name": "fullPath",
              "description": "Full path to the design file."
            },
            {
              "name": "id",
              "description": "ID of this design."
            },
            {
              "name": "image",
              "description": "URL of the full-sized image."
            },
            {
              "name": "imageV432x230",
              "description": "The URL of the design resized to fit within the bounds of 432x230. This will be `null` if the image has not been generated"
            },
            {
              "name": "issue",
              "description": "Issue the design belongs to."
            },
            {
              "name": "notesCount",
              "description": "Total count of user-created notes for this design."
            },
            {
              "name": "project",
              "description": "Project the design belongs to."
            },
            {
              "name": "version",
              "description": "Version this design-at-versions is pinned to."
            }
          ]
        },
        {
          "name": "DesignAtVersionConnection",
          "kind": "OBJECT",
          "description": "The connection type for DesignAtVersion.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DesignAtVersionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DesignCollection",
          "kind": "OBJECT",
          "description": "A collection of designs",
          "fields": [
            {
              "name": "copyState",
              "description": "Copy state of the design collection."
            },
            {
              "name": "design",
              "description": "Find a specific design."
            },
            {
              "name": "designAtVersion",
              "description": "Find a design as of a version."
            },
            {
              "name": "designs",
              "description": "All designs for the design collection."
            },
            {
              "name": "issue",
              "description": "Issue associated with the design collection."
            },
            {
              "name": "project",
              "description": "Project associated with the design collection."
            },
            {
              "name": "version",
              "description": "A specific version."
            },
            {
              "name": "versions",
              "description": "All versions related to all designs, ordered newest first."
            }
          ]
        },
        {
          "name": "DesignCollectionCopyState",
          "kind": "ENUM",
          "description": "Copy state of a DesignCollection",
          "fields": null
        },
        {
          "name": "DesignConnection",
          "kind": "OBJECT",
          "description": "The connection type for Design.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DesignEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DesignFields",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "diffRefs",
              "description": "Diff refs for this design."
            },
            {
              "name": "event",
              "description": "How this design was changed in the current version."
            },
            {
              "name": "filename",
              "description": "Filename of the design."
            },
            {
              "name": "fullPath",
              "description": "Full path to the design file."
            },
            {
              "name": "id",
              "description": "ID of this design."
            },
            {
              "name": "image",
              "description": "URL of the full-sized image."
            },
            {
              "name": "imageV432x230",
              "description": "The URL of the design resized to fit within the bounds of 432x230. This will be `null` if the image has not been generated"
            },
            {
              "name": "issue",
              "description": "Issue the design belongs to."
            },
            {
              "name": "notesCount",
              "description": "Total count of user-created notes for this design."
            },
            {
              "name": "project",
              "description": "Project the design belongs to."
            }
          ]
        },
        {
          "name": "DesignManagement",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "designAtVersion",
              "description": "Find a design as of a version."
            },
            {
              "name": "version",
              "description": "Find a version."
            }
          ]
        },
        {
          "name": "DesignManagementDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DesignManagementDelete",
          "fields": null
        },
        {
          "name": "DesignManagementDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DesignManagementDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "version",
              "description": "New version in which the designs are deleted."
            }
          ]
        },
        {
          "name": "DesignManagementDesignAtVersionID",
          "kind": "SCALAR",
          "description": "A `DesignManagementDesignAtVersionID` is a global ID. It is encoded as a string.\n\nAn example `DesignManagementDesignAtVersionID` is: `\"gid://gitlab/DesignManagement::DesignAtVersion/1\"`.",
          "fields": null
        },
        {
          "name": "DesignManagementDesignID",
          "kind": "SCALAR",
          "description": "A `DesignManagementDesignID` is a global ID. It is encoded as a string.\n\nAn example `DesignManagementDesignID` is: `\"gid://gitlab/DesignManagement::Design/1\"`.",
          "fields": null
        },
        {
          "name": "DesignManagementMoveInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DesignManagementMove",
          "fields": null
        },
        {
          "name": "DesignManagementMovePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DesignManagementMove",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "designCollection",
              "description": "Current state of the collection."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DesignManagementUploadInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DesignManagementUpload",
          "fields": null
        },
        {
          "name": "DesignManagementUploadPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DesignManagementUpload",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "designs",
              "description": "Designs that were uploaded by the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "skippedDesigns",
              "description": "Any designs that were skipped from the upload due to there being no change to their content since their last version"
            }
          ]
        },
        {
          "name": "DesignManagementVersionID",
          "kind": "SCALAR",
          "description": "A `DesignManagementVersionID` is a global ID. It is encoded as a string.\n\nAn example `DesignManagementVersionID` is: `\"gid://gitlab/DesignManagement::Version/1\"`.",
          "fields": null
        },
        {
          "name": "DesignVersion",
          "kind": "OBJECT",
          "description": "A specific version in which designs were added, modified or deleted",
          "fields": [
            {
              "name": "author",
              "description": "Author of the version."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the version was created."
            },
            {
              "name": "designAtVersion",
              "description": "A particular design as of this version, provided it is visible at this version."
            },
            {
              "name": "designs",
              "description": "All designs that were changed in the version."
            },
            {
              "name": "designsAtVersion",
              "description": "All designs that are visible at this version, as of this version."
            },
            {
              "name": "id",
              "description": "ID of the design version."
            },
            {
              "name": "sha",
              "description": "SHA of the design version."
            }
          ]
        },
        {
          "name": "DesignVersionConnection",
          "kind": "OBJECT",
          "description": "The connection type for DesignVersion.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DesignVersionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DesignVersionEvent",
          "kind": "ENUM",
          "description": "Mutation event of a design within a version",
          "fields": null
        },
        {
          "name": "DestroyBoardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyBoard",
          "fields": null
        },
        {
          "name": "DestroyBoardListInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyBoardList",
          "fields": null
        },
        {
          "name": "DestroyBoardListPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyBoardList",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "list",
              "description": "List after mutation."
            }
          ]
        },
        {
          "name": "DestroyBoardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyBoard",
          "fields": [
            {
              "name": "board",
              "description": "Board after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyComplianceFrameworkInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyComplianceFramework",
          "fields": null
        },
        {
          "name": "DestroyComplianceFrameworkPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyComplianceFramework",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyContainerRepositoryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyContainerRepository",
          "fields": null
        },
        {
          "name": "DestroyContainerRepositoryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyContainerRepository",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "containerRepository",
              "description": "Container repository policy after scheduling the deletion."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyContainerRepositoryTagsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyContainerRepositoryTags",
          "fields": null
        },
        {
          "name": "DestroyContainerRepositoryTagsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyContainerRepositoryTags",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "deletedTagNames",
              "description": "Deleted container repository tags."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyCustomEmojiInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyCustomEmoji",
          "fields": null
        },
        {
          "name": "DestroyCustomEmojiPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyCustomEmoji",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "customEmoji",
              "description": "Deleted custom emoji."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyEpicBoardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyEpicBoard",
          "fields": null
        },
        {
          "name": "DestroyEpicBoardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyEpicBoard",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epicBoard",
              "description": "Epic board after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyNote",
          "fields": null
        },
        {
          "name": "DestroyNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "note",
              "description": "Note after mutation."
            }
          ]
        },
        {
          "name": "DestroyPackageFileInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyPackageFile",
          "fields": null
        },
        {
          "name": "DestroyPackageFilePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyPackageFile",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyPackageFilesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyPackageFiles",
          "fields": null
        },
        {
          "name": "DestroyPackageFilesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyPackageFiles",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyPackageInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyPackage",
          "fields": null
        },
        {
          "name": "DestroyPackagePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyPackage",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroyPackagesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroyPackages",
          "fields": null
        },
        {
          "name": "DestroyPackagesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroyPackages",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "DestroySnippetInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DestroySnippet",
          "fields": null
        },
        {
          "name": "DestroySnippetPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DestroySnippet",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "snippet",
              "description": "Snippet after mutation."
            }
          ]
        },
        {
          "name": "DetailedMergeStatus",
          "kind": "ENUM",
          "description": "Detailed representation of whether a GitLab merge request can be merged.",
          "fields": null
        },
        {
          "name": "DetailedStatus",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "action",
              "description": "Action information for the status. This includes method, button title, icon, path, and title."
            },
            {
              "name": "detailsPath",
              "description": "Path of the details for the status."
            },
            {
              "name": "favicon",
              "description": "Favicon of the status."
            },
            {
              "name": "group",
              "description": "Group of the status."
            },
            {
              "name": "hasDetails",
              "description": "Indicates if the status has further details."
            },
            {
              "name": "icon",
              "description": "Icon of the status."
            },
            {
              "name": "id",
              "description": "ID for a detailed status."
            },
            {
              "name": "label",
              "description": "Label of the status."
            },
            {
              "name": "text",
              "description": "Text of the status."
            },
            {
              "name": "tooltip",
              "description": "Tooltip associated with the status."
            }
          ]
        },
        {
          "name": "DevopsAdoptionEnabledNamespace",
          "kind": "OBJECT",
          "description": "Enabled namespace for DevopsAdoption",
          "fields": [
            {
              "name": "displayNamespace",
              "description": "Namespace where data should be displayed."
            },
            {
              "name": "id",
              "description": "ID of the enabled namespace."
            },
            {
              "name": "latestSnapshot",
              "description": "Metrics snapshot for previous month for the enabled namespace."
            },
            {
              "name": "namespace",
              "description": "Namespace which should be calculated."
            },
            {
              "name": "snapshots",
              "description": "Data snapshots of the namespace."
            }
          ]
        },
        {
          "name": "DevopsAdoptionEnabledNamespaceConnection",
          "kind": "OBJECT",
          "description": "The connection type for DevopsAdoptionEnabledNamespace.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DevopsAdoptionEnabledNamespaceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DevopsAdoptionSnapshot",
          "kind": "OBJECT",
          "description": "Snapshot",
          "fields": [
            {
              "name": "codeOwnersUsedCount",
              "description": "Total number of projects with existing CODEOWNERS file."
            },
            {
              "name": "coverageFuzzingEnabledCount",
              "description": "Total number of projects with enabled coverage fuzzing."
            },
            {
              "name": "dastEnabledCount",
              "description": "Total number of projects with enabled DAST."
            },
            {
              "name": "dependencyScanningEnabledCount",
              "description": "Total number of projects with enabled dependency scanning."
            },
            {
              "name": "deploySucceeded",
              "description": "At least one deployment succeeded."
            },
            {
              "name": "endTime",
              "description": "End time for the snapshot where the data points were collected."
            },
            {
              "name": "issueOpened",
              "description": "At least one issue was opened."
            },
            {
              "name": "mergeRequestApproved",
              "description": "At least one merge request was approved."
            },
            {
              "name": "mergeRequestOpened",
              "description": "At least one merge request was opened."
            },
            {
              "name": "pipelineSucceeded",
              "description": "At least one pipeline succeeded."
            },
            {
              "name": "recordedAt",
              "description": "Time the snapshot was recorded."
            },
            {
              "name": "runnerConfigured",
              "description": "At least one runner was used."
            },
            {
              "name": "sastEnabledCount",
              "description": "Total number of projects with enabled SAST."
            },
            {
              "name": "startTime",
              "description": "Start time for the snapshot where the data points were collected."
            },
            {
              "name": "totalProjectsCount",
              "description": "Total number of projects."
            },
            {
              "name": "vulnerabilityManagementUsedCount",
              "description": "Total number of projects with vulnerability management used at least once."
            }
          ]
        },
        {
          "name": "DevopsAdoptionSnapshotConnection",
          "kind": "OBJECT",
          "description": "The connection type for DevopsAdoptionSnapshot.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DevopsAdoptionSnapshotEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DiffImagePositionInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DiffNoteID",
          "kind": "SCALAR",
          "description": "A `DiffNoteID` is a global ID. It is encoded as a string.\n\nAn example `DiffNoteID` is: `\"gid://gitlab/DiffNote/1\"`.",
          "fields": null
        },
        {
          "name": "DiffPathsInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DiffPosition",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "diffRefs",
              "description": "Information about the branch, HEAD, and base at the time of commenting."
            },
            {
              "name": "filePath",
              "description": "Path of the file that was changed."
            },
            {
              "name": "height",
              "description": "Total height of the image."
            },
            {
              "name": "newLine",
              "description": "Line on HEAD SHA that was changed."
            },
            {
              "name": "newPath",
              "description": "Path of the file on the HEAD SHA."
            },
            {
              "name": "oldLine",
              "description": "Line on start SHA that was changed."
            },
            {
              "name": "oldPath",
              "description": "Path of the file on the start SHA."
            },
            {
              "name": "positionType",
              "description": "Type of file the position refers to."
            },
            {
              "name": "width",
              "description": "Total width of the image."
            },
            {
              "name": "x",
              "description": "X position of the note."
            },
            {
              "name": "y",
              "description": "Y position of the note."
            }
          ]
        },
        {
          "name": "DiffPositionInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "DiffPositionType",
          "kind": "ENUM",
          "description": "Type of file the position refers to",
          "fields": null
        },
        {
          "name": "DiffRefs",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "baseSha",
              "description": "Merge base of the branch the comment was made on."
            },
            {
              "name": "headSha",
              "description": "SHA of the HEAD at the time the comment was made."
            },
            {
              "name": "startSha",
              "description": "SHA of the branch being compared against."
            }
          ]
        },
        {
          "name": "DiffStats",
          "kind": "OBJECT",
          "description": "Changes to a single file",
          "fields": [
            {
              "name": "additions",
              "description": "Number of lines added to this file."
            },
            {
              "name": "deletions",
              "description": "Number of lines deleted from this file."
            },
            {
              "name": "path",
              "description": "File path, relative to repository root."
            }
          ]
        },
        {
          "name": "DiffStatsSummary",
          "kind": "OBJECT",
          "description": "Aggregated summary of changes",
          "fields": [
            {
              "name": "additions",
              "description": "Number of lines added."
            },
            {
              "name": "changes",
              "description": "Number of lines changed."
            },
            {
              "name": "deletions",
              "description": "Number of lines deleted."
            },
            {
              "name": "fileCount",
              "description": "Number of files changed."
            }
          ]
        },
        {
          "name": "DisableDevopsAdoptionNamespaceInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DisableDevopsAdoptionNamespace",
          "fields": null
        },
        {
          "name": "DisableDevopsAdoptionNamespacePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DisableDevopsAdoptionNamespace",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "Discussion",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of the discussion's creation."
            },
            {
              "name": "id",
              "description": "ID of this discussion."
            },
            {
              "name": "noteable",
              "description": "Object which the discussion belongs to."
            },
            {
              "name": "notes",
              "description": "All notes in the discussion."
            },
            {
              "name": "replyId",
              "description": "ID used to reply to this discussion."
            },
            {
              "name": "resolvable",
              "description": "Indicates if the object can be resolved."
            },
            {
              "name": "resolved",
              "description": "Indicates if the object is resolved."
            },
            {
              "name": "resolvedAt",
              "description": "Timestamp of when the object was resolved."
            },
            {
              "name": "resolvedBy",
              "description": "User who resolved the object."
            }
          ]
        },
        {
          "name": "DiscussionConnection",
          "kind": "OBJECT",
          "description": "The connection type for Discussion.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "DiscussionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "DiscussionID",
          "kind": "SCALAR",
          "description": "A `DiscussionID` is a global ID. It is encoded as a string.\n\nAn example `DiscussionID` is: `\"gid://gitlab/Discussion/1\"`.",
          "fields": null
        },
        {
          "name": "DiscussionToggleResolveInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of DiscussionToggleResolve",
          "fields": null
        },
        {
          "name": "DiscussionToggleResolvePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of DiscussionToggleResolve",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "discussion",
              "description": "Discussion after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "Dora",
          "kind": "OBJECT",
          "description": "All information related to DORA metrics.",
          "fields": [
            {
              "name": "metrics",
              "description": "DORA metrics for the current group or project."
            }
          ]
        },
        {
          "name": "DoraMetric",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "date",
              "description": "Date of the data point."
            },
            {
              "name": "value",
              "description": "Value of the data point."
            }
          ]
        },
        {
          "name": "DoraMetricBucketingInterval",
          "kind": "ENUM",
          "description": "All possible ways that DORA metrics can be aggregated.",
          "fields": null
        },
        {
          "name": "DoraMetricType",
          "kind": "ENUM",
          "description": "All supported DORA metric types.",
          "fields": null
        },
        {
          "name": "Duration",
          "kind": "SCALAR",
          "description": "Duration between two instants, represented as a fractional number of seconds.\n\nFor example: 12.3334\n",
          "fields": null
        },
        {
          "name": "EchoCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EchoCreate",
          "fields": null
        },
        {
          "name": "EchoCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EchoCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "echoes",
              "description": "Messages returned to the user."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "EgressNode",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "artifactsEgress",
              "description": "Artifacts egress for that project in that period of time."
            },
            {
              "name": "date",
              "description": "First day of the node range. There is one node per month."
            },
            {
              "name": "packagesEgress",
              "description": "Packages egress for that project in that period of time."
            },
            {
              "name": "registryEgress",
              "description": "Registery egress for that project in that period of time."
            },
            {
              "name": "repositoryEgress",
              "description": "Repository egress for that project in that period of time."
            },
            {
              "name": "totalEgress",
              "description": "Total egress for that project in that period of time."
            }
          ]
        },
        {
          "name": "EgressNodeConnection",
          "kind": "OBJECT",
          "description": "The connection type for EgressNode.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EgressNodeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "Email",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "confirmedAt",
              "description": "Timestamp the email was confirmed."
            },
            {
              "name": "createdAt",
              "description": "Timestamp the email was created."
            },
            {
              "name": "email",
              "description": "Email address."
            },
            {
              "name": "id",
              "description": "Internal ID of the email."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the email was last updated."
            }
          ]
        },
        {
          "name": "EmailConnection",
          "kind": "OBJECT",
          "description": "The connection type for Email.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EmailEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "EnableDevopsAdoptionNamespaceInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EnableDevopsAdoptionNamespace",
          "fields": null
        },
        {
          "name": "EnableDevopsAdoptionNamespacePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EnableDevopsAdoptionNamespace",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "enabledNamespace",
              "description": "Enabled namespace after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "Entry",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "flatPath",
              "description": "Flat path of the entry."
            },
            {
              "name": "id",
              "description": "ID of the entry."
            },
            {
              "name": "name",
              "description": "Name of the entry."
            },
            {
              "name": "path",
              "description": "Path of the entry."
            },
            {
              "name": "sha",
              "description": "Last commit SHA for the entry."
            },
            {
              "name": "type",
              "description": "Type of tree entry."
            }
          ]
        },
        {
          "name": "EntryType",
          "kind": "ENUM",
          "description": "Type of a tree entry",
          "fields": null
        },
        {
          "name": "Environment",
          "kind": "OBJECT",
          "description": "Describes where code is deployed for a project",
          "fields": [
            {
              "name": "autoDeleteAt",
              "description": "When the environment is going to be deleted automatically."
            },
            {
              "name": "autoStopAt",
              "description": "When the environment is going to be stopped automatically."
            },
            {
              "name": "createdAt",
              "description": "When the environment was created."
            },
            {
              "name": "deployFreezes",
              "description": "Deployment freeze periods of the environment."
            },
            {
              "name": "deployments",
              "description": "Deployments of the environment. This field can only be resolved for one environment in any single request."
            },
            {
              "name": "environmentType",
              "description": "Folder name of the environment."
            },
            {
              "name": "externalUrl",
              "description": "External URL of the environment."
            },
            {
              "name": "id",
              "description": "ID of the environment."
            },
            {
              "name": "lastDeployment",
              "description": "Last deployment of the environment."
            },
            {
              "name": "latestOpenedMostSevereAlert",
              "description": "Most severe open alert for the environment. If multiple alerts have equal severity, the most recent is returned."
            },
            {
              "name": "metricsDashboard",
              "description": "Metrics dashboard schema for the environment."
            },
            {
              "name": "name",
              "description": "Human-readable name of the environment."
            },
            {
              "name": "path",
              "description": "Path to the environment."
            },
            {
              "name": "protectedEnvironments",
              "description": "Protected Environments for the environment."
            },
            {
              "name": "slug",
              "description": "Slug of the environment."
            },
            {
              "name": "state",
              "description": "State of the environment, for example: available/stopped."
            },
            {
              "name": "tier",
              "description": "Deployment tier of the environment."
            },
            {
              "name": "updatedAt",
              "description": "When the environment was updated."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource. This field can only be resolved for one environment in any single request."
            }
          ]
        },
        {
          "name": "EnvironmentConnection",
          "kind": "OBJECT",
          "description": "The connection type for Environment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EnvironmentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "EnvironmentID",
          "kind": "SCALAR",
          "description": "A `EnvironmentID` is a global ID. It is encoded as a string.\n\nAn example `EnvironmentID` is: `\"gid://gitlab/Environment/1\"`.",
          "fields": null
        },
        {
          "name": "EnvironmentPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "destroyEnvironment",
              "description": "Indicates the user can perform `destroy_environment` on this resource"
            },
            {
              "name": "stopEnvironment",
              "description": "Indicates the user can perform `stop_environment` on this resource"
            },
            {
              "name": "updateEnvironment",
              "description": "Indicates the user can perform `update_environment` on this resource"
            }
          ]
        },
        {
          "name": "EnvironmentsCanaryIngressUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EnvironmentsCanaryIngressUpdate",
          "fields": null
        },
        {
          "name": "EnvironmentsCanaryIngressUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EnvironmentsCanaryIngressUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "Epic",
          "kind": "OBJECT",
          "description": "Represents an epic",
          "fields": [
            {
              "name": "ancestors",
              "description": "Ancestors (parents) of the epic."
            },
            {
              "name": "author",
              "description": "Author of the epic."
            },
            {
              "name": "awardEmoji",
              "description": "List of award emojis associated with the epic."
            },
            {
              "name": "blocked",
              "description": "Indicates the epic is blocked."
            },
            {
              "name": "blockedByCount",
              "description": "Count of epics blocking this epic."
            },
            {
              "name": "blockedByEpics",
              "description": "Epics blocking this epic."
            },
            {
              "name": "blockingCount",
              "description": "Count of epics that this epic is blocking."
            },
            {
              "name": "children",
              "description": "Children (sub-epics) of the epic."
            },
            {
              "name": "closedAt",
              "description": "Timestamp of when the epic was closed."
            },
            {
              "name": "color",
              "description": "Color of the epic. Returns `null` if `epic_color_highlight` feature flag is disabled."
            },
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "confidential",
              "description": "Indicates if the epic is confidential."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the epic was created."
            },
            {
              "name": "currentUserTodos",
              "description": "To-do items for the current user."
            },
            {
              "name": "defaultProjectForIssueCreation",
              "description": "Default Project for issue creation. Based on the project the user created the last issue in."
            },
            {
              "name": "descendantCounts",
              "description": "Number of open and closed descendant epics and issues."
            },
            {
              "name": "descendantWeightSum",
              "description": "Total weight of open and closed issues in the epic and its descendants."
            },
            {
              "name": "description",
              "description": "Description of the epic."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "downvotes",
              "description": "Number of downvotes the epic has received."
            },
            {
              "name": "dueDate",
              "description": "Due date of the epic."
            },
            {
              "name": "dueDateFixed",
              "description": "Fixed due date of the epic."
            },
            {
              "name": "dueDateFromInheritedSource",
              "description": "Inherited due date of the epic from child epics or milestones."
            },
            {
              "name": "dueDateFromMilestones",
              "description": "Inherited due date of the epic from milestones."
            },
            {
              "name": "dueDateIsFixed",
              "description": "Indicates if the due date has been manually set."
            },
            {
              "name": "events",
              "description": "List of events associated with the object."
            },
            {
              "name": "group",
              "description": "Group to which the epic belongs."
            },
            {
              "name": "hasChildren",
              "description": "Indicates if the epic has children."
            },
            {
              "name": "hasIssues",
              "description": "Indicates if the epic has direct issues."
            },
            {
              "name": "hasParent",
              "description": "Indicates if the epic has a parent epic."
            },
            {
              "name": "healthStatus",
              "description": "Current health status of the epic."
            },
            {
              "name": "id",
              "description": "ID of the epic."
            },
            {
              "name": "iid",
              "description": "Internal ID of the epic."
            },
            {
              "name": "issues",
              "description": "A list of issues associated with the epic."
            },
            {
              "name": "labels",
              "description": "Labels assigned to the epic."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "parent",
              "description": "Parent epic of the epic."
            },
            {
              "name": "participants",
              "description": "List of participants for the epic."
            },
            {
              "name": "reference",
              "description": "Internal reference of the epic. Returned in shortened format by default."
            },
            {
              "name": "relationPath",
              "description": "URI path of the epic-issue relationship."
            },
            {
              "name": "relativePosition",
              "description": "Relative position of the epic in the epic tree."
            },
            {
              "name": "startDate",
              "description": "Start date of the epic."
            },
            {
              "name": "startDateFixed",
              "description": "Fixed start date of the epic."
            },
            {
              "name": "startDateFromInheritedSource",
              "description": "Inherited start date of the epic from child epics or milestones."
            },
            {
              "name": "startDateFromMilestones",
              "description": "Inherited start date of the epic from milestones."
            },
            {
              "name": "startDateIsFixed",
              "description": "Indicates if the start date has been manually set."
            },
            {
              "name": "state",
              "description": "State of the epic."
            },
            {
              "name": "subscribed",
              "description": "Indicates the currently logged in user is subscribed to the epic."
            },
            {
              "name": "textColor",
              "description": "Text color generated for the epic. Returns `null` if `epic_color_highlight` feature flag is disabled."
            },
            {
              "name": "title",
              "description": "Title of the epic."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`"
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the epic was updated."
            },
            {
              "name": "upvotes",
              "description": "Number of upvotes the epic has received."
            },
            {
              "name": "userDiscussionsCount",
              "description": "Number of user discussions in the epic."
            },
            {
              "name": "userNotesCount",
              "description": "Number of user notes of the epic."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "webPath",
              "description": "Web path of the epic."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the epic."
            }
          ]
        },
        {
          "name": "EpicAddIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicAddIssue",
          "fields": null
        },
        {
          "name": "EpicAddIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicAddIssue",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epic",
              "description": "Epic after mutation."
            },
            {
              "name": "epicIssue",
              "description": "Epic-issue relationship."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "EpicBoard",
          "kind": "OBJECT",
          "description": "Represents an epic board",
          "fields": [
            {
              "name": "hideBacklogList",
              "description": "Whether or not backlog list is hidden."
            },
            {
              "name": "hideClosedList",
              "description": "Whether or not closed list is hidden."
            },
            {
              "name": "id",
              "description": "Global ID of the epic board."
            },
            {
              "name": "labels",
              "description": "Labels of the board."
            },
            {
              "name": "lists",
              "description": "Epic board lists."
            },
            {
              "name": "name",
              "description": "Name of the epic board."
            },
            {
              "name": "webPath",
              "description": "Web path of the epic board."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the epic board."
            }
          ]
        },
        {
          "name": "EpicBoardConnection",
          "kind": "OBJECT",
          "description": "The connection type for EpicBoard.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EpicBoardCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicBoardCreate",
          "fields": null
        },
        {
          "name": "EpicBoardCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicBoardCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epicBoard",
              "description": "Created epic board."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "EpicBoardEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "EpicBoardListCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicBoardListCreate",
          "fields": null
        },
        {
          "name": "EpicBoardListCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicBoardListCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "list",
              "description": "Epic list in the epic board."
            }
          ]
        },
        {
          "name": "EpicBoardListDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicBoardListDestroy",
          "fields": null
        },
        {
          "name": "EpicBoardListDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicBoardListDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "list",
              "description": "Epic board list. `null` if the board was destroyed successfully."
            }
          ]
        },
        {
          "name": "EpicBoardUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicBoardUpdate",
          "fields": null
        },
        {
          "name": "EpicBoardUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicBoardUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epicBoard",
              "description": "Updated epic board."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "EpicConnection",
          "kind": "OBJECT",
          "description": "The connection type for Epic.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EpicDescendantCount",
          "kind": "OBJECT",
          "description": "Counts of descendent epics",
          "fields": [
            {
              "name": "closedEpics",
              "description": "Number of closed child epics."
            },
            {
              "name": "closedIssues",
              "description": "Number of closed epic issues."
            },
            {
              "name": "openedEpics",
              "description": "Number of opened child epics."
            },
            {
              "name": "openedIssues",
              "description": "Number of opened epic issues."
            }
          ]
        },
        {
          "name": "EpicDescendantWeights",
          "kind": "OBJECT",
          "description": "Total weight of open and closed descendant issues",
          "fields": [
            {
              "name": "closedIssues",
              "description": "Total weight of completed (closed) issues in this epic, including epic descendants."
            },
            {
              "name": "openedIssues",
              "description": "Total weight of opened issues in this epic, including epic descendants."
            }
          ]
        },
        {
          "name": "EpicEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "EpicFilters",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "EpicHealthStatus",
          "kind": "OBJECT",
          "description": "Health status of child issues",
          "fields": [
            {
              "name": "issuesAtRisk",
              "description": "Number of issues at risk."
            },
            {
              "name": "issuesNeedingAttention",
              "description": "Number of issues that need attention."
            },
            {
              "name": "issuesOnTrack",
              "description": "Number of issues on track."
            }
          ]
        },
        {
          "name": "EpicID",
          "kind": "SCALAR",
          "description": "A `EpicID` is a global ID. It is encoded as a string.\n\nAn example `EpicID` is: `\"gid://gitlab/Epic/1\"`.",
          "fields": null
        },
        {
          "name": "EpicIssue",
          "kind": "OBJECT",
          "description": "Relationship between an epic and an issue",
          "fields": [
            {
              "name": "alertManagementAlerts",
              "description": "Alert Management alerts associated to this issue."
            },
            {
              "name": "assignees",
              "description": "Assignees of the issue."
            },
            {
              "name": "author",
              "description": "User that created the issue."
            },
            {
              "name": "blocked",
              "description": "Indicates the issue is blocked."
            },
            {
              "name": "blockedByCount",
              "description": "Count of issues blocking this issue."
            },
            {
              "name": "blockedByIssues",
              "description": "Issues blocking this issue."
            },
            {
              "name": "blockingCount",
              "description": "Count of issues this issue is blocking."
            },
            {
              "name": "closedAsDuplicateOf",
              "description": "Issue this issue was closed as a duplicate of."
            },
            {
              "name": "closedAt",
              "description": "Timestamp of when the issue was closed."
            },
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "confidential",
              "description": "Indicates the issue is confidential."
            },
            {
              "name": "createNoteEmail",
              "description": "User specific email address for the issue."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the issue was created."
            },
            {
              "name": "currentUserTodos",
              "description": "To-do items for the current user."
            },
            {
              "name": "customerRelationsContacts",
              "description": "Customer relations contacts of the issue."
            },
            {
              "name": "description",
              "description": "Description of the issue."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "designCollection",
              "description": "Collection of design images associated with this issue."
            },
            {
              "name": "discussionLocked",
              "description": "Indicates discussion is locked on the issue."
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "downvotes",
              "description": "Number of downvotes the issue has received."
            },
            {
              "name": "dueDate",
              "description": "Due date of the issue."
            },
            {
              "name": "emailsDisabled",
              "description": "Indicates if a project has email notifications disabled: `true` if email notifications are disabled."
            },
            {
              "name": "epic",
              "description": "Epic to which this issue belongs."
            },
            {
              "name": "epicIssueId",
              "description": "ID of the epic-issue relation."
            },
            {
              "name": "escalationPolicy",
              "description": "Escalation policy associated with the issue. Available for issues which support escalation."
            },
            {
              "name": "escalationStatus",
              "description": "Escalation status of the issue."
            },
            {
              "name": "hasEpic",
              "description": "Indicates if the issue belongs to an epic.\n            Can return true and not show an associated epic when the user has no access to the epic."
            },
            {
              "name": "healthStatus",
              "description": "Current health status."
            },
            {
              "name": "hidden",
              "description": "Indicates the issue is hidden because the author has been banned."
            },
            {
              "name": "humanTimeEstimate",
              "description": "Human-readable time estimate of the issue."
            },
            {
              "name": "humanTotalTimeSpent",
              "description": "Human-readable total time reported as spent on the issue."
            },
            {
              "name": "id",
              "description": "Global ID of the epic-issue relation."
            },
            {
              "name": "iid",
              "description": "Internal ID of the issue."
            },
            {
              "name": "issuableResourceLinks",
              "description": "Issuable resource links of the incident issue."
            },
            {
              "name": "iteration",
              "description": "Iteration of the issue."
            },
            {
              "name": "labels",
              "description": "Labels of the issue."
            },
            {
              "name": "mergeRequestsCount",
              "description": "Number of merge requests that close the issue on merge."
            },
            {
              "name": "metricImages",
              "description": "Metric images associated to the issue."
            },
            {
              "name": "milestone",
              "description": "Milestone of the issue."
            },
            {
              "name": "moved",
              "description": "Indicates if issue got moved from other project."
            },
            {
              "name": "movedTo",
              "description": "Updated Issue after it got moved to another project."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "participants",
              "description": "List of participants in the issue."
            },
            {
              "name": "projectId",
              "description": "ID of the issue project."
            },
            {
              "name": "reference",
              "description": "Internal reference of the issue. Returned in shortened format by default."
            },
            {
              "name": "relatedMergeRequests",
              "description": "Merge requests related to the issue. This field can only be resolved for one issue in any single request."
            },
            {
              "name": "relatedVulnerabilities",
              "description": "Related vulnerabilities of the issue."
            },
            {
              "name": "relationPath",
              "description": "URI path of the epic-issue relation."
            },
            {
              "name": "relativePosition",
              "description": "Relative position of the issue (used for positioning in epic tree and issue boards)."
            },
            {
              "name": "severity",
              "description": "Severity level of the incident."
            },
            {
              "name": "slaDueAt",
              "description": "Timestamp of when the issue SLA expires."
            },
            {
              "name": "state",
              "description": "State of the issue."
            },
            {
              "name": "statusPagePublishedIncident",
              "description": "Indicates whether an issue is published to the status page."
            },
            {
              "name": "subscribed",
              "description": "Indicates the currently logged in user is subscribed to the issue."
            },
            {
              "name": "taskCompletionStatus",
              "description": "Task completion status of the issue."
            },
            {
              "name": "timeEstimate",
              "description": "Time estimate of the issue."
            },
            {
              "name": "timelogs",
              "description": "Timelogs on the issue."
            },
            {
              "name": "title",
              "description": "Title of the issue."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`"
            },
            {
              "name": "totalTimeSpent",
              "description": "Total time reported as spent on the issue."
            },
            {
              "name": "type",
              "description": "Type of the issue."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the issue was last updated."
            },
            {
              "name": "updatedBy",
              "description": "User that last updated the issue."
            },
            {
              "name": "upvotes",
              "description": "Number of upvotes the issue has received."
            },
            {
              "name": "userDiscussionsCount",
              "description": "Number of user discussions in the issue."
            },
            {
              "name": "userNotesCount",
              "description": "Number of user notes of the issue."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "webPath",
              "description": "Web path of the issue."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the issue."
            },
            {
              "name": "weight",
              "description": "Weight of the issue."
            }
          ]
        },
        {
          "name": "EpicIssueConnection",
          "kind": "OBJECT",
          "description": "The connection type for EpicIssue.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            },
            {
              "name": "weight",
              "description": "Total weight of issues collection."
            }
          ]
        },
        {
          "name": "EpicIssueEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "EpicList",
          "kind": "OBJECT",
          "description": "Represents an epic board list",
          "fields": [
            {
              "name": "collapsed",
              "description": "Indicates if this list is collapsed for this user."
            },
            {
              "name": "epics",
              "description": "List epics."
            },
            {
              "name": "id",
              "description": "Global ID of the board list."
            },
            {
              "name": "label",
              "description": "Label of the list."
            },
            {
              "name": "listType",
              "description": "Type of the list."
            },
            {
              "name": "metadata",
              "description": "Epic list metatada."
            },
            {
              "name": "position",
              "description": "Position of the list within the board."
            },
            {
              "name": "title",
              "description": "Title of the list."
            }
          ]
        },
        {
          "name": "EpicListConnection",
          "kind": "OBJECT",
          "description": "The connection type for EpicList.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EpicListEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "EpicListMetadata",
          "kind": "OBJECT",
          "description": "Represents epic board list metadata",
          "fields": [
            {
              "name": "epicsCount",
              "description": "Count of epics in the list."
            }
          ]
        },
        {
          "name": "EpicMoveListInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicMoveList",
          "fields": null
        },
        {
          "name": "EpicMoveListPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicMoveList",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epic",
              "description": "Epic after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "EpicPermissions",
          "kind": "OBJECT",
          "description": "Check permissions for the current user on an epic",
          "fields": [
            {
              "name": "adminEpic",
              "description": "Indicates the user can perform `admin_epic` on this resource"
            },
            {
              "name": "awardEmoji",
              "description": "Indicates the user can perform `award_emoji` on this resource"
            },
            {
              "name": "createEpic",
              "description": "Indicates the user can perform `create_epic` on this resource"
            },
            {
              "name": "createNote",
              "description": "Indicates the user can perform `create_note` on this resource"
            },
            {
              "name": "destroyEpic",
              "description": "Indicates the user can perform `destroy_epic` on this resource"
            },
            {
              "name": "readEpic",
              "description": "Indicates the user can perform `read_epic` on this resource"
            },
            {
              "name": "readEpicIid",
              "description": "Indicates the user can perform `read_epic_iid` on this resource"
            },
            {
              "name": "updateEpic",
              "description": "Indicates the user can perform `update_epic` on this resource"
            }
          ]
        },
        {
          "name": "EpicSetSubscriptionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicSetSubscription",
          "fields": null
        },
        {
          "name": "EpicSetSubscriptionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicSetSubscription",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epic",
              "description": "Epic after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "EpicSort",
          "kind": "ENUM",
          "description": "Roadmap sort values",
          "fields": null
        },
        {
          "name": "EpicState",
          "kind": "ENUM",
          "description": "State of an epic",
          "fields": null
        },
        {
          "name": "EpicStateEvent",
          "kind": "ENUM",
          "description": "State event of an epic",
          "fields": null
        },
        {
          "name": "EpicTreeNodeFieldsInputType",
          "kind": "INPUT_OBJECT",
          "description": "A node of an epic tree.",
          "fields": null
        },
        {
          "name": "EpicTreeReorderInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EpicTreeReorder",
          "fields": null
        },
        {
          "name": "EpicTreeReorderPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EpicTreeReorder",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "EpicTreeSortingID",
          "kind": "SCALAR",
          "description": "A `EpicTreeSortingID` is a global ID. It is encoded as a string.\n\nAn example `EpicTreeSortingID` is: `\"gid://gitlab/EpicTreeSorting/1\"`.",
          "fields": null
        },
        {
          "name": "EpicWildcardId",
          "kind": "ENUM",
          "description": "Epic ID wildcard values",
          "fields": null
        },
        {
          "name": "EscalationPolicyCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EscalationPolicyCreate",
          "fields": null
        },
        {
          "name": "EscalationPolicyCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EscalationPolicyCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "escalationPolicy",
              "description": "Escalation policy."
            }
          ]
        },
        {
          "name": "EscalationPolicyDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EscalationPolicyDestroy",
          "fields": null
        },
        {
          "name": "EscalationPolicyDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EscalationPolicyDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "escalationPolicy",
              "description": "Escalation policy."
            }
          ]
        },
        {
          "name": "EscalationPolicyType",
          "kind": "OBJECT",
          "description": "Represents an escalation policy",
          "fields": [
            {
              "name": "description",
              "description": "Description of the escalation policy."
            },
            {
              "name": "id",
              "description": "ID of the escalation policy."
            },
            {
              "name": "name",
              "description": "Name of the escalation policy."
            },
            {
              "name": "rules",
              "description": "Steps of the escalation policy."
            }
          ]
        },
        {
          "name": "EscalationPolicyTypeConnection",
          "kind": "OBJECT",
          "description": "The connection type for EscalationPolicyType.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EscalationPolicyTypeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "EscalationPolicyUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of EscalationPolicyUpdate",
          "fields": null
        },
        {
          "name": "EscalationPolicyUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of EscalationPolicyUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "escalationPolicy",
              "description": "Escalation policy."
            }
          ]
        },
        {
          "name": "EscalationRuleInput",
          "kind": "INPUT_OBJECT",
          "description": "Represents an escalation rule",
          "fields": null
        },
        {
          "name": "EscalationRuleStatus",
          "kind": "ENUM",
          "description": "Escalation rule statuses",
          "fields": null
        },
        {
          "name": "EscalationRuleType",
          "kind": "OBJECT",
          "description": "Represents an escalation rule for an escalation policy",
          "fields": [
            {
              "name": "elapsedTimeSeconds",
              "description": "Time in seconds before the rule is activated."
            },
            {
              "name": "id",
              "description": "ID of the escalation policy."
            },
            {
              "name": "oncallSchedule",
              "description": "On-call schedule to notify."
            },
            {
              "name": "status",
              "description": "Status required to prevent the rule from activating."
            },
            {
              "name": "user",
              "description": "User to notify."
            }
          ]
        },
        {
          "name": "Event",
          "kind": "OBJECT",
          "description": "Representing an event",
          "fields": [
            {
              "name": "action",
              "description": "Action of the event."
            },
            {
              "name": "author",
              "description": "Author of this event."
            },
            {
              "name": "createdAt",
              "description": "When this event was created."
            },
            {
              "name": "id",
              "description": "ID of the event."
            },
            {
              "name": "updatedAt",
              "description": "When this event was updated."
            }
          ]
        },
        {
          "name": "EventAction",
          "kind": "ENUM",
          "description": "Event action",
          "fields": null
        },
        {
          "name": "EventConnection",
          "kind": "OBJECT",
          "description": "The connection type for Event.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "EventEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "Eventable",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "events",
              "description": "List of events associated with the object."
            }
          ]
        },
        {
          "name": "ExportRequirementsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ExportRequirements",
          "fields": null
        },
        {
          "name": "ExportRequirementsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ExportRequirements",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ExternalAuditEventDestination",
          "kind": "OBJECT",
          "description": "Represents an external resource to send audit events to",
          "fields": [
            {
              "name": "destinationUrl",
              "description": "External destination to send audit events to."
            },
            {
              "name": "eventTypeFilters",
              "description": "List of event type filters added for streaming."
            },
            {
              "name": "group",
              "description": "Group the destination belongs to."
            },
            {
              "name": "headers",
              "description": "List of additional HTTP headers sent with each event."
            },
            {
              "name": "id",
              "description": "ID of the destination."
            },
            {
              "name": "verificationToken",
              "description": "Verification token to validate source of event."
            }
          ]
        },
        {
          "name": "ExternalAuditEventDestinationConnection",
          "kind": "OBJECT",
          "description": "The connection type for ExternalAuditEventDestination.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ExternalAuditEventDestinationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ExternalAuditEventDestinationCreate",
          "fields": null
        },
        {
          "name": "ExternalAuditEventDestinationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ExternalAuditEventDestinationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "externalAuditEventDestination",
              "description": "Destination created."
            }
          ]
        },
        {
          "name": "ExternalAuditEventDestinationDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ExternalAuditEventDestinationDestroy",
          "fields": null
        },
        {
          "name": "ExternalAuditEventDestinationDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ExternalAuditEventDestinationDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ExternalAuditEventDestinationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ExternalAuditEventDestinationUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ExternalAuditEventDestinationUpdate",
          "fields": null
        },
        {
          "name": "ExternalAuditEventDestinationUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ExternalAuditEventDestinationUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "externalAuditEventDestination",
              "description": "Updated destination."
            }
          ]
        },
        {
          "name": "ExternalIssue",
          "kind": "OBJECT",
          "description": "Represents an external issue",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of when the issue was created."
            },
            {
              "name": "externalTracker",
              "description": "Type of external tracker."
            },
            {
              "name": "relativeReference",
              "description": "Relative reference of the issue in the external tracker."
            },
            {
              "name": "status",
              "description": "Status of the issue in the external tracker."
            },
            {
              "name": "title",
              "description": "Title of the issue in the external tracker."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the issue was updated."
            },
            {
              "name": "webUrl",
              "description": "URL to the issue in the external tracker."
            }
          ]
        },
        {
          "name": "ExternalStatusCheck",
          "kind": "OBJECT",
          "description": "Describes an external status check.",
          "fields": [
            {
              "name": "externalUrl",
              "description": "External URL for the status check."
            },
            {
              "name": "id",
              "description": "ID of the rule."
            },
            {
              "name": "name",
              "description": "Name of the rule."
            }
          ]
        },
        {
          "name": "ExternalStatusCheckConnection",
          "kind": "OBJECT",
          "description": "The connection type for ExternalStatusCheck.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ExternalStatusCheckEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "FileUpload",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "Global ID of the upload."
            },
            {
              "name": "path",
              "description": "Path of the upload."
            },
            {
              "name": "size",
              "description": "Size of the upload in bytes."
            }
          ]
        },
        {
          "name": "Float",
          "kind": "SCALAR",
          "description": "Represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null
        },
        {
          "name": "ForkDetails",
          "kind": "OBJECT",
          "description": "Details of the fork project compared to its upstream project.",
          "fields": [
            {
              "name": "ahead",
              "description": "Number of commits ahead of upstream."
            },
            {
              "name": "behind",
              "description": "Number of commits behind upstream."
            }
          ]
        },
        {
          "name": "GeoNode",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "ciSecureFileRegistries",
              "description": "Find Ci Secure File registries on this Geo node"
            },
            {
              "name": "containerRepositoriesMaxCapacity",
              "description": "Maximum concurrency of container repository sync for this secondary node."
            },
            {
              "name": "containerRepositoryRegistries",
              "description": "Find Container Repository registries on this Geo node."
            },
            {
              "name": "dependencyProxyManifestRegistries",
              "description": "Find Dependency Proxy Manifest registries on this Geo node."
            },
            {
              "name": "enabled",
              "description": "Indicates whether this Geo node is enabled."
            },
            {
              "name": "filesMaxCapacity",
              "description": "Maximum concurrency of LFS/attachment backfill for this secondary node."
            },
            {
              "name": "groupWikiRepositoryRegistries",
              "description": "Find group wiki repository registries on this Geo node."
            },
            {
              "name": "id",
              "description": "ID of this GeoNode."
            },
            {
              "name": "internalUrl",
              "description": "URL defined on the primary node secondary nodes should use to contact it."
            },
            {
              "name": "jobArtifactRegistries",
              "description": "Find Job Artifact registries on this Geo node."
            },
            {
              "name": "lfsObjectRegistries",
              "description": "Find LFS object registries on this Geo node."
            },
            {
              "name": "mergeRequestDiffRegistries",
              "description": "Find merge request diff registries on this Geo node."
            },
            {
              "name": "minimumReverificationInterval",
              "description": "Interval (in days) in which the repository verification is valid. After expiry, it is reverted."
            },
            {
              "name": "name",
              "description": "Unique identifier for this Geo node."
            },
            {
              "name": "packageFileRegistries",
              "description": "Package file registries of the GeoNode."
            },
            {
              "name": "pagesDeploymentRegistries",
              "description": "Find Pages Deployment registries on this Geo node"
            },
            {
              "name": "pipelineArtifactRegistries",
              "description": "Find pipeline artifact registries on this Geo node."
            },
            {
              "name": "primary",
              "description": "Indicates whether this Geo node is the primary."
            },
            {
              "name": "reposMaxCapacity",
              "description": "Maximum concurrency of repository backfill for this secondary node."
            },
            {
              "name": "selectiveSyncNamespaces",
              "description": "Namespaces that should be synced, if `selective_sync_type` == `namespaces`."
            },
            {
              "name": "selectiveSyncShards",
              "description": "Repository storages whose projects should be synced, if `selective_sync_type` == `shards`."
            },
            {
              "name": "selectiveSyncType",
              "description": "Indicates if syncing is limited to only specific groups, or shards."
            },
            {
              "name": "snippetRepositoryRegistries",
              "description": "Find snippet repository registries on this Geo node."
            },
            {
              "name": "syncObjectStorage",
              "description": "Indicates if this secondary node will replicate blobs in Object Storage."
            },
            {
              "name": "terraformStateVersionRegistries",
              "description": "Find terraform state version registries on this Geo node."
            },
            {
              "name": "uploadRegistries",
              "description": "Find Upload registries on this Geo node"
            },
            {
              "name": "url",
              "description": "User-facing URL for this Geo node."
            },
            {
              "name": "verificationMaxCapacity",
              "description": "Maximum concurrency of repository verification for this secondary node."
            }
          ]
        },
        {
          "name": "GitlabErrorTrackingDetailedErrorID",
          "kind": "SCALAR",
          "description": "A `GitlabErrorTrackingDetailedErrorID` is a global ID. It is encoded as a string.\n\nAn example `GitlabErrorTrackingDetailedErrorID` is: `\"gid://gitlab/Gitlab::ErrorTracking::DetailedError/1\"`.",
          "fields": null
        },
        {
          "name": "GitlabSubscriptionActivateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of GitlabSubscriptionActivate",
          "fields": null
        },
        {
          "name": "GitlabSubscriptionActivatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of GitlabSubscriptionActivate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "futureSubscriptions",
              "description": "Array of future subscriptions."
            },
            {
              "name": "license",
              "description": "Current license."
            }
          ]
        },
        {
          "name": "GitlabSubscriptionsUserRole",
          "kind": "ENUM",
          "description": "Role of User",
          "fields": null
        },
        {
          "name": "GlobalID",
          "kind": "SCALAR",
          "description": "A global identifier.\n\nA global identifier represents an object uniquely across the application.\nAn example of such an identifier is `\"gid://gitlab/User/1\"`.\n\nGlobal identifiers are encoded as strings.\n",
          "fields": null
        },
        {
          "name": "GpgSignature",
          "kind": "OBJECT",
          "description": "GPG signature for a signed commit",
          "fields": [
            {
              "name": "commitSha",
              "description": "SHA of the associated commit."
            },
            {
              "name": "gpgKeyPrimaryKeyid",
              "description": "ID of the GPG key."
            },
            {
              "name": "gpgKeyUserEmail",
              "description": "User email associated with the GPG key."
            },
            {
              "name": "gpgKeyUserName",
              "description": "User name associated with the GPG key."
            },
            {
              "name": "project",
              "description": "Project of the associated commit."
            },
            {
              "name": "user",
              "description": "User associated with the key."
            },
            {
              "name": "verificationStatus",
              "description": "Indicates verification status of the associated key or certificate."
            }
          ]
        },
        {
          "name": "GrafanaIntegration",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of the issue's creation."
            },
            {
              "name": "enabled",
              "description": "Indicates whether Grafana integration is enabled."
            },
            {
              "name": "grafanaUrl",
              "description": "URL for the Grafana host for the Grafana integration."
            },
            {
              "name": "id",
              "description": "Internal ID of the Grafana integration."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of the issue's last activity."
            }
          ]
        },
        {
          "name": "Group",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "actualRepositorySizeLimit",
              "description": "Size limit for repositories in the namespace in bytes."
            },
            {
              "name": "additionalPurchasedStorageSize",
              "description": "Additional storage purchased for the root namespace in bytes."
            },
            {
              "name": "allowStaleRunnerPruning",
              "description": "Indicates whether to regularly prune stale group runners. Defaults to false."
            },
            {
              "name": "autoDevopsEnabled",
              "description": "Indicates whether Auto DevOps is enabled for all projects within this group."
            },
            {
              "name": "avatarUrl",
              "description": "Avatar URL of the group."
            },
            {
              "name": "billableMembersCount",
              "description": "Number of billable users in the group."
            },
            {
              "name": "board",
              "description": "A single board of the group."
            },
            {
              "name": "boards",
              "description": "Boards of the group."
            },
            {
              "name": "ciVariables",
              "description": "List of the group's CI/CD variables."
            },
            {
              "name": "clusterAgents",
              "description": "Cluster agents associated with projects in the group and its subgroups."
            },
            {
              "name": "codeCoverageActivities",
              "description": "Represents the code coverage activity for this group."
            },
            {
              "name": "complianceFrameworks",
              "description": "Compliance frameworks available to projects in this namespace."
            },
            {
              "name": "contactStateCounts",
              "description": "Counts of contacts by state for the group."
            },
            {
              "name": "contacts",
              "description": "Find contacts of this group."
            },
            {
              "name": "containerRepositories",
              "description": "Container repositories of the group."
            },
            {
              "name": "containerRepositoriesCount",
              "description": "Number of container repositories in the group."
            },
            {
              "name": "containsLockedProjects",
              "description": "Includes at least one project where the repository size exceeds the limit."
            },
            {
              "name": "contributions",
              "description": "Provides the aggregated contributions by users within the group and its subgroups"
            },
            {
              "name": "crossProjectPipelineAvailable",
              "description": "Indicates if the cross_project_pipeline feature is available for the namespace."
            },
            {
              "name": "dataTransfer",
              "description": "Data transfer data point for a specific period. This is mocked data under a development feature flag."
            },
            {
              "name": "dependencyProxyBlobCount",
              "description": "Number of dependency proxy blobs cached in the group."
            },
            {
              "name": "dependencyProxyBlobs",
              "description": "Dependency Proxy blobs."
            },
            {
              "name": "dependencyProxyImageCount",
              "description": "Number of dependency proxy images cached in the group."
            },
            {
              "name": "dependencyProxyImagePrefix",
              "description": "Prefix for pulling images when using the dependency proxy."
            },
            {
              "name": "dependencyProxyImageTtlPolicy",
              "description": "Dependency proxy TTL policy for the group."
            },
            {
              "name": "dependencyProxyManifests",
              "description": "Dependency Proxy manifests."
            },
            {
              "name": "dependencyProxySetting",
              "description": "Dependency Proxy settings for the group."
            },
            {
              "name": "dependencyProxyTotalSize",
              "description": "Total size of the dependency proxy cached images."
            },
            {
              "name": "descendantGroups",
              "description": "List of descendant groups of this group."
            },
            {
              "name": "description",
              "description": "Description of the namespace."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "dora",
              "description": "Group's DORA metrics."
            },
            {
              "name": "emailsDisabled",
              "description": "Indicates if a group has email notifications disabled."
            },
            {
              "name": "enforceFreeUserCap",
              "description": "Indicates whether the group has limited users for a free plan."
            },
            {
              "name": "epic",
              "description": "Find a single epic."
            },
            {
              "name": "epicBoard",
              "description": "Find a single epic board."
            },
            {
              "name": "epicBoards",
              "description": "Find epic boards."
            },
            {
              "name": "epics",
              "description": "Find epics."
            },
            {
              "name": "epicsEnabled",
              "description": "Indicates if Epics are enabled for namespace"
            },
            {
              "name": "externalAuditEventDestinations",
              "description": "External locations that receive audit events belonging to the group."
            },
            {
              "name": "fullName",
              "description": "Full name of the namespace."
            },
            {
              "name": "fullPath",
              "description": "Full path of the namespace."
            },
            {
              "name": "gitlabSubscriptionsPreviewBillableUserChange",
              "description": "Preview Billable User Changes"
            },
            {
              "name": "groupMembers",
              "description": "A membership of a user within this group."
            },
            {
              "name": "id",
              "description": "ID of the namespace."
            },
            {
              "name": "isTemporaryStorageIncreaseEnabled",
              "description": "Status of the temporary storage increase."
            },
            {
              "name": "issues",
              "description": "Issues for projects in this group."
            },
            {
              "name": "iterationCadences",
              "description": "Find iteration cadences."
            },
            {
              "name": "iterations",
              "description": "Find iterations."
            },
            {
              "name": "label",
              "description": "Label available on this group."
            },
            {
              "name": "labels",
              "description": "Labels available on this group."
            },
            {
              "name": "lfsEnabled",
              "description": "Indicates if Large File Storage (LFS) is enabled for namespace."
            },
            {
              "name": "mentionsDisabled",
              "description": "Indicates if a group is disabled from getting mentioned."
            },
            {
              "name": "mergeRequestViolations",
              "description": "Compliance violations reported on merge requests merged within the group."
            },
            {
              "name": "mergeRequests",
              "description": "Merge requests for projects in this group."
            },
            {
              "name": "milestones",
              "description": "Milestones of the group."
            },
            {
              "name": "name",
              "description": "Name of the namespace."
            },
            {
              "name": "organizationStateCounts",
              "description": "Counts of organizations by status for the group."
            },
            {
              "name": "organizations",
              "description": "Find organizations of this group."
            },
            {
              "name": "packageSettings",
              "description": "Package settings for the namespace."
            },
            {
              "name": "packages",
              "description": "Packages of the group. This field can only be resolved for one group in any single request."
            },
            {
              "name": "parent",
              "description": "Parent group."
            },
            {
              "name": "path",
              "description": "Path of the namespace."
            },
            {
              "name": "projectCreationLevel",
              "description": "Permission level required to create projects in the group."
            },
            {
              "name": "projects",
              "description": "Projects within this namespace."
            },
            {
              "name": "recentIssueBoards",
              "description": "List of recently visited boards of the group. Maximum size is 4."
            },
            {
              "name": "releases",
              "description": "Releases belonging to projects in the group."
            },
            {
              "name": "repositorySizeExcessProjectCount",
              "description": "Number of projects in the root namespace where the repository size exceeds the limit."
            },
            {
              "name": "requestAccessEnabled",
              "description": "Indicates if users can request access to namespace."
            },
            {
              "name": "requireTwoFactorAuthentication",
              "description": "Indicates if all users in this group are required to set up two-factor authentication."
            },
            {
              "name": "rootStorageStatistics",
              "description": "Aggregated storage statistics of the namespace. Only available for root namespaces."
            },
            {
              "name": "runners",
              "description": "Find runners visible to the current user."
            },
            {
              "name": "scanExecutionPolicies",
              "description": "Scan Execution Policies of the namespace."
            },
            {
              "name": "scanResultPolicies",
              "description": "Scan Result Policies of the project"
            },
            {
              "name": "shareWithGroupLock",
              "description": "Indicates if sharing a project with another group within this group is prevented."
            },
            {
              "name": "sharedRunnersSetting",
              "description": "Shared runners availability for the namespace and its descendants."
            },
            {
              "name": "stats",
              "description": "Group statistics."
            },
            {
              "name": "storageSizeLimit",
              "description": "Total storage limit of the root namespace in bytes."
            },
            {
              "name": "subgroupCreationLevel",
              "description": "Permission level required to create subgroups within the group."
            },
            {
              "name": "temporaryStorageIncreaseEndsOn",
              "description": "Date until the temporary storage increase is active."
            },
            {
              "name": "timelogs",
              "description": "Time logged on issues and merge requests in the group and its subgroups."
            },
            {
              "name": "totalRepositorySize",
              "description": "Total repository size of all projects in the root namespace in bytes."
            },
            {
              "name": "totalRepositorySizeExcess",
              "description": "Total excess repository size of all projects in the root namespace in bytes."
            },
            {
              "name": "twoFactorGracePeriod",
              "description": "Time before two-factor authentication is enforced."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "visibility",
              "description": "Visibility of the namespace."
            },
            {
              "name": "vulnerabilities",
              "description": "Vulnerabilities reported on the projects in the group and its subgroups."
            },
            {
              "name": "vulnerabilitiesCountByDay",
              "description": "The historical number of vulnerabilities per day for the projects in the group and its subgroups."
            },
            {
              "name": "vulnerabilityGrades",
              "description": "Represents vulnerable project counts for each grade."
            },
            {
              "name": "vulnerabilityScanners",
              "description": "Vulnerability scanners reported on the project vulnerabilities of the group and its subgroups."
            },
            {
              "name": "vulnerabilitySeveritiesCount",
              "description": "Counts for each vulnerability severity in the group and its subgroups."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the group."
            },
            {
              "name": "workItemTypes",
              "description": "Work item types available to the group."
            }
          ]
        },
        {
          "name": "GroupConnection",
          "kind": "OBJECT",
          "description": "The connection type for Group.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "GroupDataTransfer",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "egressNodes",
              "description": "Data nodes."
            }
          ]
        },
        {
          "name": "GroupEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "GroupID",
          "kind": "SCALAR",
          "description": "A `GroupID` is a global ID. It is encoded as a string.\n\nAn example `GroupID` is: `\"gid://gitlab/Group/1\"`.",
          "fields": null
        },
        {
          "name": "GroupMember",
          "kind": "OBJECT",
          "description": "Represents a Group Membership",
          "fields": [
            {
              "name": "accessLevel",
              "description": "GitLab::Access level."
            },
            {
              "name": "createdAt",
              "description": "Date and time the membership was created."
            },
            {
              "name": "createdBy",
              "description": "User that authorized membership."
            },
            {
              "name": "expiresAt",
              "description": "Date and time the membership expires."
            },
            {
              "name": "group",
              "description": "Group that a User is a member of."
            },
            {
              "name": "id",
              "description": "ID of the member."
            },
            {
              "name": "mergeRequestInteraction",
              "description": "Find a merge request."
            },
            {
              "name": "notificationEmail",
              "description": "Group notification email for User. Only available for admins."
            },
            {
              "name": "updatedAt",
              "description": "Date and time the membership was last updated."
            },
            {
              "name": "user",
              "description": "User that is associated with the member object."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            }
          ]
        },
        {
          "name": "GroupMemberBulkUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of GroupMemberBulkUpdate",
          "fields": null
        },
        {
          "name": "GroupMemberBulkUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of GroupMemberBulkUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "groupMembers",
              "description": "Group members after mutation."
            }
          ]
        },
        {
          "name": "GroupMemberConnection",
          "kind": "OBJECT",
          "description": "The connection type for GroupMember.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "GroupMemberEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "GroupMemberRelation",
          "kind": "ENUM",
          "description": "Group member relation",
          "fields": null
        },
        {
          "name": "GroupPermission",
          "kind": "ENUM",
          "description": "User permission on groups",
          "fields": null
        },
        {
          "name": "GroupPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createProjects",
              "description": "Indicates the user can perform `create_projects` on this resource"
            },
            {
              "name": "readGroup",
              "description": "Indicates the user can perform `read_group` on this resource"
            }
          ]
        },
        {
          "name": "GroupReleaseSort",
          "kind": "ENUM",
          "description": "Values for sorting releases belonging to a group",
          "fields": null
        },
        {
          "name": "GroupReleaseStats",
          "kind": "OBJECT",
          "description": "Contains release-related statistics about a group",
          "fields": [
            {
              "name": "releasesCount",
              "description": "Total number of releases in all descendant projects of the group."
            },
            {
              "name": "releasesPercentage",
              "description": "Percentage of the group's descendant projects that have at least one release."
            }
          ]
        },
        {
          "name": "GroupSecurityPolicySource",
          "kind": "OBJECT",
          "description": "Represents the source of a security policy belonging to a group",
          "fields": [
            {
              "name": "inherited",
              "description": "Indicates whether this policy is inherited from parent group."
            },
            {
              "name": "namespace",
              "description": "Project the policy is associated with."
            }
          ]
        },
        {
          "name": "GroupStats",
          "kind": "OBJECT",
          "description": "Contains statistics about a group",
          "fields": [
            {
              "name": "releaseStats",
              "description": "Statistics related to releases within the group."
            }
          ]
        },
        {
          "name": "GroupUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of GroupUpdate",
          "fields": null
        },
        {
          "name": "GroupUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of GroupUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "group",
              "description": "Group after update."
            }
          ]
        },
        {
          "name": "GroupWikiRepositoryRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo sync and verification state of a group wiki repository",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the GroupWikiRepositoryRegistry was created"
            },
            {
              "name": "groupWikiRepositoryId",
              "description": "ID of the Group Wiki Repository."
            },
            {
              "name": "id",
              "description": "ID of the GroupWikiRepositoryRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the GroupWikiRepositoryRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the GroupWikiRepositoryRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the GroupWikiRepositoryRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the GroupWikiRepositoryRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the GroupWikiRepositoryRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the GroupWikiRepositoryRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the GroupWikiRepositoryRegistry"
            }
          ]
        },
        {
          "name": "GroupWikiRepositoryRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for GroupWikiRepositoryRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "GroupWikiRepositoryRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "HealthStatus",
          "kind": "ENUM",
          "description": "Health status of an issue or epic",
          "fields": null
        },
        {
          "name": "HealthStatusFilter",
          "kind": "ENUM",
          "description": "Health status of an issue or epic for filtering",
          "fields": null
        },
        {
          "name": "HelmFileMetadata",
          "kind": "OBJECT",
          "description": "Helm file metadata",
          "fields": [
            {
              "name": "channel",
              "description": "Channel of the Helm chart."
            },
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "metadata",
              "description": "Metadata of the Helm chart."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            }
          ]
        },
        {
          "name": "HttpIntegrationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of HttpIntegrationCreate",
          "fields": null
        },
        {
          "name": "HttpIntegrationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of HttpIntegrationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "integration",
              "description": "HTTP integration."
            }
          ]
        },
        {
          "name": "HttpIntegrationDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of HttpIntegrationDestroy",
          "fields": null
        },
        {
          "name": "HttpIntegrationDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of HttpIntegrationDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "integration",
              "description": "HTTP integration."
            }
          ]
        },
        {
          "name": "HttpIntegrationResetTokenInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of HttpIntegrationResetToken",
          "fields": null
        },
        {
          "name": "HttpIntegrationResetTokenPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of HttpIntegrationResetToken",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "integration",
              "description": "HTTP integration."
            }
          ]
        },
        {
          "name": "HttpIntegrationUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of HttpIntegrationUpdate",
          "fields": null
        },
        {
          "name": "HttpIntegrationUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of HttpIntegrationUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "integration",
              "description": "HTTP integration."
            }
          ]
        },
        {
          "name": "ID",
          "kind": "SCALAR",
          "description": "Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"VXNlci0xMA==\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "fields": null
        },
        {
          "name": "ISO8601Date",
          "kind": "SCALAR",
          "description": "An ISO 8601-encoded date",
          "fields": null
        },
        {
          "name": "IncidentManagementEscalationPolicyID",
          "kind": "SCALAR",
          "description": "A `IncidentManagementEscalationPolicyID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementEscalationPolicyID` is: `\"gid://gitlab/IncidentManagement::EscalationPolicy/1\"`.",
          "fields": null
        },
        {
          "name": "IncidentManagementEscalationRuleID",
          "kind": "SCALAR",
          "description": "A `IncidentManagementEscalationRuleID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementEscalationRuleID` is: `\"gid://gitlab/IncidentManagement::EscalationRule/1\"`.",
          "fields": null
        },
        {
          "name": "IncidentManagementIssuableResourceLinkID",
          "kind": "SCALAR",
          "description": "A `IncidentManagementIssuableResourceLinkID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementIssuableResourceLinkID` is: `\"gid://gitlab/IncidentManagement::IssuableResourceLink/1\"`.",
          "fields": null
        },
        {
          "name": "IncidentManagementOncallParticipantID",
          "kind": "SCALAR",
          "description": "A `IncidentManagementOncallParticipantID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementOncallParticipantID` is: `\"gid://gitlab/IncidentManagement::OncallParticipant/1\"`.",
          "fields": null
        },
        {
          "name": "IncidentManagementOncallRotation",
          "kind": "OBJECT",
          "description": "Describes an incident management on-call rotation",
          "fields": [
            {
              "name": "activePeriod",
              "description": "Active period for the on-call rotation."
            },
            {
              "name": "endsAt",
              "description": "End date and time of the on-call rotation."
            },
            {
              "name": "id",
              "description": "ID of the on-call rotation."
            },
            {
              "name": "length",
              "description": "Length of the on-call schedule, in the units specified by lengthUnit."
            },
            {
              "name": "lengthUnit",
              "description": "Unit of the on-call rotation length."
            },
            {
              "name": "name",
              "description": "Name of the on-call rotation."
            },
            {
              "name": "participants",
              "description": "Participants of the on-call rotation."
            },
            {
              "name": "shifts",
              "description": "Blocks of time for which a participant is on-call within a given time frame. Time frame cannot exceed one month."
            },
            {
              "name": "startsAt",
              "description": "Start date of the on-call rotation."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallRotationConnection",
          "kind": "OBJECT",
          "description": "The connection type for IncidentManagementOncallRotation.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallRotationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallRotationID",
          "kind": "SCALAR",
          "description": "A `IncidentManagementOncallRotationID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementOncallRotationID` is: `\"gid://gitlab/IncidentManagement::OncallRotation/1\"`.",
          "fields": null
        },
        {
          "name": "IncidentManagementOncallSchedule",
          "kind": "OBJECT",
          "description": "Describes an incident management on-call schedule",
          "fields": [
            {
              "name": "description",
              "description": "Description of the on-call schedule."
            },
            {
              "name": "iid",
              "description": "Internal ID of the on-call schedule."
            },
            {
              "name": "name",
              "description": "Name of the on-call schedule."
            },
            {
              "name": "oncallUsers",
              "description": null
            },
            {
              "name": "rotation",
              "description": "On-call rotation for the on-call schedule."
            },
            {
              "name": "rotations",
              "description": "On-call rotations for the on-call schedule."
            },
            {
              "name": "timezone",
              "description": "Time zone of the on-call schedule."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallScheduleConnection",
          "kind": "OBJECT",
          "description": "The connection type for IncidentManagementOncallSchedule.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallScheduleEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallShift",
          "kind": "OBJECT",
          "description": "A block of time for which a participant is on-call.",
          "fields": [
            {
              "name": "endsAt",
              "description": "End time of the on-call shift."
            },
            {
              "name": "participant",
              "description": "Participant assigned to the on-call shift."
            },
            {
              "name": "startsAt",
              "description": "Start time of the on-call shift."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallShiftConnection",
          "kind": "OBJECT",
          "description": "The connection type for IncidentManagementOncallShift.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "IncidentManagementOncallShiftEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "IncidentManagementTimelineEventID",
          "kind": "SCALAR",
          "description": "A `IncidentManagementTimelineEventID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementTimelineEventID` is: `\"gid://gitlab/IncidentManagement::TimelineEvent/1\"`.",
          "fields": null
        },
        {
          "name": "IncidentManagementTimelineEventTagID",
          "kind": "SCALAR",
          "description": "A `IncidentManagementTimelineEventTagID` is a global ID. It is encoded as a string.\n\nAn example `IncidentManagementTimelineEventTagID` is: `\"gid://gitlab/IncidentManagement::TimelineEventTag/1\"`.",
          "fields": null
        },
        {
          "name": "InstanceSecurityDashboard",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "clusterAgents",
              "description": "Cluster agents associated with projects selected in the Instance Security Dashboard."
            },
            {
              "name": "projects",
              "description": "Projects selected in Instance Security Dashboard."
            },
            {
              "name": "vulnerabilityGrades",
              "description": "Represents vulnerable project counts for each grade."
            },
            {
              "name": "vulnerabilityScanners",
              "description": "Vulnerability scanners reported on the vulnerabilities from projects selected in Instance Security Dashboard."
            },
            {
              "name": "vulnerabilitySeveritiesCount",
              "description": "Counts for each vulnerability severity from projects selected in Instance Security Dashboard."
            }
          ]
        },
        {
          "name": "Int",
          "kind": "SCALAR",
          "description": "Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "fields": null
        },
        {
          "name": "IntegrationsPrometheusID",
          "kind": "SCALAR",
          "description": "A `IntegrationsPrometheusID` is a global ID. It is encoded as a string.\n\nAn example `IntegrationsPrometheusID` is: `\"gid://gitlab/Integrations::Prometheus/1\"`.\nThe older format `\"gid://gitlab/PrometheusService/1\"` was deprecated in 14.1.",
          "fields": null
        },
        {
          "name": "Issuable",
          "kind": "UNION",
          "description": "Represents an issuable.",
          "fields": null
        },
        {
          "name": "IssuableID",
          "kind": "SCALAR",
          "description": "A `IssuableID` is a global ID. It is encoded as a string.\n\nAn example `IssuableID` is: `\"gid://gitlab/Issuable/1\"`.",
          "fields": null
        },
        {
          "name": "IssuableResourceLink",
          "kind": "OBJECT",
          "description": "Describes an issuable resource link for incident issues",
          "fields": [
            {
              "name": "id",
              "description": "ID of the Issuable resource link."
            },
            {
              "name": "issue",
              "description": "Incident of the resource link."
            },
            {
              "name": "link",
              "description": "Web Link to the resource."
            },
            {
              "name": "linkText",
              "description": "Optional text for the link."
            },
            {
              "name": "linkType",
              "description": "Type of the resource link."
            }
          ]
        },
        {
          "name": "IssuableResourceLinkConnection",
          "kind": "OBJECT",
          "description": "The connection type for IssuableResourceLink.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "IssuableResourceLinkCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssuableResourceLinkCreate",
          "fields": null
        },
        {
          "name": "IssuableResourceLinkCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssuableResourceLinkCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issuableResourceLink",
              "description": "Issuable resource link."
            }
          ]
        },
        {
          "name": "IssuableResourceLinkDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssuableResourceLinkDestroy",
          "fields": null
        },
        {
          "name": "IssuableResourceLinkDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssuableResourceLinkDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issuableResourceLink",
              "description": "Issuable resource link."
            }
          ]
        },
        {
          "name": "IssuableResourceLinkEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "IssuableResourceLinkType",
          "kind": "ENUM",
          "description": "Issuable resource link type enum",
          "fields": null
        },
        {
          "name": "IssuableSearchableField",
          "kind": "ENUM",
          "description": "Fields to perform the search in",
          "fields": null
        },
        {
          "name": "IssuableSeverity",
          "kind": "ENUM",
          "description": "Incident severity",
          "fields": null
        },
        {
          "name": "IssuableState",
          "kind": "ENUM",
          "description": "State of a GitLab issue or merge request",
          "fields": null
        },
        {
          "name": "Issue",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "alertManagementAlerts",
              "description": "Alert Management alerts associated to this issue."
            },
            {
              "name": "assignees",
              "description": "Assignees of the issue."
            },
            {
              "name": "author",
              "description": "User that created the issue."
            },
            {
              "name": "blocked",
              "description": "Indicates the issue is blocked."
            },
            {
              "name": "blockedByCount",
              "description": "Count of issues blocking this issue."
            },
            {
              "name": "blockedByIssues",
              "description": "Issues blocking this issue."
            },
            {
              "name": "blockingCount",
              "description": "Count of issues this issue is blocking."
            },
            {
              "name": "closedAsDuplicateOf",
              "description": "Issue this issue was closed as a duplicate of."
            },
            {
              "name": "closedAt",
              "description": "Timestamp of when the issue was closed."
            },
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "confidential",
              "description": "Indicates the issue is confidential."
            },
            {
              "name": "createNoteEmail",
              "description": "User specific email address for the issue."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the issue was created."
            },
            {
              "name": "currentUserTodos",
              "description": "To-do items for the current user."
            },
            {
              "name": "customerRelationsContacts",
              "description": "Customer relations contacts of the issue."
            },
            {
              "name": "description",
              "description": "Description of the issue."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "designCollection",
              "description": "Collection of design images associated with this issue."
            },
            {
              "name": "discussionLocked",
              "description": "Indicates discussion is locked on the issue."
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "downvotes",
              "description": "Number of downvotes the issue has received."
            },
            {
              "name": "dueDate",
              "description": "Due date of the issue."
            },
            {
              "name": "emailsDisabled",
              "description": "Indicates if a project has email notifications disabled: `true` if email notifications are disabled."
            },
            {
              "name": "epic",
              "description": "Epic to which this issue belongs."
            },
            {
              "name": "escalationPolicy",
              "description": "Escalation policy associated with the issue. Available for issues which support escalation."
            },
            {
              "name": "escalationStatus",
              "description": "Escalation status of the issue."
            },
            {
              "name": "hasEpic",
              "description": "Indicates if the issue belongs to an epic.\n            Can return true and not show an associated epic when the user has no access to the epic."
            },
            {
              "name": "healthStatus",
              "description": "Current health status."
            },
            {
              "name": "hidden",
              "description": "Indicates the issue is hidden because the author has been banned."
            },
            {
              "name": "humanTimeEstimate",
              "description": "Human-readable time estimate of the issue."
            },
            {
              "name": "humanTotalTimeSpent",
              "description": "Human-readable total time reported as spent on the issue."
            },
            {
              "name": "id",
              "description": "ID of the issue."
            },
            {
              "name": "iid",
              "description": "Internal ID of the issue."
            },
            {
              "name": "issuableResourceLinks",
              "description": "Issuable resource links of the incident issue."
            },
            {
              "name": "iteration",
              "description": "Iteration of the issue."
            },
            {
              "name": "labels",
              "description": "Labels of the issue."
            },
            {
              "name": "mergeRequestsCount",
              "description": "Number of merge requests that close the issue on merge."
            },
            {
              "name": "metricImages",
              "description": "Metric images associated to the issue."
            },
            {
              "name": "milestone",
              "description": "Milestone of the issue."
            },
            {
              "name": "moved",
              "description": "Indicates if issue got moved from other project."
            },
            {
              "name": "movedTo",
              "description": "Updated Issue after it got moved to another project."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "participants",
              "description": "List of participants in the issue."
            },
            {
              "name": "projectId",
              "description": "ID of the issue project."
            },
            {
              "name": "reference",
              "description": "Internal reference of the issue. Returned in shortened format by default."
            },
            {
              "name": "relatedMergeRequests",
              "description": "Merge requests related to the issue. This field can only be resolved for one issue in any single request."
            },
            {
              "name": "relatedVulnerabilities",
              "description": "Related vulnerabilities of the issue."
            },
            {
              "name": "relativePosition",
              "description": "Relative position of the issue (used for positioning in epic tree and issue boards)."
            },
            {
              "name": "severity",
              "description": "Severity level of the incident."
            },
            {
              "name": "slaDueAt",
              "description": "Timestamp of when the issue SLA expires."
            },
            {
              "name": "state",
              "description": "State of the issue."
            },
            {
              "name": "statusPagePublishedIncident",
              "description": "Indicates whether an issue is published to the status page."
            },
            {
              "name": "subscribed",
              "description": "Indicates the currently logged in user is subscribed to the issue."
            },
            {
              "name": "taskCompletionStatus",
              "description": "Task completion status of the issue."
            },
            {
              "name": "timeEstimate",
              "description": "Time estimate of the issue."
            },
            {
              "name": "timelogs",
              "description": "Timelogs on the issue."
            },
            {
              "name": "title",
              "description": "Title of the issue."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`"
            },
            {
              "name": "totalTimeSpent",
              "description": "Total time reported as spent on the issue."
            },
            {
              "name": "type",
              "description": "Type of the issue."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the issue was last updated."
            },
            {
              "name": "updatedBy",
              "description": "User that last updated the issue."
            },
            {
              "name": "upvotes",
              "description": "Number of upvotes the issue has received."
            },
            {
              "name": "userDiscussionsCount",
              "description": "Number of user discussions in the issue."
            },
            {
              "name": "userNotesCount",
              "description": "Number of user notes of the issue."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "webPath",
              "description": "Web path of the issue."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the issue."
            },
            {
              "name": "weight",
              "description": "Weight of the issue."
            }
          ]
        },
        {
          "name": "IssueConnection",
          "kind": "OBJECT",
          "description": "The connection type for Issue.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            },
            {
              "name": "weight",
              "description": "Total weight of issues collection."
            }
          ]
        },
        {
          "name": "IssueCreationIterationWildcardId",
          "kind": "ENUM",
          "description": "Iteration ID wildcard values for issue creation",
          "fields": null
        },
        {
          "name": "IssueEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "IssueEscalationStatus",
          "kind": "ENUM",
          "description": "Issue escalation status values",
          "fields": null
        },
        {
          "name": "IssueID",
          "kind": "SCALAR",
          "description": "A `IssueID` is a global ID. It is encoded as a string.\n\nAn example `IssueID` is: `\"gid://gitlab/Issue/1\"`.",
          "fields": null
        },
        {
          "name": "IssueLinkAlertsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueLinkAlerts",
          "fields": null
        },
        {
          "name": "IssueLinkAlertsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueLinkAlerts",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueMoveInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueMove",
          "fields": null
        },
        {
          "name": "IssueMoveListInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueMoveList",
          "fields": null
        },
        {
          "name": "IssueMoveListPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueMoveList",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueMovePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueMove",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueParentID",
          "kind": "SCALAR",
          "description": "A `IssueParentID` is a global ID. It is encoded as a string.\n\nAn example `IssueParentID` is: `\"gid://gitlab/IssueParent/1\"`.",
          "fields": null
        },
        {
          "name": "IssuePermissions",
          "kind": "OBJECT",
          "description": "Check permissions for the current user on a issue",
          "fields": [
            {
              "name": "adminIssue",
              "description": "Indicates the user can perform `admin_issue` on this resource"
            },
            {
              "name": "createDesign",
              "description": "Indicates the user can perform `create_design` on this resource"
            },
            {
              "name": "createNote",
              "description": "Indicates the user can perform `create_note` on this resource"
            },
            {
              "name": "destroyDesign",
              "description": "Indicates the user can perform `destroy_design` on this resource"
            },
            {
              "name": "readDesign",
              "description": "Indicates the user can perform `read_design` on this resource"
            },
            {
              "name": "readIssue",
              "description": "Indicates the user can perform `read_issue` on this resource"
            },
            {
              "name": "reopenIssue",
              "description": "Indicates the user can perform `reopen_issue` on this resource"
            },
            {
              "name": "updateIssue",
              "description": "Indicates the user can perform `update_issue` on this resource"
            }
          ]
        },
        {
          "name": "IssueSetAssigneesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetAssignees",
          "fields": null
        },
        {
          "name": "IssueSetAssigneesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetAssignees",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetConfidentialInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetConfidential",
          "fields": null
        },
        {
          "name": "IssueSetConfidentialPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetConfidential",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetCrmContactsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetCrmContacts",
          "fields": null
        },
        {
          "name": "IssueSetCrmContactsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetCrmContacts",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetDueDateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetDueDate",
          "fields": null
        },
        {
          "name": "IssueSetDueDatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetDueDate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetEpicInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetEpic",
          "fields": null
        },
        {
          "name": "IssueSetEpicPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetEpic",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetEscalationPolicyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetEscalationPolicy",
          "fields": null
        },
        {
          "name": "IssueSetEscalationPolicyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetEscalationPolicy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetEscalationStatusInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetEscalationStatus",
          "fields": null
        },
        {
          "name": "IssueSetEscalationStatusPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetEscalationStatus",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetIterationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetIteration",
          "fields": null
        },
        {
          "name": "IssueSetIterationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetIteration",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetLockedInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetLocked",
          "fields": null
        },
        {
          "name": "IssueSetLockedPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetLocked",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetSeverityInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetSeverity",
          "fields": null
        },
        {
          "name": "IssueSetSeverityPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetSeverity",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetSubscriptionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetSubscription",
          "fields": null
        },
        {
          "name": "IssueSetSubscriptionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetSubscription",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSetWeightInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueSetWeight",
          "fields": null
        },
        {
          "name": "IssueSetWeightPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueSetWeight",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssueSort",
          "kind": "ENUM",
          "description": "Values for sorting issues",
          "fields": null
        },
        {
          "name": "IssueState",
          "kind": "ENUM",
          "description": "State of a GitLab issue",
          "fields": null
        },
        {
          "name": "IssueStateEvent",
          "kind": "ENUM",
          "description": "Values for issue state events",
          "fields": null
        },
        {
          "name": "IssueStatusCountsType",
          "kind": "OBJECT",
          "description": "Represents total number of issues for the represented statuses",
          "fields": [
            {
              "name": "all",
              "description": "Number of issues with status ALL for the project"
            },
            {
              "name": "closed",
              "description": "Number of issues with status CLOSED for the project"
            },
            {
              "name": "opened",
              "description": "Number of issues with status OPENED for the project"
            }
          ]
        },
        {
          "name": "IssueType",
          "kind": "ENUM",
          "description": "Issue type",
          "fields": null
        },
        {
          "name": "IssueUnlinkAlertInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssueUnlinkAlert",
          "fields": null
        },
        {
          "name": "IssueUnlinkAlertPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssueUnlinkAlert",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "IssuesBulkUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IssuesBulkUpdate",
          "fields": null
        },
        {
          "name": "IssuesBulkUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IssuesBulkUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "updatedIssueCount",
              "description": "Number of issues that were successfully updated."
            }
          ]
        },
        {
          "name": "Iteration",
          "kind": "OBJECT",
          "description": "Represents an iteration object",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of iteration creation."
            },
            {
              "name": "description",
              "description": "Description of the iteration."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "dueDate",
              "description": "Timestamp of the iteration due date."
            },
            {
              "name": "id",
              "description": "ID of the iteration."
            },
            {
              "name": "iid",
              "description": "Internal ID of the iteration."
            },
            {
              "name": "iterationCadence",
              "description": "Cadence of the iteration."
            },
            {
              "name": "report",
              "description": "Historically accurate report about the timebox."
            },
            {
              "name": "scopedPath",
              "description": "Web path of the iteration, scoped to the query parent. Only valid for Project parents. Returns null in other contexts."
            },
            {
              "name": "scopedUrl",
              "description": "Web URL of the iteration, scoped to the query parent. Only valid for Project parents. Returns null in other contexts."
            },
            {
              "name": "sequence",
              "description": "Sequence number for the iteration when you sort the containing cadence's iterations by the start and end date. The earliest starting and ending iteration is assigned 1."
            },
            {
              "name": "startDate",
              "description": "Timestamp of the iteration start date."
            },
            {
              "name": "state",
              "description": "State of the iteration."
            },
            {
              "name": "title",
              "description": "Title of the iteration."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of last iteration update."
            },
            {
              "name": "webPath",
              "description": "Web path of the iteration."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the iteration."
            }
          ]
        },
        {
          "name": "IterationCadence",
          "kind": "OBJECT",
          "description": "Represents an iteration cadence",
          "fields": [
            {
              "name": "active",
              "description": "Whether the iteration cadence is active."
            },
            {
              "name": "automatic",
              "description": "Whether the iteration cadence should automatically generate upcoming iterations."
            },
            {
              "name": "description",
              "description": "Description of the iteration cadence. Maximum length is 5000 characters."
            },
            {
              "name": "durationInWeeks",
              "description": "Duration in weeks of the iterations within this cadence."
            },
            {
              "name": "id",
              "description": "Global ID of the iteration cadence."
            },
            {
              "name": "iterationsInAdvance",
              "description": "Upcoming iterations to be created when iteration cadence is set to automatic."
            },
            {
              "name": "rollOver",
              "description": "Whether the iteration cadence should roll over issues to the next iteration or not."
            },
            {
              "name": "startDate",
              "description": "Timestamp of the automation start date."
            },
            {
              "name": "title",
              "description": "Title of the iteration cadence."
            }
          ]
        },
        {
          "name": "IterationCadenceConnection",
          "kind": "OBJECT",
          "description": "The connection type for IterationCadence.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "IterationCadenceCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IterationCadenceCreate",
          "fields": null
        },
        {
          "name": "IterationCadenceCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IterationCadenceCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "iterationCadence",
              "description": "Created iteration cadence."
            }
          ]
        },
        {
          "name": "IterationCadenceDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IterationCadenceDestroy",
          "fields": null
        },
        {
          "name": "IterationCadenceDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IterationCadenceDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "group",
              "description": "Group the iteration cadence belongs to."
            }
          ]
        },
        {
          "name": "IterationCadenceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "IterationCadenceUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IterationCadenceUpdate",
          "fields": null
        },
        {
          "name": "IterationCadenceUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IterationCadenceUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "iterationCadence",
              "description": "Updated iteration cadence."
            }
          ]
        },
        {
          "name": "IterationConnection",
          "kind": "OBJECT",
          "description": "The connection type for Iteration.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "IterationDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of IterationDelete",
          "fields": null
        },
        {
          "name": "IterationDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of IterationDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "group",
              "description": "Group the iteration belongs to."
            }
          ]
        },
        {
          "name": "IterationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "IterationID",
          "kind": "SCALAR",
          "description": "A `IterationID` is a global ID. It is encoded as a string.\n\nAn example `IterationID` is: `\"gid://gitlab/Iteration/1\"`.\nThe older format `\"gid://gitlab/EEIteration/1\"` was deprecated in 13.3.",
          "fields": null
        },
        {
          "name": "IterationSearchableField",
          "kind": "ENUM",
          "description": "Fields to perform the search in",
          "fields": null
        },
        {
          "name": "IterationSort",
          "kind": "ENUM",
          "description": "Iteration sort values",
          "fields": null
        },
        {
          "name": "IterationState",
          "kind": "ENUM",
          "description": "State of a GitLab iteration",
          "fields": null
        },
        {
          "name": "IterationWildcardId",
          "kind": "ENUM",
          "description": "Iteration ID wildcard values",
          "fields": null
        },
        {
          "name": "IterationsCadenceID",
          "kind": "SCALAR",
          "description": "A `IterationsCadenceID` is a global ID. It is encoded as a string.\n\nAn example `IterationsCadenceID` is: `\"gid://gitlab/Iterations::Cadence/1\"`.",
          "fields": null
        },
        {
          "name": "JSON",
          "kind": "SCALAR",
          "description": "Represents untyped JSON",
          "fields": null
        },
        {
          "name": "JiraImport",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of when the Jira import was created."
            },
            {
              "name": "failedToImportCount",
              "description": "Count of issues that failed to import."
            },
            {
              "name": "importedIssuesCount",
              "description": "Count of issues that were successfully imported."
            },
            {
              "name": "jiraProjectKey",
              "description": "Project key for the imported Jira project."
            },
            {
              "name": "scheduledAt",
              "description": "Timestamp of when the Jira import was scheduled."
            },
            {
              "name": "scheduledBy",
              "description": "User that started the Jira import."
            },
            {
              "name": "totalIssueCount",
              "description": "Total count of issues that were attempted to import."
            }
          ]
        },
        {
          "name": "JiraImportConnection",
          "kind": "OBJECT",
          "description": "The connection type for JiraImport.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "JiraImportEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "JiraImportStartInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of JiraImportStart",
          "fields": null
        },
        {
          "name": "JiraImportStartPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of JiraImportStart",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "jiraImport",
              "description": "Jira import data after mutation."
            }
          ]
        },
        {
          "name": "JiraImportUsersInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of JiraImportUsers",
          "fields": null
        },
        {
          "name": "JiraImportUsersPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of JiraImportUsers",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "jiraUsers",
              "description": "Users returned from Jira, matched by email and name if possible."
            }
          ]
        },
        {
          "name": "JiraProject",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "key",
              "description": "Key of the Jira project."
            },
            {
              "name": "name",
              "description": "Name of the Jira project."
            },
            {
              "name": "projectId",
              "description": "ID of the Jira project."
            }
          ]
        },
        {
          "name": "JiraProjectConnection",
          "kind": "OBJECT",
          "description": "The connection type for JiraProject.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "JiraProjectEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "JiraService",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "Indicates if the service is active."
            },
            {
              "name": "projects",
              "description": "List of all Jira projects fetched through Jira REST API."
            },
            {
              "name": "serviceType",
              "description": "Type of the service."
            },
            {
              "name": "type",
              "description": "Class name of the service."
            }
          ]
        },
        {
          "name": "JiraUser",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "gitlabId",
              "description": "ID of the matched GitLab user."
            },
            {
              "name": "gitlabName",
              "description": "Name of the matched GitLab user."
            },
            {
              "name": "gitlabUsername",
              "description": "Username of the matched GitLab user."
            },
            {
              "name": "jiraAccountId",
              "description": "Account ID of the Jira user."
            },
            {
              "name": "jiraDisplayName",
              "description": "Display name of the Jira user."
            },
            {
              "name": "jiraEmail",
              "description": "Email of the Jira user, returned only for users with public emails."
            }
          ]
        },
        {
          "name": "JiraUsersMappingInputType",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "JobArtifactFileType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "JobArtifactRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo replication and verification state of a job_artifact.",
          "fields": [
            {
              "name": "artifactId",
              "description": "ID of the Job Artifact."
            },
            {
              "name": "createdAt",
              "description": "Timestamp when the JobArtifactRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the JobArtifactRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the JobArtifactRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the JobArtifactRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the JobArtifactRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the JobArtifactRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the JobArtifactRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the JobArtifactRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the JobArtifactRegistry"
            }
          ]
        },
        {
          "name": "JobArtifactRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for JobArtifactRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "JobArtifactRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "JobArtifactsDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of JobArtifactsDestroy",
          "fields": null
        },
        {
          "name": "JobArtifactsDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of JobArtifactsDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "destroyedArtifactsCount",
              "description": "Number of artifacts deleted."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "job",
              "description": "Job with artifacts to be deleted."
            }
          ]
        },
        {
          "name": "JobCancelInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of JobCancel",
          "fields": null
        },
        {
          "name": "JobCancelPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of JobCancel",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "job",
              "description": "Job after the mutation."
            }
          ]
        },
        {
          "name": "JobID",
          "kind": "SCALAR",
          "description": "A `CommitStatusID` is a global ID. It is encoded as a string.\n\nAn example `CommitStatusID` is: `\"gid://gitlab/CommitStatus/1\"`.",
          "fields": null
        },
        {
          "name": "JobNeedUnion",
          "kind": "UNION",
          "description": null,
          "fields": null
        },
        {
          "name": "JobNeedUnionConnection",
          "kind": "OBJECT",
          "description": "The connection type for JobNeedUnion.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "JobNeedUnionEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "JobPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "readBuild",
              "description": "Indicates the user can perform `read_build` on this resource"
            },
            {
              "name": "readJobArtifacts",
              "description": "Indicates the user can perform `read_job_artifacts` on this resource"
            },
            {
              "name": "updateBuild",
              "description": "Indicates the user can perform `update_build` on this resource"
            }
          ]
        },
        {
          "name": "JobPlayInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of JobPlay",
          "fields": null
        },
        {
          "name": "JobPlayPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of JobPlay",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "job",
              "description": "Job after the mutation."
            }
          ]
        },
        {
          "name": "JobRetryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of JobRetry",
          "fields": null
        },
        {
          "name": "JobRetryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of JobRetry",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "job",
              "description": "Job after the mutation."
            }
          ]
        },
        {
          "name": "JobUnscheduleInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of JobUnschedule",
          "fields": null
        },
        {
          "name": "JobUnschedulePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of JobUnschedule",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "job",
              "description": "Job after the mutation."
            }
          ]
        },
        {
          "name": "JsonString",
          "kind": "SCALAR",
          "description": "JSON object as raw string",
          "fields": null
        },
        {
          "name": "Kas",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "enabled",
              "description": "Indicates whether the Kubernetes Agent Server is enabled."
            },
            {
              "name": "externalUrl",
              "description": "URL used by the Agents to communicate with KAS."
            },
            {
              "name": "version",
              "description": "KAS version."
            }
          ]
        },
        {
          "name": "Key",
          "kind": "OBJECT",
          "description": "Represents an SSH key.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of when the key was created."
            },
            {
              "name": "expiresAt",
              "description": "Timestamp of when the key expires. It's null if it never expires."
            },
            {
              "name": "id",
              "description": "ID of the key."
            },
            {
              "name": "key",
              "description": "Public key of the key pair."
            },
            {
              "name": "title",
              "description": "Title of the key."
            }
          ]
        },
        {
          "name": "Label",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "color",
              "description": "Background color of the label."
            },
            {
              "name": "createdAt",
              "description": "When this label was created."
            },
            {
              "name": "description",
              "description": "Description of the label (Markdown rendered as HTML for caching)."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "id",
              "description": "Label ID."
            },
            {
              "name": "textColor",
              "description": "Text color of the label."
            },
            {
              "name": "title",
              "description": "Content of the label."
            },
            {
              "name": "updatedAt",
              "description": "When this label was last updated."
            }
          ]
        },
        {
          "name": "LabelConnection",
          "kind": "OBJECT",
          "description": "The connection type for Label.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "LabelCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of LabelCreate",
          "fields": null
        },
        {
          "name": "LabelCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of LabelCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "label",
              "description": "Label after mutation."
            }
          ]
        },
        {
          "name": "LabelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "LabelID",
          "kind": "SCALAR",
          "description": "A `LabelID` is a global ID. It is encoded as a string.\n\nAn example `LabelID` is: `\"gid://gitlab/Label/1\"`.",
          "fields": null
        },
        {
          "name": "LfsObjectRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo sync and verification state of an LFS object",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the LfsObjectRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the LfsObjectRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the LfsObjectRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the LfsObjectRegistry"
            },
            {
              "name": "lfsObjectId",
              "description": "ID of the LFS object."
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the LfsObjectRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the LfsObjectRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the LfsObjectRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the LfsObjectRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the LfsObjectRegistry"
            }
          ]
        },
        {
          "name": "LfsObjectRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for LfsObjectRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "LfsObjectRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "LicenseHistoryEntry",
          "kind": "OBJECT",
          "description": "Represents an entry from the Cloud License history",
          "fields": [
            {
              "name": "activatedAt",
              "description": "Date when the license was activated."
            },
            {
              "name": "blockChangesAt",
              "description": "Date, including grace period, when licensed features will be blocked."
            },
            {
              "name": "company",
              "description": "Company of the licensee."
            },
            {
              "name": "createdAt",
              "description": "Date when the license was added."
            },
            {
              "name": "email",
              "description": "Email of the licensee."
            },
            {
              "name": "expiresAt",
              "description": "Date when the license expires."
            },
            {
              "name": "id",
              "description": "ID of the license extracted from the license data."
            },
            {
              "name": "name",
              "description": "Name of the licensee."
            },
            {
              "name": "plan",
              "description": "Name of the subscription plan."
            },
            {
              "name": "startsAt",
              "description": "Date when the license started."
            },
            {
              "name": "type",
              "description": "Type of the license."
            },
            {
              "name": "usersInLicenseCount",
              "description": "Number of paid users in the license."
            }
          ]
        },
        {
          "name": "LicenseHistoryEntryConnection",
          "kind": "OBJECT",
          "description": "The connection type for LicenseHistoryEntry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "LicenseHistoryEntryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ListID",
          "kind": "SCALAR",
          "description": "A `ListID` is a global ID. It is encoded as a string.\n\nAn example `ListID` is: `\"gid://gitlab/List/1\"`.",
          "fields": null
        },
        {
          "name": "ListLimitMetric",
          "kind": "ENUM",
          "description": "List limit metric setting",
          "fields": null
        },
        {
          "name": "MarkAsSpamSnippetInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MarkAsSpamSnippet",
          "fields": null
        },
        {
          "name": "MarkAsSpamSnippetPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MarkAsSpamSnippet",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "snippet",
              "description": "Snippet after mutation."
            }
          ]
        },
        {
          "name": "MavenMetadata",
          "kind": "OBJECT",
          "description": "Maven metadata",
          "fields": [
            {
              "name": "appGroup",
              "description": "App group of the Maven package."
            },
            {
              "name": "appName",
              "description": "App name of the Maven package."
            },
            {
              "name": "appVersion",
              "description": "App version of the Maven package."
            },
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "id",
              "description": "ID of the metadatum."
            },
            {
              "name": "path",
              "description": "Path of the Maven package."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            }
          ]
        },
        {
          "name": "MeasurementIdentifier",
          "kind": "ENUM",
          "description": "Possible identifier types for a measurement",
          "fields": null
        },
        {
          "name": "MemberAccessLevel",
          "kind": "ENUM",
          "description": "Access level of a group or project member",
          "fields": null
        },
        {
          "name": "MemberInterface",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "accessLevel",
              "description": "GitLab::Access level."
            },
            {
              "name": "createdAt",
              "description": "Date and time the membership was created."
            },
            {
              "name": "createdBy",
              "description": "User that authorized membership."
            },
            {
              "name": "expiresAt",
              "description": "Date and time the membership expires."
            },
            {
              "name": "id",
              "description": "ID of the member."
            },
            {
              "name": "mergeRequestInteraction",
              "description": "Find a merge request."
            },
            {
              "name": "updatedAt",
              "description": "Date and time the membership was last updated."
            },
            {
              "name": "user",
              "description": "User that is associated with the member object."
            }
          ]
        },
        {
          "name": "MemberInterfaceConnection",
          "kind": "OBJECT",
          "description": "The connection type for MemberInterface.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MemberInterfaceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MemberSort",
          "kind": "ENUM",
          "description": "Values for sorting members",
          "fields": null
        },
        {
          "name": "MergeAccessLevel",
          "kind": "OBJECT",
          "description": "Defines which user roles, users, or groups can merge into a protected branch.",
          "fields": [
            {
              "name": "accessLevel",
              "description": "GitLab::Access level."
            },
            {
              "name": "accessLevelDescription",
              "description": "Human readable representation for this access level."
            },
            {
              "name": "group",
              "description": "Group associated with this access level."
            },
            {
              "name": "user",
              "description": "User associated with this access level."
            }
          ]
        },
        {
          "name": "MergeAccessLevelConnection",
          "kind": "OBJECT",
          "description": "The connection type for MergeAccessLevel.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MergeAccessLevelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MergeRequest",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "allowCollaboration",
              "description": "Indicates if members of the target project can push to the fork."
            },
            {
              "name": "approvalState",
              "description": "Information relating to rules that must be satisfied to merge this merge request."
            },
            {
              "name": "approvalsLeft",
              "description": "Number of approvals left."
            },
            {
              "name": "approvalsRequired",
              "description": "Number of approvals required."
            },
            {
              "name": "approved",
              "description": "Indicates if the merge request has all the required approvals. Returns true if no required approvals are configured."
            },
            {
              "name": "approvedBy",
              "description": "Users who approved the merge request."
            },
            {
              "name": "assignees",
              "description": "Assignees of the merge request."
            },
            {
              "name": "author",
              "description": "User who created this merge request."
            },
            {
              "name": "autoMergeEnabled",
              "description": "Indicates if auto merge is enabled for the merge request."
            },
            {
              "name": "autoMergeStrategy",
              "description": "Selected auto merge strategy."
            },
            {
              "name": "availableAutoMergeStrategies",
              "description": "Array of available auto merge strategies."
            },
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "commitCount",
              "description": "Number of commits in the merge request."
            },
            {
              "name": "commits",
              "description": "Merge request commits."
            },
            {
              "name": "commitsWithoutMergeCommits",
              "description": "Merge request commits excluding merge commits."
            },
            {
              "name": "committers",
              "description": "Users who have added commits to the merge request."
            },
            {
              "name": "conflicts",
              "description": "Indicates if the merge request has conflicts."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the merge request was created."
            },
            {
              "name": "currentUserTodos",
              "description": "To-do items for the current user."
            },
            {
              "name": "defaultMergeCommitMessage",
              "description": "Default merge commit message of the merge request."
            },
            {
              "name": "defaultSquashCommitMessage",
              "description": "Default squash commit message of the merge request."
            },
            {
              "name": "description",
              "description": "Description of the merge request (Markdown rendered as HTML for caching)."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "detailedMergeStatus",
              "description": "Detailed merge status of the merge request."
            },
            {
              "name": "diffHeadSha",
              "description": "Diff head SHA of the merge request."
            },
            {
              "name": "diffRefs",
              "description": "References of the base SHA, the head SHA, and the start SHA for this merge request."
            },
            {
              "name": "diffStats",
              "description": "Details about which files were changed in this merge request."
            },
            {
              "name": "diffStatsSummary",
              "description": "Summary of which files were changed in this merge request."
            },
            {
              "name": "discussionLocked",
              "description": "Indicates if comments on the merge request are locked to members only."
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "divergedFromTargetBranch",
              "description": "Indicates if the source branch is behind the target branch."
            },
            {
              "name": "downvotes",
              "description": "Number of downvotes for the merge request."
            },
            {
              "name": "draft",
              "description": "Indicates if the merge request is a draft."
            },
            {
              "name": "forceRemoveSourceBranch",
              "description": "Indicates if the project settings will lead to source branch deletion after merge."
            },
            {
              "name": "hasCi",
              "description": "Indicates if the merge request has CI."
            },
            {
              "name": "hasSecurityReports",
              "description": "Indicates if the source branch has any security reports."
            },
            {
              "name": "headPipeline",
              "description": "Pipeline running on the branch HEAD of the merge request."
            },
            {
              "name": "humanTimeEstimate",
              "description": "Human-readable time estimate of the merge request."
            },
            {
              "name": "humanTotalTimeSpent",
              "description": "Human-readable total time reported as spent on the merge request."
            },
            {
              "name": "id",
              "description": "ID of the merge request."
            },
            {
              "name": "iid",
              "description": "Internal ID of the merge request."
            },
            {
              "name": "inProgressMergeCommitSha",
              "description": "Commit SHA of the merge request if merge is in progress."
            },
            {
              "name": "labels",
              "description": "Labels of the merge request."
            },
            {
              "name": "mergeCommitSha",
              "description": "SHA of the merge request commit (set once merged)."
            },
            {
              "name": "mergeError",
              "description": "Error message due to a merge error."
            },
            {
              "name": "mergeOngoing",
              "description": "Indicates if a merge is currently occurring."
            },
            {
              "name": "mergeStatusEnum",
              "description": "Merge status of the merge request."
            },
            {
              "name": "mergeTrainsCount",
              "description": "Number of merge requests in the merge train."
            },
            {
              "name": "mergeUser",
              "description": "User who merged this merge request or set it to merge when pipeline succeeds."
            },
            {
              "name": "mergeWhenPipelineSucceeds",
              "description": "Indicates if the merge has been set to be merged when its pipeline succeeds (MWPS)."
            },
            {
              "name": "mergeable",
              "description": "Indicates if the merge request is mergeable."
            },
            {
              "name": "mergeableDiscussionsState",
              "description": "Indicates if all discussions in the merge request have been resolved, allowing the merge request to be merged."
            },
            {
              "name": "mergedAt",
              "description": "Timestamp of when the merge request was merged, null if not merged."
            },
            {
              "name": "milestone",
              "description": "Milestone of the merge request."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "participants",
              "description": "Participants in the merge request. This includes the author, assignees, reviewers, and users mentioned in notes."
            },
            {
              "name": "pipelines",
              "description": "Pipelines for the merge request. Note: for performance reasons, no more than the most recent 500 pipelines will be returned."
            },
            {
              "name": "project",
              "description": "Alias for target_project."
            },
            {
              "name": "projectId",
              "description": "ID of the merge request project."
            },
            {
              "name": "rebaseCommitSha",
              "description": "Rebase commit SHA of the merge request."
            },
            {
              "name": "rebaseInProgress",
              "description": "Indicates if there is a rebase currently in progress for the merge request."
            },
            {
              "name": "reference",
              "description": "Internal reference of the merge request. Returned in shortened format by default."
            },
            {
              "name": "reviewers",
              "description": "Users from whom a review has been requested."
            },
            {
              "name": "securityAutoFix",
              "description": "Indicates if the merge request is created by @GitLab-Security-Bot."
            },
            {
              "name": "securityReportsUpToDateOnTargetBranch",
              "description": "Indicates if the target branch security reports are out of date."
            },
            {
              "name": "shouldBeRebased",
              "description": "Indicates if the merge request will be rebased."
            },
            {
              "name": "shouldRemoveSourceBranch",
              "description": "Indicates if the source branch of the merge request will be deleted after merge."
            },
            {
              "name": "sourceBranch",
              "description": "Source branch of the merge request."
            },
            {
              "name": "sourceBranchExists",
              "description": "Indicates if the source branch of the merge request exists."
            },
            {
              "name": "sourceBranchProtected",
              "description": "Indicates if the source branch is protected."
            },
            {
              "name": "sourceProject",
              "description": "Source project of the merge request."
            },
            {
              "name": "sourceProjectId",
              "description": "ID of the merge request source project."
            },
            {
              "name": "squash",
              "description": "Indicates if the merge request is set to be squashed when merged. [Project settings](https://docs.gitlab.com/ee/user/project/merge_requests/squash_and_merge.html#configure-squash-options-for-a-project) may override this value. Use `squash_on_merge` instead to take project squash options into account."
            },
            {
              "name": "squashOnMerge",
              "description": "Indicates if the merge request will be squashed when merged."
            },
            {
              "name": "state",
              "description": "State of the merge request."
            },
            {
              "name": "subscribed",
              "description": "Indicates if the currently logged in user is subscribed to this merge request."
            },
            {
              "name": "targetBranch",
              "description": "Target branch of the merge request."
            },
            {
              "name": "targetBranchExists",
              "description": "Indicates if the target branch of the merge request exists."
            },
            {
              "name": "targetProject",
              "description": "Target project of the merge request."
            },
            {
              "name": "targetProjectId",
              "description": "ID of the merge request target project."
            },
            {
              "name": "taskCompletionStatus",
              "description": "Completion status of tasks"
            },
            {
              "name": "timeEstimate",
              "description": "Time estimate of the merge request."
            },
            {
              "name": "timelogs",
              "description": "Timelogs on the merge request."
            },
            {
              "name": "title",
              "description": "Title of the merge request."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`"
            },
            {
              "name": "totalTimeSpent",
              "description": "Total time reported as spent on the merge request."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the merge request was last updated."
            },
            {
              "name": "upvotes",
              "description": "Number of upvotes for the merge request."
            },
            {
              "name": "userDiscussionsCount",
              "description": "Number of user discussions in the merge request."
            },
            {
              "name": "userNotesCount",
              "description": "User notes count of the merge request."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "webUrl",
              "description": "Web URL of the merge request."
            }
          ]
        },
        {
          "name": "MergeRequestAcceptInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestAccept",
          "fields": null
        },
        {
          "name": "MergeRequestAcceptPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestAccept",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestApprovalState",
          "kind": "OBJECT",
          "description": "Information relating to rules that must be satisfied to merge this merge request.",
          "fields": [
            {
              "name": "approvalRulesOverwritten",
              "description": "Indicates if the merge request approval rules are overwritten for the merge request."
            },
            {
              "name": "invalidApproversRules",
              "description": "List of approval rules that are associated with the merge request, but invalid."
            },
            {
              "name": "rules",
              "description": "List of approval rules associated with the merge request."
            },
            {
              "name": "suggestedApprovers",
              "description": "List of suggested approvers."
            }
          ]
        },
        {
          "name": "MergeRequestAssignee",
          "kind": "OBJECT",
          "description": "A user assigned to a merge request.",
          "fields": [
            {
              "name": "assignedMergeRequests",
              "description": "Merge requests assigned to the user."
            },
            {
              "name": "authoredMergeRequests",
              "description": "Merge requests authored by the user."
            },
            {
              "name": "avatarUrl",
              "description": "URL of the user's avatar."
            },
            {
              "name": "bot",
              "description": "Indicates if the user is a bot."
            },
            {
              "name": "callouts",
              "description": "User callouts that belong to the user."
            },
            {
              "name": "commitEmail",
              "description": "User's default commit email."
            },
            {
              "name": "emails",
              "description": "User's email addresses."
            },
            {
              "name": "gitpodEnabled",
              "description": "Whether Gitpod is enabled at the user level."
            },
            {
              "name": "groupCount",
              "description": "Group count for the user."
            },
            {
              "name": "groupMemberships",
              "description": "Group memberships of the user."
            },
            {
              "name": "groups",
              "description": "Groups where the user has access."
            },
            {
              "name": "id",
              "description": "ID of the user."
            },
            {
              "name": "location",
              "description": "Location of the user."
            },
            {
              "name": "mergeRequestInteraction",
              "description": "Details of this user's interactions with the merge request."
            },
            {
              "name": "name",
              "description": "Human-readable name of the user. Returns `****` if the user is a project bot and the requester does not have permission to view the project."
            },
            {
              "name": "namespace",
              "description": "Personal namespace of the user."
            },
            {
              "name": "namespaceCommitEmails",
              "description": "User's custom namespace commit emails."
            },
            {
              "name": "preferencesGitpodPath",
              "description": "Web path to the Gitpod section within user preferences."
            },
            {
              "name": "profileEnableGitpodPath",
              "description": "Web path to enable Gitpod for the user."
            },
            {
              "name": "projectMemberships",
              "description": "Project memberships of the user."
            },
            {
              "name": "publicEmail",
              "description": "User's public email."
            },
            {
              "name": "reviewRequestedMergeRequests",
              "description": "Merge requests assigned to the user for review."
            },
            {
              "name": "savedReplies",
              "description": "Saved replies authored by the user. Will not return saved replies if `saved_replies` feature flag is disabled."
            },
            {
              "name": "savedReply",
              "description": "Saved reply authored by the user. Will not return saved reply if `saved_replies` feature flag is disabled."
            },
            {
              "name": "snippets",
              "description": "Snippets authored by the user."
            },
            {
              "name": "starredProjects",
              "description": "Projects starred by the user."
            },
            {
              "name": "state",
              "description": "State of the user."
            },
            {
              "name": "status",
              "description": "User status."
            },
            {
              "name": "timelogs",
              "description": "Time logged by the user."
            },
            {
              "name": "todos",
              "description": "To-do items of the user."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource."
            },
            {
              "name": "username",
              "description": "Username of the user. Unique within this instance of GitLab."
            },
            {
              "name": "webPath",
              "description": "Web path of the user."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the user."
            }
          ]
        },
        {
          "name": "MergeRequestAssigneeConnection",
          "kind": "OBJECT",
          "description": "The connection type for MergeRequestAssignee.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MergeRequestAssigneeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MergeRequestAuthor",
          "kind": "OBJECT",
          "description": "The author of the merge request.",
          "fields": [
            {
              "name": "assignedMergeRequests",
              "description": "Merge requests assigned to the user."
            },
            {
              "name": "authoredMergeRequests",
              "description": "Merge requests authored by the user."
            },
            {
              "name": "avatarUrl",
              "description": "URL of the user's avatar."
            },
            {
              "name": "bot",
              "description": "Indicates if the user is a bot."
            },
            {
              "name": "callouts",
              "description": "User callouts that belong to the user."
            },
            {
              "name": "commitEmail",
              "description": "User's default commit email."
            },
            {
              "name": "emails",
              "description": "User's email addresses."
            },
            {
              "name": "gitpodEnabled",
              "description": "Whether Gitpod is enabled at the user level."
            },
            {
              "name": "groupCount",
              "description": "Group count for the user."
            },
            {
              "name": "groupMemberships",
              "description": "Group memberships of the user."
            },
            {
              "name": "groups",
              "description": "Groups where the user has access."
            },
            {
              "name": "id",
              "description": "ID of the user."
            },
            {
              "name": "location",
              "description": "Location of the user."
            },
            {
              "name": "mergeRequestInteraction",
              "description": "Details of this user's interactions with the merge request."
            },
            {
              "name": "name",
              "description": "Human-readable name of the user. Returns `****` if the user is a project bot and the requester does not have permission to view the project."
            },
            {
              "name": "namespace",
              "description": "Personal namespace of the user."
            },
            {
              "name": "namespaceCommitEmails",
              "description": "User's custom namespace commit emails."
            },
            {
              "name": "preferencesGitpodPath",
              "description": "Web path to the Gitpod section within user preferences."
            },
            {
              "name": "profileEnableGitpodPath",
              "description": "Web path to enable Gitpod for the user."
            },
            {
              "name": "projectMemberships",
              "description": "Project memberships of the user."
            },
            {
              "name": "publicEmail",
              "description": "User's public email."
            },
            {
              "name": "reviewRequestedMergeRequests",
              "description": "Merge requests assigned to the user for review."
            },
            {
              "name": "savedReplies",
              "description": "Saved replies authored by the user. Will not return saved replies if `saved_replies` feature flag is disabled."
            },
            {
              "name": "savedReply",
              "description": "Saved reply authored by the user. Will not return saved reply if `saved_replies` feature flag is disabled."
            },
            {
              "name": "snippets",
              "description": "Snippets authored by the user."
            },
            {
              "name": "starredProjects",
              "description": "Projects starred by the user."
            },
            {
              "name": "state",
              "description": "State of the user."
            },
            {
              "name": "status",
              "description": "User status."
            },
            {
              "name": "timelogs",
              "description": "Time logged by the user."
            },
            {
              "name": "todos",
              "description": "To-do items of the user."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource."
            },
            {
              "name": "username",
              "description": "Username of the user. Unique within this instance of GitLab."
            },
            {
              "name": "webPath",
              "description": "Web path of the user."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the user."
            }
          ]
        },
        {
          "name": "MergeRequestConnection",
          "kind": "OBJECT",
          "description": "The connection type for MergeRequest.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            },
            {
              "name": "totalTimeToMerge",
              "description": "Total sum of time to merge, in seconds, for the collection of merge requests."
            }
          ]
        },
        {
          "name": "MergeRequestCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestCreate",
          "fields": null
        },
        {
          "name": "MergeRequestCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestDiffRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo sync and verification state of a Merge Request diff",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the MergeRequestDiffRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the MergeRequestDiffRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the MergeRequestDiffRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the MergeRequestDiffRegistry"
            },
            {
              "name": "mergeRequestDiffId",
              "description": "ID of the Merge Request diff."
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the MergeRequestDiffRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the MergeRequestDiffRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the MergeRequestDiffRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the MergeRequestDiffRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the MergeRequestDiffRegistry"
            }
          ]
        },
        {
          "name": "MergeRequestDiffRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for MergeRequestDiffRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MergeRequestDiffRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MergeRequestEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MergeRequestID",
          "kind": "SCALAR",
          "description": "A `MergeRequestID` is a global ID. It is encoded as a string.\n\nAn example `MergeRequestID` is: `\"gid://gitlab/MergeRequest/1\"`.",
          "fields": null
        },
        {
          "name": "MergeRequestNewState",
          "kind": "ENUM",
          "description": "New state to apply to a merge request.",
          "fields": null
        },
        {
          "name": "MergeRequestParticipant",
          "kind": "OBJECT",
          "description": "A user participating in a merge request.",
          "fields": [
            {
              "name": "assignedMergeRequests",
              "description": "Merge requests assigned to the user."
            },
            {
              "name": "authoredMergeRequests",
              "description": "Merge requests authored by the user."
            },
            {
              "name": "avatarUrl",
              "description": "URL of the user's avatar."
            },
            {
              "name": "bot",
              "description": "Indicates if the user is a bot."
            },
            {
              "name": "callouts",
              "description": "User callouts that belong to the user."
            },
            {
              "name": "commitEmail",
              "description": "User's default commit email."
            },
            {
              "name": "emails",
              "description": "User's email addresses."
            },
            {
              "name": "gitpodEnabled",
              "description": "Whether Gitpod is enabled at the user level."
            },
            {
              "name": "groupCount",
              "description": "Group count for the user."
            },
            {
              "name": "groupMemberships",
              "description": "Group memberships of the user."
            },
            {
              "name": "groups",
              "description": "Groups where the user has access."
            },
            {
              "name": "id",
              "description": "ID of the user."
            },
            {
              "name": "location",
              "description": "Location of the user."
            },
            {
              "name": "mergeRequestInteraction",
              "description": "Details of this user's interactions with the merge request."
            },
            {
              "name": "name",
              "description": "Human-readable name of the user. Returns `****` if the user is a project bot and the requester does not have permission to view the project."
            },
            {
              "name": "namespace",
              "description": "Personal namespace of the user."
            },
            {
              "name": "namespaceCommitEmails",
              "description": "User's custom namespace commit emails."
            },
            {
              "name": "preferencesGitpodPath",
              "description": "Web path to the Gitpod section within user preferences."
            },
            {
              "name": "profileEnableGitpodPath",
              "description": "Web path to enable Gitpod for the user."
            },
            {
              "name": "projectMemberships",
              "description": "Project memberships of the user."
            },
            {
              "name": "publicEmail",
              "description": "User's public email."
            },
            {
              "name": "reviewRequestedMergeRequests",
              "description": "Merge requests assigned to the user for review."
            },
            {
              "name": "savedReplies",
              "description": "Saved replies authored by the user. Will not return saved replies if `saved_replies` feature flag is disabled."
            },
            {
              "name": "savedReply",
              "description": "Saved reply authored by the user. Will not return saved reply if `saved_replies` feature flag is disabled."
            },
            {
              "name": "snippets",
              "description": "Snippets authored by the user."
            },
            {
              "name": "starredProjects",
              "description": "Projects starred by the user."
            },
            {
              "name": "state",
              "description": "State of the user."
            },
            {
              "name": "status",
              "description": "User status."
            },
            {
              "name": "timelogs",
              "description": "Time logged by the user."
            },
            {
              "name": "todos",
              "description": "To-do items of the user."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource."
            },
            {
              "name": "username",
              "description": "Username of the user. Unique within this instance of GitLab."
            },
            {
              "name": "webPath",
              "description": "Web path of the user."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the user."
            }
          ]
        },
        {
          "name": "MergeRequestParticipantConnection",
          "kind": "OBJECT",
          "description": "The connection type for MergeRequestParticipant.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MergeRequestParticipantEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MergeRequestPermissions",
          "kind": "OBJECT",
          "description": "Check permissions for the current user on a merge request",
          "fields": [
            {
              "name": "adminMergeRequest",
              "description": "Indicates the user can perform `admin_merge_request` on this resource"
            },
            {
              "name": "canApprove",
              "description": "Indicates the user can perform `can_approve` on this resource"
            },
            {
              "name": "canMerge",
              "description": "Indicates the user can perform `can_merge` on this resource"
            },
            {
              "name": "cherryPickOnCurrentMergeRequest",
              "description": "Indicates the user can perform `cherry_pick_on_current_merge_request` on this resource"
            },
            {
              "name": "createNote",
              "description": "Indicates the user can perform `create_note` on this resource"
            },
            {
              "name": "pushToSourceBranch",
              "description": "Indicates the user can perform `push_to_source_branch` on this resource"
            },
            {
              "name": "readMergeRequest",
              "description": "Indicates the user can perform `read_merge_request` on this resource"
            },
            {
              "name": "removeSourceBranch",
              "description": "Indicates the user can perform `remove_source_branch` on this resource"
            },
            {
              "name": "revertOnCurrentMergeRequest",
              "description": "Indicates the user can perform `revert_on_current_merge_request` on this resource"
            },
            {
              "name": "updateMergeRequest",
              "description": "Indicates the user can perform `update_merge_request` on this resource"
            }
          ]
        },
        {
          "name": "MergeRequestReviewState",
          "kind": "ENUM",
          "description": "State of a review of a GitLab merge request.",
          "fields": null
        },
        {
          "name": "MergeRequestReviewer",
          "kind": "OBJECT",
          "description": "A user assigned to a merge request as a reviewer.",
          "fields": [
            {
              "name": "assignedMergeRequests",
              "description": "Merge requests assigned to the user."
            },
            {
              "name": "authoredMergeRequests",
              "description": "Merge requests authored by the user."
            },
            {
              "name": "avatarUrl",
              "description": "URL of the user's avatar."
            },
            {
              "name": "bot",
              "description": "Indicates if the user is a bot."
            },
            {
              "name": "callouts",
              "description": "User callouts that belong to the user."
            },
            {
              "name": "commitEmail",
              "description": "User's default commit email."
            },
            {
              "name": "emails",
              "description": "User's email addresses."
            },
            {
              "name": "gitpodEnabled",
              "description": "Whether Gitpod is enabled at the user level."
            },
            {
              "name": "groupCount",
              "description": "Group count for the user."
            },
            {
              "name": "groupMemberships",
              "description": "Group memberships of the user."
            },
            {
              "name": "groups",
              "description": "Groups where the user has access."
            },
            {
              "name": "id",
              "description": "ID of the user."
            },
            {
              "name": "location",
              "description": "Location of the user."
            },
            {
              "name": "mergeRequestInteraction",
              "description": "Details of this user's interactions with the merge request."
            },
            {
              "name": "name",
              "description": "Human-readable name of the user. Returns `****` if the user is a project bot and the requester does not have permission to view the project."
            },
            {
              "name": "namespace",
              "description": "Personal namespace of the user."
            },
            {
              "name": "namespaceCommitEmails",
              "description": "User's custom namespace commit emails."
            },
            {
              "name": "preferencesGitpodPath",
              "description": "Web path to the Gitpod section within user preferences."
            },
            {
              "name": "profileEnableGitpodPath",
              "description": "Web path to enable Gitpod for the user."
            },
            {
              "name": "projectMemberships",
              "description": "Project memberships of the user."
            },
            {
              "name": "publicEmail",
              "description": "User's public email."
            },
            {
              "name": "reviewRequestedMergeRequests",
              "description": "Merge requests assigned to the user for review."
            },
            {
              "name": "savedReplies",
              "description": "Saved replies authored by the user. Will not return saved replies if `saved_replies` feature flag is disabled."
            },
            {
              "name": "savedReply",
              "description": "Saved reply authored by the user. Will not return saved reply if `saved_replies` feature flag is disabled."
            },
            {
              "name": "snippets",
              "description": "Snippets authored by the user."
            },
            {
              "name": "starredProjects",
              "description": "Projects starred by the user."
            },
            {
              "name": "state",
              "description": "State of the user."
            },
            {
              "name": "status",
              "description": "User status."
            },
            {
              "name": "timelogs",
              "description": "Time logged by the user."
            },
            {
              "name": "todos",
              "description": "To-do items of the user."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource."
            },
            {
              "name": "username",
              "description": "Username of the user. Unique within this instance of GitLab."
            },
            {
              "name": "webPath",
              "description": "Web path of the user."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the user."
            }
          ]
        },
        {
          "name": "MergeRequestReviewerConnection",
          "kind": "OBJECT",
          "description": "The connection type for MergeRequestReviewer.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MergeRequestReviewerEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MergeRequestReviewerRereviewInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestReviewerRereview",
          "fields": null
        },
        {
          "name": "MergeRequestReviewerRereviewPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestReviewerRereview",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSetAssigneesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestSetAssignees",
          "fields": null
        },
        {
          "name": "MergeRequestSetAssigneesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestSetAssignees",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSetDraftInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestSetDraft",
          "fields": null
        },
        {
          "name": "MergeRequestSetDraftPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestSetDraft",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSetLabelsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestSetLabels",
          "fields": null
        },
        {
          "name": "MergeRequestSetLabelsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestSetLabels",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSetLockedInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestSetLocked",
          "fields": null
        },
        {
          "name": "MergeRequestSetLockedPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestSetLocked",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSetMilestoneInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestSetMilestone",
          "fields": null
        },
        {
          "name": "MergeRequestSetMilestonePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestSetMilestone",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSetReviewersInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestSetReviewers",
          "fields": null
        },
        {
          "name": "MergeRequestSetReviewersPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestSetReviewers",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSetSubscriptionInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestSetSubscription",
          "fields": null
        },
        {
          "name": "MergeRequestSetSubscriptionPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestSetSubscription",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestSort",
          "kind": "ENUM",
          "description": "Values for sorting merge requests",
          "fields": null
        },
        {
          "name": "MergeRequestState",
          "kind": "ENUM",
          "description": "State of a GitLab merge request",
          "fields": null
        },
        {
          "name": "MergeRequestUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of MergeRequestUpdate",
          "fields": null
        },
        {
          "name": "MergeRequestUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of MergeRequestUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request after mutation."
            }
          ]
        },
        {
          "name": "MergeRequestsResolverNegatedParams",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "MergeStatus",
          "kind": "ENUM",
          "description": "Representation of whether a GitLab merge request can be merged.",
          "fields": null
        },
        {
          "name": "MergeStrategyEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "Metadata",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "enterprise",
              "description": "Enterprise edition."
            },
            {
              "name": "kas",
              "description": "Metadata about KAS."
            },
            {
              "name": "revision",
              "description": "Revision."
            },
            {
              "name": "version",
              "description": "Version."
            }
          ]
        },
        {
          "name": "MetricImage",
          "kind": "OBJECT",
          "description": "Represents a metric image upload",
          "fields": [
            {
              "name": "fileName",
              "description": "File name of the metric image."
            },
            {
              "name": "filePath",
              "description": "File path of the metric image."
            },
            {
              "name": "id",
              "description": "ID of the metric upload."
            },
            {
              "name": "iid",
              "description": "Internal ID of the metric upload."
            },
            {
              "name": "url",
              "description": "URL of the metric source."
            }
          ]
        },
        {
          "name": "MetricsDashboard",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "annotations",
              "description": "Annotations added to the dashboard."
            },
            {
              "name": "path",
              "description": "Path to a file with the dashboard definition."
            },
            {
              "name": "schemaValidationWarnings",
              "description": "Dashboard schema validation warnings."
            }
          ]
        },
        {
          "name": "MetricsDashboardAnnotation",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "description",
              "description": "Description of the annotation."
            },
            {
              "name": "endingAt",
              "description": "Timestamp marking end of annotated time span."
            },
            {
              "name": "id",
              "description": "ID of the annotation."
            },
            {
              "name": "panelId",
              "description": "ID of a dashboard panel to which the annotation should be scoped."
            },
            {
              "name": "startingAt",
              "description": "Timestamp marking start of annotated time span."
            }
          ]
        },
        {
          "name": "MetricsDashboardAnnotationConnection",
          "kind": "OBJECT",
          "description": "The connection type for MetricsDashboardAnnotation.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MetricsDashboardAnnotationEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MetricsDashboardAnnotationID",
          "kind": "SCALAR",
          "description": "A `MetricsDashboardAnnotationID` is a global ID. It is encoded as a string.\n\nAn example `MetricsDashboardAnnotationID` is: `\"gid://gitlab/Metrics::Dashboard::Annotation/1\"`.",
          "fields": null
        },
        {
          "name": "Milestone",
          "kind": "OBJECT",
          "description": "Represents a milestone",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of milestone creation."
            },
            {
              "name": "description",
              "description": "Description of the milestone."
            },
            {
              "name": "dueDate",
              "description": "Timestamp of the milestone due date."
            },
            {
              "name": "expired",
              "description": "Expired state of the milestone (a milestone is expired when the due date is past the current date). Defaults to `false` when due date has not been set."
            },
            {
              "name": "groupMilestone",
              "description": "Indicates if milestone is at group level."
            },
            {
              "name": "id",
              "description": "ID of the milestone."
            },
            {
              "name": "iid",
              "description": "Internal ID of the milestone."
            },
            {
              "name": "projectMilestone",
              "description": "Indicates if milestone is at project level."
            },
            {
              "name": "releases",
              "description": "Releases associated with this milestone."
            },
            {
              "name": "report",
              "description": "Historically accurate report about the timebox."
            },
            {
              "name": "startDate",
              "description": "Timestamp of the milestone start date."
            },
            {
              "name": "state",
              "description": "State of the milestone."
            },
            {
              "name": "stats",
              "description": "Milestone statistics."
            },
            {
              "name": "subgroupMilestone",
              "description": "Indicates if milestone is at subgroup level."
            },
            {
              "name": "title",
              "description": "Title of the milestone."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of last milestone update."
            },
            {
              "name": "webPath",
              "description": "Web path of the milestone."
            }
          ]
        },
        {
          "name": "MilestoneConnection",
          "kind": "OBJECT",
          "description": "The connection type for Milestone.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "MilestoneEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "MilestoneID",
          "kind": "SCALAR",
          "description": "A `MilestoneID` is a global ID. It is encoded as a string.\n\nAn example `MilestoneID` is: `\"gid://gitlab/Milestone/1\"`.",
          "fields": null
        },
        {
          "name": "MilestoneSort",
          "kind": "ENUM",
          "description": "Values for sorting milestones",
          "fields": null
        },
        {
          "name": "MilestoneStateEnum",
          "kind": "ENUM",
          "description": "Current state of milestone",
          "fields": null
        },
        {
          "name": "MilestoneStats",
          "kind": "OBJECT",
          "description": "Contains statistics about a milestone",
          "fields": [
            {
              "name": "closedIssuesCount",
              "description": "Number of closed issues associated with the milestone."
            },
            {
              "name": "totalIssuesCount",
              "description": "Total number of issues associated with the milestone."
            }
          ]
        },
        {
          "name": "MilestoneWildcardId",
          "kind": "ENUM",
          "description": "Milestone ID wildcard values",
          "fields": null
        },
        {
          "name": "MoveType",
          "kind": "ENUM",
          "description": "The position to which the adjacent object should be moved",
          "fields": null
        },
        {
          "name": "Mutation",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "achievementsCreate",
              "description": null
            },
            {
              "name": "addProjectToSecurityDashboard",
              "description": null
            },
            {
              "name": "adminSidekiqQueuesDeleteJobs",
              "description": null
            },
            {
              "name": "alertSetAssignees",
              "description": null
            },
            {
              "name": "alertTodoCreate",
              "description": null
            },
            {
              "name": "approveDeployment",
              "description": null
            },
            {
              "name": "artifactDestroy",
              "description": null
            },
            {
              "name": "auditEventsStreamingDestinationEventsAdd",
              "description": null
            },
            {
              "name": "auditEventsStreamingDestinationEventsRemove",
              "description": null
            },
            {
              "name": "auditEventsStreamingHeadersCreate",
              "description": null
            },
            {
              "name": "auditEventsStreamingHeadersDestroy",
              "description": null
            },
            {
              "name": "auditEventsStreamingHeadersUpdate",
              "description": null
            },
            {
              "name": "awardEmojiAdd",
              "description": null
            },
            {
              "name": "awardEmojiRemove",
              "description": null
            },
            {
              "name": "awardEmojiToggle",
              "description": null
            },
            {
              "name": "boardEpicCreate",
              "description": null
            },
            {
              "name": "boardListCreate",
              "description": null
            },
            {
              "name": "boardListUpdateLimitMetrics",
              "description": null
            },
            {
              "name": "bulkEnableDevopsAdoptionNamespaces",
              "description": "**BETA** This endpoint is subject to change without notice."
            },
            {
              "name": "ciJobTokenScopeAddProject",
              "description": null
            },
            {
              "name": "ciJobTokenScopeRemoveProject",
              "description": null
            },
            {
              "name": "clusterAgentDelete",
              "description": null
            },
            {
              "name": "clusterAgentTokenCreate",
              "description": null
            },
            {
              "name": "clusterAgentTokenRevoke",
              "description": null
            },
            {
              "name": "commitCreate",
              "description": null
            },
            {
              "name": "configureContainerScanning",
              "description": "Configure Container Scanning for a project by enabling Container Scanning in a new or modified\n`.gitlab-ci.yml` file in a new branch. The new branch and a URL to\ncreate a merge request are part of the response.\n"
            },
            {
              "name": "configureDependencyScanning",
              "description": "Configure Dependency Scanning for a project by enabling Dependency Scanning in a new or modified\n`.gitlab-ci.yml` file in a new branch. The new branch and a URL to\ncreate a Merge Request are a part of the response.\n"
            },
            {
              "name": "configureSast",
              "description": "Configure SAST for a project by enabling SAST in a new or modified\n`.gitlab-ci.yml` file in a new branch. The new branch and a URL to\ncreate a Merge Request are a part of the response.\n"
            },
            {
              "name": "configureSastIac",
              "description": "Enable SAST IaC for a project in a new or\nmodified `.gitlab-ci.yml` file in a new branch. The new\nbranch and a URL to create a merge request are a part of the\nresponse.\n"
            },
            {
              "name": "configureSecretDetection",
              "description": "Configure Secret Detection for a project by enabling Secret Detection\nin a new or modified `.gitlab-ci.yml` file in a new branch. The new\nbranch and a URL to create a Merge Request are a part of the\nresponse.\n"
            },
            {
              "name": "corpusCreate",
              "description": null
            },
            {
              "name": "createAlertIssue",
              "description": null
            },
            {
              "name": "createAnnotation",
              "description": null
            },
            {
              "name": "createBoard",
              "description": null
            },
            {
              "name": "createBranch",
              "description": null
            },
            {
              "name": "createClusterAgent",
              "description": null
            },
            {
              "name": "createComplianceFramework",
              "description": null
            },
            {
              "name": "createDiffNote",
              "description": null
            },
            {
              "name": "createEpic",
              "description": null
            },
            {
              "name": "createImageDiffNote",
              "description": null
            },
            {
              "name": "createIssue",
              "description": null
            },
            {
              "name": "createNote",
              "description": "Creates a Note.\nIf the body of the Note contains only quick actions,\nthe Note will be destroyed during an update, and no Note will be\nreturned.\n"
            },
            {
              "name": "createRequirement",
              "description": null
            },
            {
              "name": "createSnippet",
              "description": null
            },
            {
              "name": "createTestCase",
              "description": null
            },
            {
              "name": "customerRelationsContactCreate",
              "description": null
            },
            {
              "name": "customerRelationsContactUpdate",
              "description": null
            },
            {
              "name": "customerRelationsOrganizationCreate",
              "description": null
            },
            {
              "name": "customerRelationsOrganizationUpdate",
              "description": null
            },
            {
              "name": "dastOnDemandScanCreate",
              "description": null
            },
            {
              "name": "dastProfileCreate",
              "description": null
            },
            {
              "name": "dastProfileDelete",
              "description": null
            },
            {
              "name": "dastProfileRun",
              "description": null
            },
            {
              "name": "dastProfileUpdate",
              "description": null
            },
            {
              "name": "dastScannerProfileCreate",
              "description": null
            },
            {
              "name": "dastScannerProfileDelete",
              "description": null
            },
            {
              "name": "dastScannerProfileUpdate",
              "description": null
            },
            {
              "name": "dastSiteProfileCreate",
              "description": null
            },
            {
              "name": "dastSiteProfileDelete",
              "description": null
            },
            {
              "name": "dastSiteProfileUpdate",
              "description": null
            },
            {
              "name": "dastSiteTokenCreate",
              "description": null
            },
            {
              "name": "dastSiteValidationCreate",
              "description": null
            },
            {
              "name": "dastSiteValidationRevoke",
              "description": null
            },
            {
              "name": "deleteAnnotation",
              "description": null
            },
            {
              "name": "designManagementDelete",
              "description": null
            },
            {
              "name": "designManagementMove",
              "description": null
            },
            {
              "name": "designManagementUpload",
              "description": null
            },
            {
              "name": "destroyBoard",
              "description": null
            },
            {
              "name": "destroyBoardList",
              "description": null
            },
            {
              "name": "destroyComplianceFramework",
              "description": null
            },
            {
              "name": "destroyContainerRepository",
              "description": null
            },
            {
              "name": "destroyContainerRepositoryTags",
              "description": null
            },
            {
              "name": "destroyEpicBoard",
              "description": null
            },
            {
              "name": "destroyNote",
              "description": null
            },
            {
              "name": "destroyPackage",
              "description": null
            },
            {
              "name": "destroyPackageFile",
              "description": null
            },
            {
              "name": "destroyPackageFiles",
              "description": null
            },
            {
              "name": "destroyPackages",
              "description": null
            },
            {
              "name": "destroySnippet",
              "description": null
            },
            {
              "name": "disableDevopsAdoptionNamespace",
              "description": "**BETA** This endpoint is subject to change without notice."
            },
            {
              "name": "discussionToggleResolve",
              "description": "Toggles the resolved state of a discussion"
            },
            {
              "name": "echoCreate",
              "description": "A mutation that does not perform any changes.\n\nThis is expected to be used for testing of endpoints, to verify\nthat a user has mutation access.\n"
            },
            {
              "name": "enableDevopsAdoptionNamespace",
              "description": "**BETA** This endpoint is subject to change without notice."
            },
            {
              "name": "environmentsCanaryIngressUpdate",
              "description": "**Deprecated** This endpoint is planned to be removed along with certificate-based clusters. [See this epic](https://gitlab.com/groups/gitlab-org/configure/-/epics/8) for more information."
            },
            {
              "name": "epicAddIssue",
              "description": null
            },
            {
              "name": "epicBoardCreate",
              "description": null
            },
            {
              "name": "epicBoardListCreate",
              "description": null
            },
            {
              "name": "epicBoardListDestroy",
              "description": "Destroys an epic board list."
            },
            {
              "name": "epicBoardUpdate",
              "description": null
            },
            {
              "name": "epicMoveList",
              "description": null
            },
            {
              "name": "epicSetSubscription",
              "description": null
            },
            {
              "name": "epicTreeReorder",
              "description": null
            },
            {
              "name": "escalationPolicyCreate",
              "description": null
            },
            {
              "name": "escalationPolicyDestroy",
              "description": null
            },
            {
              "name": "escalationPolicyUpdate",
              "description": null
            },
            {
              "name": "exportRequirements",
              "description": null
            },
            {
              "name": "externalAuditEventDestinationCreate",
              "description": null
            },
            {
              "name": "externalAuditEventDestinationDestroy",
              "description": null
            },
            {
              "name": "externalAuditEventDestinationUpdate",
              "description": null
            },
            {
              "name": "gitlabSubscriptionActivate",
              "description": null
            },
            {
              "name": "groupMemberBulkUpdate",
              "description": null
            },
            {
              "name": "groupUpdate",
              "description": null
            },
            {
              "name": "httpIntegrationCreate",
              "description": null
            },
            {
              "name": "httpIntegrationDestroy",
              "description": null
            },
            {
              "name": "httpIntegrationResetToken",
              "description": null
            },
            {
              "name": "httpIntegrationUpdate",
              "description": null
            },
            {
              "name": "issuableResourceLinkCreate",
              "description": null
            },
            {
              "name": "issuableResourceLinkDestroy",
              "description": null
            },
            {
              "name": "issueLinkAlerts",
              "description": null
            },
            {
              "name": "issueMove",
              "description": null
            },
            {
              "name": "issueMoveList",
              "description": null
            },
            {
              "name": "issueSetAssignees",
              "description": null
            },
            {
              "name": "issueSetConfidential",
              "description": null
            },
            {
              "name": "issueSetCrmContacts",
              "description": null
            },
            {
              "name": "issueSetDueDate",
              "description": null
            },
            {
              "name": "issueSetEpic",
              "description": null
            },
            {
              "name": "issueSetEscalationPolicy",
              "description": null
            },
            {
              "name": "issueSetEscalationStatus",
              "description": null
            },
            {
              "name": "issueSetIteration",
              "description": null
            },
            {
              "name": "issueSetLocked",
              "description": null
            },
            {
              "name": "issueSetSeverity",
              "description": null
            },
            {
              "name": "issueSetSubscription",
              "description": null
            },
            {
              "name": "issueSetWeight",
              "description": null
            },
            {
              "name": "issueUnlinkAlert",
              "description": null
            },
            {
              "name": "iterationCadenceCreate",
              "description": null
            },
            {
              "name": "iterationCadenceDestroy",
              "description": null
            },
            {
              "name": "iterationCadenceUpdate",
              "description": null
            },
            {
              "name": "iterationCreate",
              "description": null
            },
            {
              "name": "iterationDelete",
              "description": null
            },
            {
              "name": "jiraImportStart",
              "description": null
            },
            {
              "name": "jiraImportUsers",
              "description": null
            },
            {
              "name": "jobArtifactsDestroy",
              "description": null
            },
            {
              "name": "jobCancel",
              "description": null
            },
            {
              "name": "jobPlay",
              "description": null
            },
            {
              "name": "jobRetry",
              "description": null
            },
            {
              "name": "jobUnschedule",
              "description": null
            },
            {
              "name": "labelCreate",
              "description": null
            },
            {
              "name": "markAsSpamSnippet",
              "description": null
            },
            {
              "name": "mergeRequestAccept",
              "description": "Accepts a merge request.\nWhen accepted, the source branch will be merged into the target branch, either\nimmediately if possible, or using one of the automatic merge strategies.\n"
            },
            {
              "name": "mergeRequestCreate",
              "description": null
            },
            {
              "name": "mergeRequestReviewerRereview",
              "description": null
            },
            {
              "name": "mergeRequestSetAssignees",
              "description": null
            },
            {
              "name": "mergeRequestSetDraft",
              "description": null
            },
            {
              "name": "mergeRequestSetLabels",
              "description": null
            },
            {
              "name": "mergeRequestSetLocked",
              "description": null
            },
            {
              "name": "mergeRequestSetMilestone",
              "description": null
            },
            {
              "name": "mergeRequestSetReviewers",
              "description": null
            },
            {
              "name": "mergeRequestSetSubscription",
              "description": null
            },
            {
              "name": "mergeRequestUpdate",
              "description": "Update attributes of a merge request"
            },
            {
              "name": "namespaceBanDestroy",
              "description": null
            },
            {
              "name": "namespaceCiCdSettingsUpdate",
              "description": null
            },
            {
              "name": "namespaceIncreaseStorageTemporarily",
              "description": null
            },
            {
              "name": "oncallRotationCreate",
              "description": null
            },
            {
              "name": "oncallRotationDestroy",
              "description": null
            },
            {
              "name": "oncallRotationUpdate",
              "description": null
            },
            {
              "name": "oncallScheduleCreate",
              "description": null
            },
            {
              "name": "oncallScheduleDestroy",
              "description": null
            },
            {
              "name": "oncallScheduleUpdate",
              "description": null
            },
            {
              "name": "pagesMarkOnboardingComplete",
              "description": null
            },
            {
              "name": "pipelineCancel",
              "description": null
            },
            {
              "name": "pipelineDestroy",
              "description": null
            },
            {
              "name": "pipelineRetry",
              "description": null
            },
            {
              "name": "pipelineScheduleCreate",
              "description": null
            },
            {
              "name": "pipelineScheduleDelete",
              "description": null
            },
            {
              "name": "pipelineSchedulePlay",
              "description": null
            },
            {
              "name": "pipelineScheduleTakeOwnership",
              "description": null
            },
            {
              "name": "pipelineScheduleUpdate",
              "description": null
            },
            {
              "name": "projectCiCdSettingsUpdate",
              "description": null
            },
            {
              "name": "projectInitializeProductAnalytics",
              "description": null
            },
            {
              "name": "projectSetComplianceFramework",
              "description": "Assign (or unset) a compliance framework to a project."
            },
            {
              "name": "projectSetLocked",
              "description": null
            },
            {
              "name": "prometheusIntegrationCreate",
              "description": null
            },
            {
              "name": "prometheusIntegrationResetToken",
              "description": null
            },
            {
              "name": "prometheusIntegrationUpdate",
              "description": null
            },
            {
              "name": "promoteToEpic",
              "description": null
            },
            {
              "name": "releaseAssetLinkCreate",
              "description": null
            },
            {
              "name": "releaseAssetLinkDelete",
              "description": null
            },
            {
              "name": "releaseAssetLinkUpdate",
              "description": null
            },
            {
              "name": "releaseCreate",
              "description": null
            },
            {
              "name": "releaseDelete",
              "description": null
            },
            {
              "name": "releaseUpdate",
              "description": null
            },
            {
              "name": "removeProjectFromSecurityDashboard",
              "description": null
            },
            {
              "name": "repositionImageDiffNote",
              "description": "Repositions a DiffNote on an image (a `Note` where the `position.positionType` is `\"image\"`)"
            },
            {
              "name": "runnerDelete",
              "description": null
            },
            {
              "name": "runnerUpdate",
              "description": null
            },
            {
              "name": "runnersRegistrationTokenReset",
              "description": null
            },
            {
              "name": "savedReplyCreate",
              "description": null
            },
            {
              "name": "savedReplyDestroy",
              "description": null
            },
            {
              "name": "savedReplyUpdate",
              "description": null
            },
            {
              "name": "scanExecutionPolicyCommit",
              "description": "Commits the `policy_yaml` content to the assigned security policy project for the given project (`full_path`)"
            },
            {
              "name": "securityFindingCreateIssue",
              "description": null
            },
            {
              "name": "securityFindingDismiss",
              "description": null
            },
            {
              "name": "securityFindingRevertToDetected",
              "description": null
            },
            {
              "name": "securityPolicyProjectAssign",
              "description": "Assigns the specified project(`security_policy_project_id`) as security policy project for the given project(`full_path`). If the project already has a security policy project, this reassigns the project's security policy project with the given `security_policy_project_id`"
            },
            {
              "name": "securityPolicyProjectCreate",
              "description": "Creates and assigns a security policy project for the given project (`full_path`)"
            },
            {
              "name": "securityPolicyProjectUnassign",
              "description": "Unassigns the security policy project for the given project (`full_path`)."
            },
            {
              "name": "securityTrainingUpdate",
              "description": null
            },
            {
              "name": "terraformStateDelete",
              "description": null
            },
            {
              "name": "terraformStateLock",
              "description": null
            },
            {
              "name": "terraformStateUnlock",
              "description": null
            },
            {
              "name": "timelineEventDestroy",
              "description": null
            },
            {
              "name": "timelineEventPromoteFromNote",
              "description": null
            },
            {
              "name": "timelineEventTagCreate",
              "description": null
            },
            {
              "name": "timelineEventUpdate",
              "description": null
            },
            {
              "name": "timelogCreate",
              "description": null
            },
            {
              "name": "timelogDelete",
              "description": null
            },
            {
              "name": "todoCreate",
              "description": null
            },
            {
              "name": "todoMarkDone",
              "description": null
            },
            {
              "name": "todoRestore",
              "description": null
            },
            {
              "name": "todoRestoreMany",
              "description": null
            },
            {
              "name": "todosMarkAllDone",
              "description": null
            },
            {
              "name": "updateAlertStatus",
              "description": null
            },
            {
              "name": "updateBoard",
              "description": null
            },
            {
              "name": "updateBoardEpicUserPreferences",
              "description": null
            },
            {
              "name": "updateBoardList",
              "description": null
            },
            {
              "name": "updateComplianceFramework",
              "description": null
            },
            {
              "name": "updateContainerExpirationPolicy",
              "description": null
            },
            {
              "name": "updateDependencyProxyImageTtlGroupPolicy",
              "description": null
            },
            {
              "name": "updateDependencyProxySettings",
              "description": "These settings can be adjusted by the group Owner or Maintainer. However, in GitLab 16.0, we will be limiting this to the Owner role. [GitLab-#364441](https://gitlab.com/gitlab-org/gitlab/-/issues/364441) proposes making this change to match the permissions level in the user interface."
            },
            {
              "name": "updateEpic",
              "description": null
            },
            {
              "name": "updateEpicBoardList",
              "description": null
            },
            {
              "name": "updateImageDiffNote",
              "description": "Updates a DiffNote on an image (a `Note` where the `position.positionType` is `\"image\"`).\nIf the body of the Note contains only quick actions,\nthe Note will be destroyed during an update, and no Note will be\nreturned.\n\n"
            },
            {
              "name": "updateIssue",
              "description": null
            },
            {
              "name": "updateIteration",
              "description": null
            },
            {
              "name": "updateNamespacePackageSettings",
              "description": null
            },
            {
              "name": "updateNote",
              "description": "Updates a Note.\nIf the body of the Note contains only quick actions,\nthe Note will be destroyed during an update, and no Note will be\nreturned.\n"
            },
            {
              "name": "updatePackagesCleanupPolicy",
              "description": null
            },
            {
              "name": "updateRequirement",
              "description": null
            },
            {
              "name": "updateSnippet",
              "description": null
            },
            {
              "name": "uploadDelete",
              "description": "Deletes an upload."
            },
            {
              "name": "userCalloutCreate",
              "description": null
            },
            {
              "name": "userPreferencesUpdate",
              "description": null
            },
            {
              "name": "vulnerabilityConfirm",
              "description": null
            },
            {
              "name": "vulnerabilityCreate",
              "description": null
            },
            {
              "name": "vulnerabilityDismiss",
              "description": null
            },
            {
              "name": "vulnerabilityExternalIssueLinkCreate",
              "description": null
            },
            {
              "name": "vulnerabilityExternalIssueLinkDestroy",
              "description": null
            },
            {
              "name": "vulnerabilityResolve",
              "description": null
            },
            {
              "name": "vulnerabilityRevertToDetected",
              "description": null
            }
          ]
        },
        {
          "name": "MutationOperationMode",
          "kind": "ENUM",
          "description": "Different toggles for changing mutator behavior",
          "fields": null
        },
        {
          "name": "Namespace",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "actualRepositorySizeLimit",
              "description": "Size limit for repositories in the namespace in bytes."
            },
            {
              "name": "additionalPurchasedStorageSize",
              "description": "Additional storage purchased for the root namespace in bytes."
            },
            {
              "name": "complianceFrameworks",
              "description": "Compliance frameworks available to projects in this namespace."
            },
            {
              "name": "containsLockedProjects",
              "description": "Includes at least one project where the repository size exceeds the limit."
            },
            {
              "name": "crossProjectPipelineAvailable",
              "description": "Indicates if the cross_project_pipeline feature is available for the namespace."
            },
            {
              "name": "description",
              "description": "Description of the namespace."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "fullName",
              "description": "Full name of the namespace."
            },
            {
              "name": "fullPath",
              "description": "Full path of the namespace."
            },
            {
              "name": "id",
              "description": "ID of the namespace."
            },
            {
              "name": "isTemporaryStorageIncreaseEnabled",
              "description": "Status of the temporary storage increase."
            },
            {
              "name": "lfsEnabled",
              "description": "Indicates if Large File Storage (LFS) is enabled for namespace."
            },
            {
              "name": "name",
              "description": "Name of the namespace."
            },
            {
              "name": "packageSettings",
              "description": "Package settings for the namespace."
            },
            {
              "name": "path",
              "description": "Path of the namespace."
            },
            {
              "name": "projects",
              "description": "Projects within this namespace."
            },
            {
              "name": "repositorySizeExcessProjectCount",
              "description": "Number of projects in the root namespace where the repository size exceeds the limit."
            },
            {
              "name": "requestAccessEnabled",
              "description": "Indicates if users can request access to namespace."
            },
            {
              "name": "rootStorageStatistics",
              "description": "Aggregated storage statistics of the namespace. Only available for root namespaces."
            },
            {
              "name": "scanExecutionPolicies",
              "description": "Scan Execution Policies of the namespace."
            },
            {
              "name": "scanResultPolicies",
              "description": "Scan Result Policies of the project"
            },
            {
              "name": "sharedRunnersSetting",
              "description": "Shared runners availability for the namespace and its descendants."
            },
            {
              "name": "storageSizeLimit",
              "description": "Total storage limit of the root namespace in bytes."
            },
            {
              "name": "temporaryStorageIncreaseEndsOn",
              "description": "Date until the temporary storage increase is active."
            },
            {
              "name": "totalRepositorySize",
              "description": "Total repository size of all projects in the root namespace in bytes."
            },
            {
              "name": "totalRepositorySizeExcess",
              "description": "Total excess repository size of all projects in the root namespace in bytes."
            },
            {
              "name": "visibility",
              "description": "Visibility of the namespace."
            }
          ]
        },
        {
          "name": "NamespaceBan",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "Global ID of the namespace ban."
            },
            {
              "name": "namespace",
              "description": "Root namespace to which the ban applies."
            },
            {
              "name": "user",
              "description": "User to which the namespace ban applies."
            }
          ]
        },
        {
          "name": "NamespaceBanDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of NamespaceBanDestroy",
          "fields": null
        },
        {
          "name": "NamespaceBanDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of NamespaceBanDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "namespaceBan",
              "description": "Namespace Ban."
            }
          ]
        },
        {
          "name": "NamespaceCiCdSetting",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "allowStaleRunnerPruning",
              "description": "Indicates if stale runners directly belonging to this namespace should be periodically pruned."
            },
            {
              "name": "namespace",
              "description": "Namespace the CI/CD settings belong to."
            }
          ]
        },
        {
          "name": "NamespaceCiCdSettingsUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of NamespaceCiCdSettingsUpdate",
          "fields": null
        },
        {
          "name": "NamespaceCiCdSettingsUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of NamespaceCiCdSettingsUpdate",
          "fields": [
            {
              "name": "ciCdSettings",
              "description": "CI/CD settings after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "NamespaceCommitEmail",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp the namespace commit email was created."
            },
            {
              "name": "email",
              "description": "Email."
            },
            {
              "name": "id",
              "description": "Internal ID of the namespace commit email."
            },
            {
              "name": "namespace",
              "description": "Namespace."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the namespace commit email was last updated."
            }
          ]
        },
        {
          "name": "NamespaceCommitEmailConnection",
          "kind": "OBJECT",
          "description": "The connection type for NamespaceCommitEmail.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "NamespaceCommitEmailEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "NamespaceConnection",
          "kind": "OBJECT",
          "description": "The connection type for Namespace.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "NamespaceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "NamespaceID",
          "kind": "SCALAR",
          "description": "A `NamespaceID` is a global ID. It is encoded as a string.\n\nAn example `NamespaceID` is: `\"gid://gitlab/Namespace/1\"`.",
          "fields": null
        },
        {
          "name": "NamespaceIncreaseStorageTemporarilyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of NamespaceIncreaseStorageTemporarily",
          "fields": null
        },
        {
          "name": "NamespaceIncreaseStorageTemporarilyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of NamespaceIncreaseStorageTemporarily",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "namespace",
              "description": "Namespace after mutation."
            }
          ]
        },
        {
          "name": "NamespaceProjectSort",
          "kind": "ENUM",
          "description": "Values for sorting projects",
          "fields": null
        },
        {
          "name": "NamespacesNamespaceBanID",
          "kind": "SCALAR",
          "description": "A `NamespacesNamespaceBanID` is a global ID. It is encoded as a string.\n\nAn example `NamespacesNamespaceBanID` is: `\"gid://gitlab/Namespaces::NamespaceBan/1\"`.",
          "fields": null
        },
        {
          "name": "NegatedBoardIssueInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "NegatedEpicBoardIssueInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "NegatedEpicFilterInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "NegatedIssueFilterInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "NegatedIterationWildcardId",
          "kind": "ENUM",
          "description": "Negated Iteration ID wildcard values",
          "fields": null
        },
        {
          "name": "NegatedMilestoneWildcardId",
          "kind": "ENUM",
          "description": "Negated Milestone ID wildcard values",
          "fields": null
        },
        {
          "name": "NestedEnvironment",
          "kind": "OBJECT",
          "description": "Describes where code is deployed for a project organized by folder.",
          "fields": [
            {
              "name": "environment",
              "description": "Latest environment in the folder."
            },
            {
              "name": "name",
              "description": "Human-readable name of the environment."
            },
            {
              "name": "size",
              "description": "Number of environments nested in the folder."
            }
          ]
        },
        {
          "name": "NestedEnvironmentConnection",
          "kind": "OBJECT",
          "description": "The connection type for NestedEnvironment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "NestedEnvironmentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "NetworkPolicy",
          "kind": "OBJECT",
          "description": "Represents the network policy",
          "fields": [
            {
              "name": "enabled",
              "description": "Indicates whether this policy is enabled."
            },
            {
              "name": "environments",
              "description": "Environments where this policy is applied."
            },
            {
              "name": "fromAutoDevops",
              "description": "Indicates whether this policy is created from AutoDevops."
            },
            {
              "name": "kind",
              "description": "Kind of the policy."
            },
            {
              "name": "name",
              "description": "Name of the policy."
            },
            {
              "name": "namespace",
              "description": "Namespace of the policy."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the policy YAML was last updated."
            },
            {
              "name": "yaml",
              "description": "YAML definition of the policy."
            }
          ]
        },
        {
          "name": "NetworkPolicyConnection",
          "kind": "OBJECT",
          "description": "The connection type for NetworkPolicy.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "NetworkPolicyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "NetworkPolicyKind",
          "kind": "ENUM",
          "description": "Kind of the network policy",
          "fields": null
        },
        {
          "name": "Note",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "author",
              "description": "User who wrote this note."
            },
            {
              "name": "body",
              "description": "Content of the note."
            },
            {
              "name": "bodyHtml",
              "description": "GitLab Flavored Markdown rendering of `note`"
            },
            {
              "name": "createdAt",
              "description": "Timestamp of the note creation."
            },
            {
              "name": "discussion",
              "description": "Discussion this note is a part of."
            },
            {
              "name": "id",
              "description": "ID of the note."
            },
            {
              "name": "internal",
              "description": "Indicates if this note is internal."
            },
            {
              "name": "lastEditedAt",
              "description": "Timestamp when note was last edited."
            },
            {
              "name": "lastEditedBy",
              "description": "User who last edited the note."
            },
            {
              "name": "position",
              "description": "Position of this note on a diff."
            },
            {
              "name": "project",
              "description": "Project associated with the note."
            },
            {
              "name": "resolvable",
              "description": "Indicates if the object can be resolved."
            },
            {
              "name": "resolved",
              "description": "Indicates if the object is resolved."
            },
            {
              "name": "resolvedAt",
              "description": "Timestamp of when the object was resolved."
            },
            {
              "name": "resolvedBy",
              "description": "User who resolved the object."
            },
            {
              "name": "system",
              "description": "Indicates whether this note was created by the system or by a user."
            },
            {
              "name": "systemNoteIconName",
              "description": "Name of the icon corresponding to a system note."
            },
            {
              "name": "systemNoteMetadata",
              "description": "Metadata for the given note if it is a system note."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of the note's last activity."
            },
            {
              "name": "url",
              "description": "URL to view this Note in the Web UI."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            }
          ]
        },
        {
          "name": "NoteConnection",
          "kind": "OBJECT",
          "description": "The connection type for Note.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "NoteEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "NoteID",
          "kind": "SCALAR",
          "description": "A `NoteID` is a global ID. It is encoded as a string.\n\nAn example `NoteID` is: `\"gid://gitlab/Note/1\"`.",
          "fields": null
        },
        {
          "name": "NotePermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "adminNote",
              "description": "Indicates the user can perform `admin_note` on this resource"
            },
            {
              "name": "awardEmoji",
              "description": "Indicates the user can perform `award_emoji` on this resource"
            },
            {
              "name": "createNote",
              "description": "Indicates the user can perform `create_note` on this resource"
            },
            {
              "name": "readNote",
              "description": "Indicates the user can perform `read_note` on this resource"
            },
            {
              "name": "repositionNote",
              "description": "Indicates the user can perform `reposition_note` on this resource"
            },
            {
              "name": "resolveNote",
              "description": "Indicates the user can perform `resolve_note` on this resource"
            }
          ]
        },
        {
          "name": "NoteableID",
          "kind": "SCALAR",
          "description": "A `NoteableID` is a global ID. It is encoded as a string.\n\nAn example `NoteableID` is: `\"gid://gitlab/Noteable/1\"`.",
          "fields": null
        },
        {
          "name": "NoteableInterface",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            }
          ]
        },
        {
          "name": "NoteableType",
          "kind": "UNION",
          "description": "Represents an object that supports notes.",
          "fields": null
        },
        {
          "name": "NotesFilterType",
          "kind": "ENUM",
          "description": "Work item notes collection type.",
          "fields": null
        },
        {
          "name": "NugetDependencyLinkMetadata",
          "kind": "OBJECT",
          "description": "Nuget dependency link metadata",
          "fields": [
            {
              "name": "id",
              "description": "ID of the metadatum."
            },
            {
              "name": "targetFramework",
              "description": "Target framework of the dependency link package."
            }
          ]
        },
        {
          "name": "NugetMetadata",
          "kind": "OBJECT",
          "description": "Nuget metadata",
          "fields": [
            {
              "name": "iconUrl",
              "description": "Icon URL of the Nuget package."
            },
            {
              "name": "id",
              "description": "ID of the metadatum."
            },
            {
              "name": "licenseUrl",
              "description": "License URL of the Nuget package."
            },
            {
              "name": "projectUrl",
              "description": "Project URL of the Nuget package."
            }
          ]
        },
        {
          "name": "OncallParticipantType",
          "kind": "OBJECT",
          "description": "The rotation participant and color palette",
          "fields": [
            {
              "name": "colorPalette",
              "description": "Color palette to assign to the on-call user. For example \"blue\"."
            },
            {
              "name": "colorWeight",
              "description": "Color weight to assign to for the on-call user, for example \"500\". Max 4 chars. For easy identification of the user."
            },
            {
              "name": "id",
              "description": "ID of the on-call participant."
            },
            {
              "name": "user",
              "description": "User who is participating."
            }
          ]
        },
        {
          "name": "OncallParticipantTypeConnection",
          "kind": "OBJECT",
          "description": "The connection type for OncallParticipantType.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "OncallParticipantTypeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "OncallRotationActivePeriodInputType",
          "kind": "INPUT_OBJECT",
          "description": "Active period time range for on-call rotation",
          "fields": null
        },
        {
          "name": "OncallRotationActivePeriodType",
          "kind": "OBJECT",
          "description": "Active period time range for on-call rotation",
          "fields": [
            {
              "name": "endTime",
              "description": "End of the rotation active period."
            },
            {
              "name": "startTime",
              "description": "Start of the rotation active period."
            }
          ]
        },
        {
          "name": "OncallRotationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of OncallRotationCreate",
          "fields": null
        },
        {
          "name": "OncallRotationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of OncallRotationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "oncallRotation",
              "description": "On-call rotation."
            }
          ]
        },
        {
          "name": "OncallRotationDateInputType",
          "kind": "INPUT_OBJECT",
          "description": "Date input type for on-call rotation",
          "fields": null
        },
        {
          "name": "OncallRotationDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of OncallRotationDestroy",
          "fields": null
        },
        {
          "name": "OncallRotationDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of OncallRotationDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "oncallRotation",
              "description": "On-call rotation."
            }
          ]
        },
        {
          "name": "OncallRotationLengthInputType",
          "kind": "INPUT_OBJECT",
          "description": "The rotation length of the on-call rotation",
          "fields": null
        },
        {
          "name": "OncallRotationUnitEnum",
          "kind": "ENUM",
          "description": "Rotation length unit of an on-call rotation",
          "fields": null
        },
        {
          "name": "OncallRotationUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of OncallRotationUpdate",
          "fields": null
        },
        {
          "name": "OncallRotationUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of OncallRotationUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "oncallRotation",
              "description": "On-call rotation."
            }
          ]
        },
        {
          "name": "OncallScheduleCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of OncallScheduleCreate",
          "fields": null
        },
        {
          "name": "OncallScheduleCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of OncallScheduleCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "oncallSchedule",
              "description": "On-call schedule."
            }
          ]
        },
        {
          "name": "OncallScheduleDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of OncallScheduleDestroy",
          "fields": null
        },
        {
          "name": "OncallScheduleDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of OncallScheduleDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "oncallSchedule",
              "description": "On-call schedule."
            }
          ]
        },
        {
          "name": "OncallScheduleUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of OncallScheduleUpdate",
          "fields": null
        },
        {
          "name": "OncallScheduleUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of OncallScheduleUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "oncallSchedule",
              "description": "On-call schedule."
            }
          ]
        },
        {
          "name": "OncallUserInputType",
          "kind": "INPUT_OBJECT",
          "description": "The rotation user and color palette",
          "fields": null
        },
        {
          "name": "OrchestrationPolicy",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "description",
              "description": "Description of the policy."
            },
            {
              "name": "enabled",
              "description": "Indicates whether this policy is enabled."
            },
            {
              "name": "name",
              "description": "Name of the policy."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the policy YAML was last updated."
            },
            {
              "name": "yaml",
              "description": "YAML definition of the policy."
            }
          ]
        },
        {
          "name": "OrganizationSort",
          "kind": "ENUM",
          "description": "Values for sorting organizations",
          "fields": null
        },
        {
          "name": "OrganizationStateCounts",
          "kind": "OBJECT",
          "description": "Represents the total number of organizations for the represented states.",
          "fields": [
            {
              "name": "active",
              "description": "Number of organizations with state `ACTIVE`"
            },
            {
              "name": "all",
              "description": "Number of organizations with state `ALL`"
            },
            {
              "name": "inactive",
              "description": "Number of organizations with state `INACTIVE`"
            }
          ]
        },
        {
          "name": "Package",
          "kind": "OBJECT",
          "description": "Represents a package with pipelines in the Package Registry",
          "fields": [
            {
              "name": "_links",
              "description": "Map of links to perform actions on the package."
            },
            {
              "name": "canDestroy",
              "description": "Whether the user can destroy the package."
            },
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "id",
              "description": "ID of the package."
            },
            {
              "name": "metadata",
              "description": "Package metadata."
            },
            {
              "name": "name",
              "description": "Name of the package."
            },
            {
              "name": "packageType",
              "description": "Package type."
            },
            {
              "name": "pipelines",
              "description": "              Pipelines that built the package. Max page size 20.\n"
            },
            {
              "name": "project",
              "description": "Project where the package is stored."
            },
            {
              "name": "status",
              "description": "Package status."
            },
            {
              "name": "tags",
              "description": "Package tags."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            },
            {
              "name": "version",
              "description": "Version string."
            }
          ]
        },
        {
          "name": "PackageBase",
          "kind": "OBJECT",
          "description": "Represents a package in the Package Registry",
          "fields": [
            {
              "name": "_links",
              "description": "Map of links to perform actions on the package."
            },
            {
              "name": "canDestroy",
              "description": "Whether the user can destroy the package."
            },
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "id",
              "description": "ID of the package."
            },
            {
              "name": "metadata",
              "description": "Package metadata."
            },
            {
              "name": "name",
              "description": "Name of the package."
            },
            {
              "name": "packageType",
              "description": "Package type."
            },
            {
              "name": "project",
              "description": "Project where the package is stored."
            },
            {
              "name": "status",
              "description": "Package status."
            },
            {
              "name": "tags",
              "description": "Package tags."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            },
            {
              "name": "version",
              "description": "Version string."
            }
          ]
        },
        {
          "name": "PackageBaseConnection",
          "kind": "OBJECT",
          "description": "The connection type for PackageBase.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PackageBaseEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PackageComposerJsonType",
          "kind": "OBJECT",
          "description": "Represents a composer JSON file",
          "fields": [
            {
              "name": "license",
              "description": "License set in the Composer JSON file."
            },
            {
              "name": "name",
              "description": "Name set in the Composer JSON file."
            },
            {
              "name": "type",
              "description": "Type set in the Composer JSON file."
            },
            {
              "name": "version",
              "description": "Version set in the Composer JSON file."
            }
          ]
        },
        {
          "name": "PackageConnection",
          "kind": "OBJECT",
          "description": "The connection type for Package.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PackageDependency",
          "kind": "OBJECT",
          "description": "Represents a package dependency.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the dependency."
            },
            {
              "name": "name",
              "description": "Name of the dependency."
            },
            {
              "name": "versionPattern",
              "description": "Version pattern of the dependency."
            }
          ]
        },
        {
          "name": "PackageDependencyLink",
          "kind": "OBJECT",
          "description": "Represents a package dependency link",
          "fields": [
            {
              "name": "dependency",
              "description": "Dependency."
            },
            {
              "name": "dependencyType",
              "description": "Dependency type."
            },
            {
              "name": "id",
              "description": "ID of the dependency link."
            },
            {
              "name": "metadata",
              "description": "Dependency link metadata."
            }
          ]
        },
        {
          "name": "PackageDependencyLinkConnection",
          "kind": "OBJECT",
          "description": "The connection type for PackageDependencyLink.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PackageDependencyLinkEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PackageDependencyType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PackageDetailsType",
          "kind": "OBJECT",
          "description": "Represents a package details in the Package Registry",
          "fields": [
            {
              "name": "_links",
              "description": "Map of links to perform actions on the package."
            },
            {
              "name": "canDestroy",
              "description": "Whether the user can destroy the package."
            },
            {
              "name": "composerConfigRepositoryUrl",
              "description": "Url of the Composer setup endpoint."
            },
            {
              "name": "composerUrl",
              "description": "Url of the Composer endpoint."
            },
            {
              "name": "conanUrl",
              "description": "Url of the Conan project endpoint."
            },
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "dependencyLinks",
              "description": "Dependency link."
            },
            {
              "name": "id",
              "description": "ID of the package."
            },
            {
              "name": "lastDownloadedAt",
              "description": "Last time that a file of this package was downloaded."
            },
            {
              "name": "mavenUrl",
              "description": "Url of the Maven project endpoint."
            },
            {
              "name": "metadata",
              "description": "Package metadata."
            },
            {
              "name": "name",
              "description": "Name of the package."
            },
            {
              "name": "npmUrl",
              "description": "Url of the NPM project endpoint."
            },
            {
              "name": "nugetUrl",
              "description": "Url of the Nuget project endpoint."
            },
            {
              "name": "packageFiles",
              "description": "Package files."
            },
            {
              "name": "packageType",
              "description": "Package type."
            },
            {
              "name": "pipelines",
              "description": "              Pipelines that built the package. Max page size 20.\n"
            },
            {
              "name": "project",
              "description": "Project where the package is stored."
            },
            {
              "name": "publicPackage",
              "description": "Indicates if there is public access to the package."
            },
            {
              "name": "pypiSetupUrl",
              "description": "Url of the PyPi project setup endpoint."
            },
            {
              "name": "pypiUrl",
              "description": "Url of the PyPi project endpoint."
            },
            {
              "name": "status",
              "description": "Package status."
            },
            {
              "name": "tags",
              "description": "Package tags."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            },
            {
              "name": "version",
              "description": "Version string."
            },
            {
              "name": "versions",
              "description": "Other versions of the package."
            }
          ]
        },
        {
          "name": "PackageEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PackageFile",
          "kind": "OBJECT",
          "description": "Represents a package file",
          "fields": [
            {
              "name": "createdAt",
              "description": "Created date."
            },
            {
              "name": "downloadPath",
              "description": "Download path of the package file."
            },
            {
              "name": "fileMd5",
              "description": "Md5 of the package file."
            },
            {
              "name": "fileMetadata",
              "description": "File metadata."
            },
            {
              "name": "fileName",
              "description": "Name of the package file."
            },
            {
              "name": "fileSha1",
              "description": "Sha1 of the package file."
            },
            {
              "name": "fileSha256",
              "description": "Sha256 of the package file."
            },
            {
              "name": "id",
              "description": "ID of the file."
            },
            {
              "name": "size",
              "description": "Size of the package file."
            },
            {
              "name": "updatedAt",
              "description": "Updated date."
            }
          ]
        },
        {
          "name": "PackageFileConnection",
          "kind": "OBJECT",
          "description": "The connection type for PackageFile.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PackageFileEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PackageFileMetadata",
          "kind": "INTERFACE",
          "description": "Represents metadata associated with a Package file",
          "fields": [
            {
              "name": "createdAt",
              "description": "Date of creation."
            },
            {
              "name": "updatedAt",
              "description": "Date of most recent update."
            }
          ]
        },
        {
          "name": "PackageFileRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo sync and verification state of a package file",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the PackageFileRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the PackageFileRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the PackageFileRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the PackageFileRegistry"
            },
            {
              "name": "packageFileId",
              "description": "ID of the PackageFile."
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the PackageFileRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the PackageFileRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the PackageFileRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the PackageFileRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the PackageFileRegistry"
            }
          ]
        },
        {
          "name": "PackageFileRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for PackageFileRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PackageFileRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PackageGroupSort",
          "kind": "ENUM",
          "description": "Values for sorting group packages",
          "fields": null
        },
        {
          "name": "PackageHelmDependencyType",
          "kind": "OBJECT",
          "description": "Represents a Helm dependency",
          "fields": [
            {
              "name": "alias",
              "description": "Alias of the dependency."
            },
            {
              "name": "condition",
              "description": "Condition of the dependency."
            },
            {
              "name": "enabled",
              "description": "Indicates the dependency is enabled."
            },
            {
              "name": "importValues",
              "description": "Import-values of the dependency."
            },
            {
              "name": "name",
              "description": "Name of the dependency."
            },
            {
              "name": "repository",
              "description": "Repository of the dependency."
            },
            {
              "name": "tags",
              "description": "Tags of the dependency."
            },
            {
              "name": "version",
              "description": "Version of the dependency."
            }
          ]
        },
        {
          "name": "PackageHelmMaintainerType",
          "kind": "OBJECT",
          "description": "Represents a Helm maintainer",
          "fields": [
            {
              "name": "email",
              "description": "Email of the maintainer."
            },
            {
              "name": "name",
              "description": "Name of the maintainer."
            },
            {
              "name": "url",
              "description": "URL of the maintainer."
            }
          ]
        },
        {
          "name": "PackageHelmMetadataType",
          "kind": "OBJECT",
          "description": "Represents the contents of a Helm Chart.yml file",
          "fields": [
            {
              "name": "annotations",
              "description": "Annotations for the chart."
            },
            {
              "name": "apiVersion",
              "description": "API version of the chart."
            },
            {
              "name": "appVersion",
              "description": "App version of the chart."
            },
            {
              "name": "condition",
              "description": "Condition for the chart."
            },
            {
              "name": "dependencies",
              "description": "Dependencies of the chart."
            },
            {
              "name": "deprecated",
              "description": "Indicates if the chart is deprecated."
            },
            {
              "name": "description",
              "description": "Description of the chart."
            },
            {
              "name": "home",
              "description": "URL of the home page."
            },
            {
              "name": "icon",
              "description": "URL to an SVG or PNG image for the chart."
            },
            {
              "name": "keywords",
              "description": "Keywords for the chart."
            },
            {
              "name": "kubeVersion",
              "description": "Kubernetes versions for the chart."
            },
            {
              "name": "maintainers",
              "description": "Maintainers of the chart."
            },
            {
              "name": "name",
              "description": "Name of the chart."
            },
            {
              "name": "sources",
              "description": "URLs of the source code for the chart."
            },
            {
              "name": "tags",
              "description": "Tags for the chart."
            },
            {
              "name": "type",
              "description": "Type of the chart."
            },
            {
              "name": "version",
              "description": "Version of the chart."
            }
          ]
        },
        {
          "name": "PackageLinks",
          "kind": "OBJECT",
          "description": "Represents links to perform actions on the package",
          "fields": [
            {
              "name": "webPath",
              "description": "Path to the package details page."
            }
          ]
        },
        {
          "name": "PackageMetadata",
          "kind": "UNION",
          "description": "Represents metadata associated with a Package",
          "fields": null
        },
        {
          "name": "PackageSettings",
          "kind": "OBJECT",
          "description": "Namespace-level Package Registry settings",
          "fields": [
            {
              "name": "genericDuplicateExceptionRegex",
              "description": "When generic_duplicates_allowed is false, you can publish duplicate packages with names that match this regex. Otherwise, this setting has no effect."
            },
            {
              "name": "genericDuplicatesAllowed",
              "description": "Indicates whether duplicate generic packages are allowed for this namespace."
            },
            {
              "name": "lockMavenPackageRequestsForwarding",
              "description": "Indicates whether Maven package forwarding is locked for all descendent namespaces."
            },
            {
              "name": "lockNpmPackageRequestsForwarding",
              "description": "Indicates whether npm package forwarding is locked for all descendent namespaces."
            },
            {
              "name": "lockPypiPackageRequestsForwarding",
              "description": "Indicates whether PyPI package forwarding is locked for all descendent namespaces."
            },
            {
              "name": "mavenDuplicateExceptionRegex",
              "description": "When maven_duplicates_allowed is false, you can publish duplicate packages with names that match this regex. Otherwise, this setting has no effect."
            },
            {
              "name": "mavenDuplicatesAllowed",
              "description": "Indicates whether duplicate Maven packages are allowed for this namespace."
            },
            {
              "name": "mavenPackageRequestsForwarding",
              "description": "Indicates whether Maven package forwarding is allowed for this namespace."
            },
            {
              "name": "mavenPackageRequestsForwardingLocked",
              "description": "Indicates whether Maven package forwarding settings are locked by a parent namespace."
            },
            {
              "name": "npmPackageRequestsForwarding",
              "description": "Indicates whether npm package forwarding is allowed for this namespace."
            },
            {
              "name": "npmPackageRequestsForwardingLocked",
              "description": "Indicates whether npm package forwarding settings are locked by a parent namespace."
            },
            {
              "name": "pypiPackageRequestsForwarding",
              "description": "Indicates whether PyPI package forwarding is allowed for this namespace."
            },
            {
              "name": "pypiPackageRequestsForwardingLocked",
              "description": "Indicates whether PyPI package forwarding settings are locked by a parent namespace."
            }
          ]
        },
        {
          "name": "PackageSort",
          "kind": "ENUM",
          "description": "Values for sorting package",
          "fields": null
        },
        {
          "name": "PackageStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PackageTag",
          "kind": "OBJECT",
          "description": "Represents a package tag",
          "fields": [
            {
              "name": "createdAt",
              "description": "Created date."
            },
            {
              "name": "id",
              "description": "ID of the tag."
            },
            {
              "name": "name",
              "description": "Name of the tag."
            },
            {
              "name": "updatedAt",
              "description": "Updated date."
            }
          ]
        },
        {
          "name": "PackageTagConnection",
          "kind": "OBJECT",
          "description": "The connection type for PackageTag.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PackageTagEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PackageTypeEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PackagesCleanupKeepDuplicatedPackageFilesEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PackagesCleanupPolicy",
          "kind": "OBJECT",
          "description": "A packages cleanup policy designed to keep only packages and packages assets that matter most",
          "fields": [
            {
              "name": "keepNDuplicatedPackageFiles",
              "description": "Number of duplicated package files to retain."
            },
            {
              "name": "nextRunAt",
              "description": "Next time that this packages cleanup policy will be executed."
            }
          ]
        },
        {
          "name": "PackagesConanFileMetadatumID",
          "kind": "SCALAR",
          "description": "A `PackagesConanFileMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesConanFileMetadatumID` is: `\"gid://gitlab/Packages::Conan::FileMetadatum/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesConanMetadatumID",
          "kind": "SCALAR",
          "description": "A `PackagesConanMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesConanMetadatumID` is: `\"gid://gitlab/Packages::Conan::Metadatum/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesDependencyID",
          "kind": "SCALAR",
          "description": "A `PackagesDependencyID` is a global ID. It is encoded as a string.\n\nAn example `PackagesDependencyID` is: `\"gid://gitlab/Packages::Dependency/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesDependencyLinkID",
          "kind": "SCALAR",
          "description": "A `PackagesDependencyLinkID` is a global ID. It is encoded as a string.\n\nAn example `PackagesDependencyLinkID` is: `\"gid://gitlab/Packages::DependencyLink/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesMavenMetadatumID",
          "kind": "SCALAR",
          "description": "A `PackagesMavenMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesMavenMetadatumID` is: `\"gid://gitlab/Packages::Maven::Metadatum/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesNugetDependencyLinkMetadatumID",
          "kind": "SCALAR",
          "description": "A `PackagesNugetDependencyLinkMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesNugetDependencyLinkMetadatumID` is: `\"gid://gitlab/Packages::Nuget::DependencyLinkMetadatum/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesNugetMetadatumID",
          "kind": "SCALAR",
          "description": "A `PackagesNugetMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesNugetMetadatumID` is: `\"gid://gitlab/Packages::Nuget::Metadatum/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesPackageFileID",
          "kind": "SCALAR",
          "description": "A `PackagesPackageFileID` is a global ID. It is encoded as a string.\n\nAn example `PackagesPackageFileID` is: `\"gid://gitlab/Packages::PackageFile/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesPackageID",
          "kind": "SCALAR",
          "description": "A `PackagesPackageID` is a global ID. It is encoded as a string.\n\nAn example `PackagesPackageID` is: `\"gid://gitlab/Packages::Package/1\"`.",
          "fields": null
        },
        {
          "name": "PackagesPypiMetadatumID",
          "kind": "SCALAR",
          "description": "A `PackagesPypiMetadatumID` is a global ID. It is encoded as a string.\n\nAn example `PackagesPypiMetadatumID` is: `\"gid://gitlab/Packages::Pypi::Metadatum/1\"`.",
          "fields": null
        },
        {
          "name": "PageInfo",
          "kind": "OBJECT",
          "description": "Information about pagination in a connection.",
          "fields": [
            {
              "name": "endCursor",
              "description": "When paginating forwards, the cursor to continue."
            },
            {
              "name": "hasNextPage",
              "description": "When paginating forwards, are there more items?"
            },
            {
              "name": "hasPreviousPage",
              "description": "When paginating backwards, are there more items?"
            },
            {
              "name": "startCursor",
              "description": "When paginating backwards, the cursor to continue."
            }
          ]
        },
        {
          "name": "PagesDeploymentRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo replication and verification state of a pages_deployment",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the PagesDeploymentRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the PagesDeploymentRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the PagesDeploymentRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the PagesDeploymentRegistry"
            },
            {
              "name": "pagesDeploymentId",
              "description": "ID of the Pages Deployment."
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the PagesDeploymentRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the PagesDeploymentRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the PagesDeploymentRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the PagesDeploymentRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the PagesDeploymentRegistry"
            }
          ]
        },
        {
          "name": "PagesDeploymentRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for PagesDeploymentRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PagesDeploymentRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PagesMarkOnboardingCompleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PagesMarkOnboardingComplete",
          "fields": null
        },
        {
          "name": "PagesMarkOnboardingCompletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PagesMarkOnboardingComplete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "onboardingComplete",
              "description": "Indicates the new onboarding_complete state of the project's Pages metadata."
            }
          ]
        },
        {
          "name": "PathLock",
          "kind": "OBJECT",
          "description": "Represents a file or directory in the project repository that has been locked.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the path lock."
            },
            {
              "name": "path",
              "description": "Locked path."
            },
            {
              "name": "user",
              "description": "User that has locked this path."
            }
          ]
        },
        {
          "name": "PathLockConnection",
          "kind": "OBJECT",
          "description": "The connection type for PathLock.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PathLockEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PathLockID",
          "kind": "SCALAR",
          "description": "A `PathLockID` is a global ID. It is encoded as a string.\n\nAn example `PathLockID` is: `\"gid://gitlab/PathLock/1\"`.",
          "fields": null
        },
        {
          "name": "PayloadAlertFieldPathSegment",
          "kind": "SCALAR",
          "description": "String or integer.",
          "fields": null
        },
        {
          "name": "Pipeline",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "Indicates if the pipeline is active."
            },
            {
              "name": "beforeSha",
              "description": "Base SHA of the source branch."
            },
            {
              "name": "cancelable",
              "description": "Specifies if a pipeline can be canceled."
            },
            {
              "name": "codeQualityReportSummary",
              "description": "Code Quality report summary for a pipeline."
            },
            {
              "name": "codeQualityReports",
              "description": "Code Quality degradations reported on the pipeline."
            },
            {
              "name": "commit",
              "description": "Git commit of the pipeline."
            },
            {
              "name": "commitPath",
              "description": "Path to the commit that triggered the pipeline."
            },
            {
              "name": "committedAt",
              "description": "Timestamp of the pipeline's commit."
            },
            {
              "name": "complete",
              "description": "Indicates if a pipeline is complete."
            },
            {
              "name": "configSource",
              "description": "Configuration source of the pipeline (UNKNOWN_SOURCE, REPOSITORY_SOURCE, AUTO_DEVOPS_SOURCE, WEBIDE_SOURCE, REMOTE_SOURCE, EXTERNAL_PROJECT_SOURCE, BRIDGE_SOURCE, PARAMETER_SOURCE, COMPLIANCE_SOURCE)"
            },
            {
              "name": "coverage",
              "description": "Coverage percentage."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of the pipeline's creation."
            },
            {
              "name": "dastProfile",
              "description": "DAST profile associated with the pipeline."
            },
            {
              "name": "detailedStatus",
              "description": "Detailed status of the pipeline."
            },
            {
              "name": "downstream",
              "description": "Pipelines this pipeline will trigger."
            },
            {
              "name": "duration",
              "description": "Duration of the pipeline in seconds."
            },
            {
              "name": "finishedAt",
              "description": "Timestamp of the pipeline's completion."
            },
            {
              "name": "id",
              "description": "ID of the pipeline."
            },
            {
              "name": "iid",
              "description": "Internal ID of the pipeline."
            },
            {
              "name": "job",
              "description": "Specific job in this pipeline, either by name or ID."
            },
            {
              "name": "jobArtifacts",
              "description": "Job artifacts of the pipeline."
            },
            {
              "name": "jobs",
              "description": "Jobs belonging to the pipeline."
            },
            {
              "name": "mergeRequestEventType",
              "description": "Event type of the pipeline associated with a merge request."
            },
            {
              "name": "path",
              "description": "Relative path to the pipeline's page."
            },
            {
              "name": "project",
              "description": "Project the pipeline belongs to."
            },
            {
              "name": "queuedDuration",
              "description": "How long the pipeline was queued before starting."
            },
            {
              "name": "ref",
              "description": "Reference to the branch from which the pipeline was triggered."
            },
            {
              "name": "refPath",
              "description": "Reference path to the branch from which the pipeline was triggered."
            },
            {
              "name": "retryable",
              "description": "Specifies if a pipeline can be retried."
            },
            {
              "name": "securityReportFinding",
              "description": "Vulnerability finding reported on the pipeline."
            },
            {
              "name": "securityReportFindings",
              "description": "Vulnerability findings reported on the pipeline."
            },
            {
              "name": "securityReportSummary",
              "description": "Vulnerability and scanned resource counts for each security scanner of the pipeline."
            },
            {
              "name": "sha",
              "description": "SHA of the pipeline's commit."
            },
            {
              "name": "sourceJob",
              "description": "Job where pipeline was triggered from."
            },
            {
              "name": "stages",
              "description": "Stages of the pipeline."
            },
            {
              "name": "startedAt",
              "description": "Timestamp when the pipeline was started."
            },
            {
              "name": "status",
              "description": "Status of the pipeline (CREATED, WAITING_FOR_RESOURCE, PREPARING, PENDING, RUNNING, FAILED, SUCCESS, CANCELED, SKIPPED, MANUAL, SCHEDULED)"
            },
            {
              "name": "testReportSummary",
              "description": "Summary of the test report generated by the pipeline."
            },
            {
              "name": "testSuite",
              "description": "A specific test suite in a pipeline test report."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of the pipeline's last activity."
            },
            {
              "name": "upstream",
              "description": "Pipeline that triggered the pipeline."
            },
            {
              "name": "user",
              "description": "Pipeline user."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "usesNeeds",
              "description": "Indicates if the pipeline has jobs with `needs` dependencies."
            },
            {
              "name": "warningMessages",
              "description": "Pipeline warning messages."
            },
            {
              "name": "warnings",
              "description": "Indicates if a pipeline has warnings."
            }
          ]
        },
        {
          "name": "PipelineAnalytics",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "monthPipelinesLabels",
              "description": "Labels for the monthly pipeline count."
            },
            {
              "name": "monthPipelinesSuccessful",
              "description": "Total monthly successful pipeline count."
            },
            {
              "name": "monthPipelinesTotals",
              "description": "Total monthly pipeline count."
            },
            {
              "name": "pipelineTimesLabels",
              "description": "Pipeline times labels."
            },
            {
              "name": "pipelineTimesValues",
              "description": "Pipeline times."
            },
            {
              "name": "weekPipelinesLabels",
              "description": "Labels for the weekly pipeline count."
            },
            {
              "name": "weekPipelinesSuccessful",
              "description": "Total weekly successful pipeline count."
            },
            {
              "name": "weekPipelinesTotals",
              "description": "Total weekly pipeline count."
            },
            {
              "name": "yearPipelinesLabels",
              "description": "Labels for the yearly pipeline count."
            },
            {
              "name": "yearPipelinesSuccessful",
              "description": "Total yearly successful pipeline count."
            },
            {
              "name": "yearPipelinesTotals",
              "description": "Total yearly pipeline count."
            }
          ]
        },
        {
          "name": "PipelineArtifactRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo sync and verification state of a pipeline artifact",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the PipelineArtifactRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the PipelineArtifactRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the PipelineArtifactRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the PipelineArtifactRegistry"
            },
            {
              "name": "pipelineArtifactId",
              "description": "ID of the pipeline artifact."
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the PipelineArtifactRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the PipelineArtifactRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the PipelineArtifactRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the PipelineArtifactRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the PipelineArtifactRegistry"
            }
          ]
        },
        {
          "name": "PipelineArtifactRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for PipelineArtifactRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PipelineArtifactRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PipelineCancelInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineCancel",
          "fields": null
        },
        {
          "name": "PipelineCancelPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineCancel",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "PipelineConfigSourceEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PipelineConnection",
          "kind": "OBJECT",
          "description": "The connection type for Pipeline.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PipelineCounts",
          "kind": "OBJECT",
          "description": "Represents pipeline counts for the project",
          "fields": [
            {
              "name": "all",
              "description": "Total number of pipelines for the project."
            },
            {
              "name": "finished",
              "description": "Number of pipelines with scope FINISHED for the project"
            },
            {
              "name": "pending",
              "description": "Number of pipelines with scope PENDING for the project"
            },
            {
              "name": "running",
              "description": "Number of pipelines with scope RUNNING for the project"
            }
          ]
        },
        {
          "name": "PipelineDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineDestroy",
          "fields": null
        },
        {
          "name": "PipelineDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "PipelineEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PipelineMergeRequestEventType",
          "kind": "ENUM",
          "description": "Event type of the pipeline associated with a merge request",
          "fields": null
        },
        {
          "name": "PipelineMessage",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "content",
              "description": "Content of the pipeline message."
            },
            {
              "name": "id",
              "description": "ID of the pipeline message."
            }
          ]
        },
        {
          "name": "PipelinePermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "adminPipeline",
              "description": "Indicates the user can perform `admin_pipeline` on this resource"
            },
            {
              "name": "destroyPipeline",
              "description": "Indicates the user can perform `destroy_pipeline` on this resource"
            },
            {
              "name": "updatePipeline",
              "description": "Indicates the user can perform `update_pipeline` on this resource"
            }
          ]
        },
        {
          "name": "PipelineRetryInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineRetry",
          "fields": null
        },
        {
          "name": "PipelineRetryPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineRetry",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipeline",
              "description": "Pipeline after mutation."
            }
          ]
        },
        {
          "name": "PipelineSchedule",
          "kind": "OBJECT",
          "description": "Represents a pipeline schedule",
          "fields": [
            {
              "name": "active",
              "description": "Indicates if the pipeline schedule is active."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the pipeline schedule was created."
            },
            {
              "name": "cron",
              "description": "Cron notation for the schedule."
            },
            {
              "name": "cronTimezone",
              "description": "Timezone for the pipeline schedule."
            },
            {
              "name": "description",
              "description": "Description of the pipeline schedule."
            },
            {
              "name": "editPath",
              "description": "Edit path of the pipeline schedule."
            },
            {
              "name": "forTag",
              "description": "Indicates if a pipelines schedule belongs to a tag."
            },
            {
              "name": "id",
              "description": "ID of the pipeline schedule."
            },
            {
              "name": "lastPipeline",
              "description": "Last pipeline object."
            },
            {
              "name": "nextRunAt",
              "description": "Time when the next pipeline will run."
            },
            {
              "name": "owner",
              "description": "Owner of the pipeline schedule."
            },
            {
              "name": "project",
              "description": "Project of the pipeline schedule."
            },
            {
              "name": "realNextRun",
              "description": "Time when the next pipeline will run."
            },
            {
              "name": "ref",
              "description": "Ref of the pipeline schedule."
            },
            {
              "name": "refForDisplay",
              "description": "Git ref for the pipeline schedule."
            },
            {
              "name": "refPath",
              "description": "Path to the ref that triggered the pipeline."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the pipeline schedule was last updated."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "variables",
              "description": "Pipeline schedule variables."
            }
          ]
        },
        {
          "name": "PipelineScheduleConnection",
          "kind": "OBJECT",
          "description": "The connection type for PipelineSchedule.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PipelineScheduleCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineScheduleCreate",
          "fields": null
        },
        {
          "name": "PipelineScheduleCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineScheduleCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineSchedule",
              "description": "Created pipeline schedule."
            }
          ]
        },
        {
          "name": "PipelineScheduleDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineScheduleDelete",
          "fields": null
        },
        {
          "name": "PipelineScheduleDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineScheduleDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "PipelineScheduleEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PipelineSchedulePermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "adminPipelineSchedule",
              "description": "Indicates the user can perform `admin_pipeline_schedule` on this resource"
            },
            {
              "name": "playPipelineSchedule",
              "description": "Indicates the user can perform `play_pipeline_schedule` on this resource"
            },
            {
              "name": "takeOwnershipPipelineSchedule",
              "description": "Indicates the user can perform `take_ownership_pipeline_schedule` on this resource"
            },
            {
              "name": "updatePipelineSchedule",
              "description": "Indicates the user can perform `update_pipeline_schedule` on this resource"
            }
          ]
        },
        {
          "name": "PipelineSchedulePlayInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineSchedulePlay",
          "fields": null
        },
        {
          "name": "PipelineSchedulePlayPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineSchedulePlay",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineSchedule",
              "description": "Pipeline schedule after mutation."
            }
          ]
        },
        {
          "name": "PipelineScheduleStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PipelineScheduleTakeOwnershipInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineScheduleTakeOwnership",
          "fields": null
        },
        {
          "name": "PipelineScheduleTakeOwnershipPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineScheduleTakeOwnership",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineSchedule",
              "description": "Updated pipeline schedule ownership."
            }
          ]
        },
        {
          "name": "PipelineScheduleUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PipelineScheduleUpdate",
          "fields": null
        },
        {
          "name": "PipelineScheduleUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PipelineScheduleUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "pipelineSchedule",
              "description": "Updated pipeline schedule."
            }
          ]
        },
        {
          "name": "PipelineScheduleVariable",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "ID of the variable."
            },
            {
              "name": "key",
              "description": "Name of the variable."
            },
            {
              "name": "raw",
              "description": "Indicates whether the variable is raw."
            },
            {
              "name": "value",
              "description": "Value of the variable."
            },
            {
              "name": "variableType",
              "description": "Type of the variable."
            }
          ]
        },
        {
          "name": "PipelineScheduleVariableConnection",
          "kind": "OBJECT",
          "description": "The connection type for PipelineScheduleVariable.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PipelineScheduleVariableEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PipelineScheduleVariableInput",
          "kind": "INPUT_OBJECT",
          "description": "Attributes for the pipeline schedule variable.",
          "fields": null
        },
        {
          "name": "PipelineScopeEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PipelineSecurityReportFinding",
          "kind": "OBJECT",
          "description": "Represents vulnerability finding of a security report on the pipeline.",
          "fields": [
            {
              "name": "assets",
              "description": "List of assets associated with the vulnerability."
            },
            {
              "name": "description",
              "description": "Description of the vulnerability finding."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "details",
              "description": "Details of the security finding."
            },
            {
              "name": "dismissalReason",
              "description": "Reason for the dismissal of the security report finding."
            },
            {
              "name": "dismissedAt",
              "description": "Time of the dismissal of the security report finding."
            },
            {
              "name": "dismissedBy",
              "description": "User who dismissed the security report finding."
            },
            {
              "name": "evidence",
              "description": "Evidence for the vulnerability."
            },
            {
              "name": "falsePositive",
              "description": "Indicates whether the vulnerability is a false positive."
            },
            {
              "name": "identifiers",
              "description": "Identifiers of the vulnerability finding."
            },
            {
              "name": "issueLinks",
              "description": "List of issue links related to the vulnerability."
            },
            {
              "name": "links",
              "description": "List of links associated with the vulnerability."
            },
            {
              "name": "location",
              "description": "Location metadata for the vulnerability. Its fields depend on the type of security scan that found the vulnerability."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request that fixes the vulnerability."
            },
            {
              "name": "project",
              "description": "Project on which the vulnerability finding was found."
            },
            {
              "name": "remediations",
              "description": "Remediations of the security report finding."
            },
            {
              "name": "reportType",
              "description": "Type of the security report that found the vulnerability finding."
            },
            {
              "name": "scanner",
              "description": "Scanner metadata for the vulnerability."
            },
            {
              "name": "severity",
              "description": "Severity of the vulnerability finding."
            },
            {
              "name": "solution",
              "description": "Solution for resolving the security report finding."
            },
            {
              "name": "state",
              "description": "Finding status."
            },
            {
              "name": "stateComment",
              "description": "Comment for the state of the security report finding."
            },
            {
              "name": "title",
              "description": "Title of the vulnerability finding."
            },
            {
              "name": "uuid",
              "description": "UUIDv5 digest based on the vulnerability's report type, primary identifier, location, fingerprint, project identifier."
            },
            {
              "name": "vulnerability",
              "description": "Vulnerability related to the security report finding."
            }
          ]
        },
        {
          "name": "PipelineSecurityReportFindingConnection",
          "kind": "OBJECT",
          "description": "The connection type for PipelineSecurityReportFinding.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PipelineSecurityReportFindingEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PipelineStatusEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "PreviewBillableUserChange",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "newBillableUserCount",
              "description": "Total number of billable users after change."
            },
            {
              "name": "seatsInSubscription",
              "description": "Number of seats in subscription."
            },
            {
              "name": "willIncreaseOverage",
              "description": " If the group will have an increased overage after change."
            }
          ]
        },
        {
          "name": "ProductAnalyticsDashboard",
          "kind": "OBJECT",
          "description": "Represents a product analytics dashboard.",
          "fields": [
            {
              "name": "description",
              "description": "Description of the dashboard."
            },
            {
              "name": "panels",
              "description": "Panels shown on the dashboard."
            },
            {
              "name": "title",
              "description": "Title of the dashboard."
            }
          ]
        },
        {
          "name": "ProductAnalyticsDashboardConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProductAnalyticsDashboard.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ProductAnalyticsDashboardEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ProductAnalyticsDashboardPanel",
          "kind": "OBJECT",
          "description": "Represents a product analytics dashboard panel.",
          "fields": [
            {
              "name": "gridAttributes",
              "description": "Description of the position and size of the panel."
            },
            {
              "name": "title",
              "description": "Title of the panel."
            },
            {
              "name": "visualization",
              "description": "Visualization of the panel."
            }
          ]
        },
        {
          "name": "ProductAnalyticsDashboardPanelConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProductAnalyticsDashboardPanel.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ProductAnalyticsDashboardPanelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ProductAnalyticsDashboardVisualization",
          "kind": "OBJECT",
          "description": "Represents a product analytics dashboard visualization.",
          "fields": [
            {
              "name": "data",
              "description": "Data of the visualization."
            },
            {
              "name": "options",
              "description": "Options of the visualization."
            },
            {
              "name": "type",
              "description": "Type of the visualization."
            }
          ]
        },
        {
          "name": "Project",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "actualRepositorySizeLimit",
              "description": "Size limit for the repository in bytes."
            },
            {
              "name": "agentConfigurations",
              "description": "Agent configurations defined by the project"
            },
            {
              "name": "alertManagementAlert",
              "description": "A single Alert Management alert of the project."
            },
            {
              "name": "alertManagementAlertStatusCounts",
              "description": "Counts of alerts by status for the project."
            },
            {
              "name": "alertManagementAlerts",
              "description": "Alert Management alerts of the project."
            },
            {
              "name": "alertManagementHttpIntegrations",
              "description": "HTTP Integrations which can receive alerts for the project."
            },
            {
              "name": "alertManagementIntegrations",
              "description": "Integrations which can receive alerts for the project."
            },
            {
              "name": "alertManagementPayloadFields",
              "description": "Extract alert fields from payload for custom mapping."
            },
            {
              "name": "allowMergeOnSkippedPipeline",
              "description": "If `only_allow_merge_if_pipeline_succeeds` is true, indicates if merge requests of the project can also be merged with skipped jobs."
            },
            {
              "name": "apiFuzzingCiConfiguration",
              "description": "API fuzzing configuration for the project. "
            },
            {
              "name": "archived",
              "description": "Indicates the archived status of the project."
            },
            {
              "name": "autocloseReferencedIssues",
              "description": "Indicates if issues referenced by merge requests and commits within the default branch are closed automatically."
            },
            {
              "name": "avatarUrl",
              "description": "URL to avatar image file of the project."
            },
            {
              "name": "board",
              "description": "A single board of the project."
            },
            {
              "name": "boards",
              "description": "Boards of the project."
            },
            {
              "name": "branchRules",
              "description": "Branch rules configured for the project."
            },
            {
              "name": "ciCdSettings",
              "description": "CI/CD settings for the project."
            },
            {
              "name": "ciConfigPathOrDefault",
              "description": "Path of the CI configuration file."
            },
            {
              "name": "ciJobTokenScope",
              "description": "The CI Job Tokens scope of access."
            },
            {
              "name": "ciTemplate",
              "description": "Find a single CI/CD template by name."
            },
            {
              "name": "ciVariables",
              "description": "List of the project's CI/CD variables."
            },
            {
              "name": "clusterAgent",
              "description": "Find a single cluster agent by name."
            },
            {
              "name": "clusterAgents",
              "description": "Cluster agents associated with the project."
            },
            {
              "name": "codeCoverageSummary",
              "description": "Code coverage summary associated with the project."
            },
            {
              "name": "complianceFrameworks",
              "description": "Compliance frameworks associated with the project."
            },
            {
              "name": "containerExpirationPolicy",
              "description": "Container expiration policy of the project."
            },
            {
              "name": "containerRegistryEnabled",
              "description": "Indicates if Container Registry is enabled for the current user"
            },
            {
              "name": "containerRepositories",
              "description": "Container repositories of the project."
            },
            {
              "name": "containerRepositoriesCount",
              "description": "Number of container repositories in the project."
            },
            {
              "name": "corpuses",
              "description": "Find corpuses of the project."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of the project creation."
            },
            {
              "name": "dastProfile",
              "description": "DAST Profile associated with the project."
            },
            {
              "name": "dastProfiles",
              "description": "DAST Profiles associated with the project."
            },
            {
              "name": "dastScannerProfiles",
              "description": "DAST scanner profiles associated with the project."
            },
            {
              "name": "dastSiteProfile",
              "description": "DAST Site Profile associated with the project."
            },
            {
              "name": "dastSiteProfiles",
              "description": "DAST Site Profiles associated with the project."
            },
            {
              "name": "dastSiteValidations",
              "description": "DAST Site Validations associated with the project."
            },
            {
              "name": "dataTransfer",
              "description": "Data transfer data point for a specific period. This is mocked data under a development feature flag."
            },
            {
              "name": "deployment",
              "description": "Details of the deployment of the project."
            },
            {
              "name": "description",
              "description": "Short description of the project."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "dora",
              "description": "Project's DORA metrics."
            },
            {
              "name": "environment",
              "description": "A single environment of the project."
            },
            {
              "name": "environments",
              "description": "Environments of the project. This field can only be resolved for one project in any single request."
            },
            {
              "name": "forkTargets",
              "description": "Namespaces in which the current user can fork the project into."
            },
            {
              "name": "forksCount",
              "description": "Number of times the project has been forked."
            },
            {
              "name": "fullPath",
              "description": "Full path of the project."
            },
            {
              "name": "gitlabSubscriptionsPreviewBillableUserChange",
              "description": "Preview Billable User Changes"
            },
            {
              "name": "grafanaIntegration",
              "description": "Grafana integration details for the project."
            },
            {
              "name": "group",
              "description": "Group of the project."
            },
            {
              "name": "httpUrlToRepo",
              "description": "URL to connect to the project via HTTPS."
            },
            {
              "name": "id",
              "description": "ID of the project."
            },
            {
              "name": "importStatus",
              "description": "Status of import background job of the project."
            },
            {
              "name": "incidentManagementEscalationPolicies",
              "description": "Incident Management escalation policies of the project."
            },
            {
              "name": "incidentManagementEscalationPolicy",
              "description": "Incident Management escalation policy of the project."
            },
            {
              "name": "incidentManagementOncallSchedules",
              "description": "Incident Management On-call schedules of the project."
            },
            {
              "name": "incidentManagementTimelineEvent",
              "description": "Incident Management Timeline event associated with the incident."
            },
            {
              "name": "incidentManagementTimelineEventTags",
              "description": "Timeline event tags for the project."
            },
            {
              "name": "incidentManagementTimelineEvents",
              "description": "Incident Management Timeline events associated with the incident."
            },
            {
              "name": "issue",
              "description": "A single issue of the project."
            },
            {
              "name": "issueStatusCounts",
              "description": "Counts of issues by status for the project."
            },
            {
              "name": "issues",
              "description": "Issues of the project."
            },
            {
              "name": "issuesEnabled",
              "description": "Indicates if Issues are enabled for the current user"
            },
            {
              "name": "iterationCadences",
              "description": "Find iteration cadences."
            },
            {
              "name": "iterations",
              "description": "Find iterations."
            },
            {
              "name": "jiraImportStatus",
              "description": "Status of Jira import background job of the project."
            },
            {
              "name": "jiraImports",
              "description": "Jira imports into the project."
            },
            {
              "name": "job",
              "description": "One job belonging to the project, selected by ID."
            },
            {
              "name": "jobs",
              "description": "Jobs of a project. This field can only be resolved for one project in any single request."
            },
            {
              "name": "jobsEnabled",
              "description": "Indicates if CI/CD pipeline jobs are enabled for the current user."
            },
            {
              "name": "label",
              "description": "Label available on this project."
            },
            {
              "name": "labels",
              "description": "Labels available on this project."
            },
            {
              "name": "languages",
              "description": "Programming languages used in the project."
            },
            {
              "name": "lastActivityAt",
              "description": "Timestamp of the project last activity."
            },
            {
              "name": "lfsEnabled",
              "description": "Indicates if the project has Large File Storage (LFS) enabled."
            },
            {
              "name": "mergeCommitTemplate",
              "description": "Template used to create merge commit message in merge requests."
            },
            {
              "name": "mergeRequest",
              "description": "A single merge request of the project."
            },
            {
              "name": "mergeRequests",
              "description": "Merge requests of the project."
            },
            {
              "name": "mergeRequestsEnabled",
              "description": "Indicates if Merge Requests are enabled for the current user"
            },
            {
              "name": "mergeRequestsFfOnlyEnabled",
              "description": "Indicates if no merge commits should be created and all merges should instead be fast-forwarded, which means that merging is only allowed if the branch could be fast-forwarded."
            },
            {
              "name": "milestones",
              "description": "Milestones of the project."
            },
            {
              "name": "name",
              "description": "Name of the project (without namespace)."
            },
            {
              "name": "nameWithNamespace",
              "description": "Full name of the project with its namespace."
            },
            {
              "name": "namespace",
              "description": "Namespace of the project."
            },
            {
              "name": "nestedEnvironments",
              "description": "Environments for this project with nested folders, can only be resolved for one project in any single request"
            },
            {
              "name": "onlyAllowMergeIfAllDiscussionsAreResolved",
              "description": "Indicates if merge requests of the project can only be merged when all the discussions are resolved."
            },
            {
              "name": "onlyAllowMergeIfAllStatusChecksPassed",
              "description": "Indicates that merges of merge requests should be blocked unless all status checks have passed."
            },
            {
              "name": "onlyAllowMergeIfPipelineSucceeds",
              "description": "Indicates if merge requests of the project can only be merged with successful jobs."
            },
            {
              "name": "openIssuesCount",
              "description": "Number of open issues for the project."
            },
            {
              "name": "packages",
              "description": "Packages of the project."
            },
            {
              "name": "packagesCleanupPolicy",
              "description": "Packages cleanup policy for the project."
            },
            {
              "name": "path",
              "description": "Path of the project."
            },
            {
              "name": "pathLocks",
              "description": "The project's path locks."
            },
            {
              "name": "pipeline",
              "description": "Build pipeline of the project."
            },
            {
              "name": "pipelineAnalytics",
              "description": "Pipeline analytics."
            },
            {
              "name": "pipelineCounts",
              "description": "Build pipeline counts of the project."
            },
            {
              "name": "pipelineSchedules",
              "description": "Pipeline schedules of the project. This field can only be resolved for one project per request."
            },
            {
              "name": "pipelines",
              "description": "Build pipelines of the project."
            },
            {
              "name": "printingMergeRequestLinkEnabled",
              "description": "Indicates if a link to create or view a merge request should display after a push to Git repositories of the project from the command line."
            },
            {
              "name": "projectMembers",
              "description": "Members of the project."
            },
            {
              "name": "publicJobs",
              "description": "Indicates if there is public access to pipelines and job details of the project, including output logs and artifacts."
            },
            {
              "name": "pushRules",
              "description": "Project's push rules settings."
            },
            {
              "name": "recentIssueBoards",
              "description": "List of recently visited boards of the project. Maximum size is 4."
            },
            {
              "name": "release",
              "description": "A single release of the project."
            },
            {
              "name": "releases",
              "description": "Releases of the project."
            },
            {
              "name": "removeSourceBranchAfterMerge",
              "description": "Indicates if `Delete source branch` option should be enabled by default for all new merge requests of the project."
            },
            {
              "name": "repository",
              "description": "Git repository of the project."
            },
            {
              "name": "repositorySizeExcess",
              "description": "Size of repository that exceeds the limit in bytes."
            },
            {
              "name": "requestAccessEnabled",
              "description": "Indicates if users can request member access to the project."
            },
            {
              "name": "requirement",
              "description": "Find a single requirement."
            },
            {
              "name": "requirementStatesCount",
              "description": "Number of requirements for the project by their state."
            },
            {
              "name": "requirements",
              "description": "Find requirements."
            },
            {
              "name": "runners",
              "description": "Find runners visible to the current user."
            },
            {
              "name": "sastCiConfiguration",
              "description": "SAST CI configuration for the project."
            },
            {
              "name": "scanExecutionPolicies",
              "description": "Scan Execution Policies of the project"
            },
            {
              "name": "scanResultPolicies",
              "description": "Scan Result Policies of the project"
            },
            {
              "name": "securityDashboardPath",
              "description": "Path to project's security dashboard."
            },
            {
              "name": "securityScanners",
              "description": "Information about security analyzers used in the project."
            },
            {
              "name": "securityTrainingProviders",
              "description": "List of security training providers for the project"
            },
            {
              "name": "securityTrainingUrls",
              "description": "Security training URLs for the enabled training providers of the project."
            },
            {
              "name": "sentryDetailedError",
              "description": "Detailed version of a Sentry error on the project."
            },
            {
              "name": "sentryErrors",
              "description": "Paginated collection of Sentry errors on the project."
            },
            {
              "name": "serviceDeskAddress",
              "description": "E-mail address of the Service Desk."
            },
            {
              "name": "serviceDeskEnabled",
              "description": "Indicates if the project has Service Desk enabled."
            },
            {
              "name": "sharedRunnersEnabled",
              "description": "Indicates if shared runners are enabled for the project."
            },
            {
              "name": "snippets",
              "description": "Snippets of the project."
            },
            {
              "name": "snippetsEnabled",
              "description": "Indicates if Snippets are enabled for the current user"
            },
            {
              "name": "squashCommitTemplate",
              "description": "Template used to create squash commit message in merge requests."
            },
            {
              "name": "squashReadOnly",
              "description": "Indicates if `squashReadOnly` is enabled."
            },
            {
              "name": "sshUrlToRepo",
              "description": "URL to connect to the project via SSH."
            },
            {
              "name": "starCount",
              "description": "Number of times the project has been starred."
            },
            {
              "name": "statistics",
              "description": "Statistics of the project."
            },
            {
              "name": "suggestionCommitMessage",
              "description": "Commit message used to apply merge request suggestions."
            },
            {
              "name": "terraformState",
              "description": "Find a single Terraform state by name."
            },
            {
              "name": "terraformStates",
              "description": "Terraform states associated with the project."
            },
            {
              "name": "timelogs",
              "description": "Time logged on issues and merge requests in the project."
            },
            {
              "name": "topics",
              "description": "List of project topics."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "visibility",
              "description": "Visibility of the project."
            },
            {
              "name": "vulnerabilities",
              "description": "Vulnerabilities reported on the project."
            },
            {
              "name": "vulnerabilitiesCountByDay",
              "description": "The historical number of vulnerabilities per day for the project."
            },
            {
              "name": "vulnerabilityImages",
              "description": "Container images reported on the project vulnerabilities."
            },
            {
              "name": "vulnerabilityScanners",
              "description": "Vulnerability scanners reported on the project vulnerabilities."
            },
            {
              "name": "vulnerabilitySeveritiesCount",
              "description": "Counts for each vulnerability severity in the project."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the project."
            },
            {
              "name": "wikiEnabled",
              "description": "Indicates if Wikis are enabled for the current user"
            },
            {
              "name": "workItemTypes",
              "description": "Work item types available to the project."
            }
          ]
        },
        {
          "name": "ProjectCiCdSetting",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "inboundJobTokenScopeEnabled",
              "description": "Indicates CI/CD job tokens generated in other projects have restricted access to this project."
            },
            {
              "name": "jobTokenScopeEnabled",
              "description": "Indicates CI/CD job tokens generated in this project have restricted access to other projects."
            },
            {
              "name": "keepLatestArtifact",
              "description": "Whether to keep the latest builds artifacts."
            },
            {
              "name": "mergePipelinesEnabled",
              "description": "Whether merge pipelines are enabled."
            },
            {
              "name": "mergeTrainsEnabled",
              "description": "Whether merge trains are enabled."
            },
            {
              "name": "optInJwt",
              "description": "When disabled, the JSON Web Token is always available in all jobs in the pipeline."
            },
            {
              "name": "project",
              "description": "Project the CI/CD settings belong to."
            }
          ]
        },
        {
          "name": "ProjectCiCdSettingsUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ProjectCiCdSettingsUpdate",
          "fields": null
        },
        {
          "name": "ProjectCiCdSettingsUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ProjectCiCdSettingsUpdate",
          "fields": [
            {
              "name": "ciCdSettings",
              "description": "CI/CD settings after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ProjectConnection",
          "kind": "OBJECT",
          "description": "The connection type for Project.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ProjectDataTransfer",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "egressNodes",
              "description": "Data nodes."
            },
            {
              "name": "totalEgress",
              "description": "Total egress for that project in that period of time."
            }
          ]
        },
        {
          "name": "ProjectEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ProjectID",
          "kind": "SCALAR",
          "description": "A `ProjectID` is a global ID. It is encoded as a string.\n\nAn example `ProjectID` is: `\"gid://gitlab/Project/1\"`.",
          "fields": null
        },
        {
          "name": "ProjectInitializeProductAnalyticsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ProjectInitializeProductAnalytics",
          "fields": null
        },
        {
          "name": "ProjectInitializeProductAnalyticsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ProjectInitializeProductAnalytics",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "project",
              "description": "Project on which the initialization took place."
            }
          ]
        },
        {
          "name": "ProjectMember",
          "kind": "OBJECT",
          "description": "Represents a Project Membership",
          "fields": [
            {
              "name": "accessLevel",
              "description": "GitLab::Access level."
            },
            {
              "name": "createdAt",
              "description": "Date and time the membership was created."
            },
            {
              "name": "createdBy",
              "description": "User that authorized membership."
            },
            {
              "name": "expiresAt",
              "description": "Date and time the membership expires."
            },
            {
              "name": "id",
              "description": "ID of the member."
            },
            {
              "name": "mergeRequestInteraction",
              "description": "Find a merge request."
            },
            {
              "name": "project",
              "description": "Project that User is a member of."
            },
            {
              "name": "updatedAt",
              "description": "Date and time the membership was last updated."
            },
            {
              "name": "user",
              "description": "User that is associated with the member object."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            }
          ]
        },
        {
          "name": "ProjectMemberConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProjectMember.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ProjectMemberEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ProjectMemberRelation",
          "kind": "ENUM",
          "description": "Project member relation",
          "fields": null
        },
        {
          "name": "ProjectPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "adminOperations",
              "description": "Indicates the user can perform `admin_operations` on this resource"
            },
            {
              "name": "adminPathLocks",
              "description": "Indicates the user can perform `admin_path_locks` on this resource"
            },
            {
              "name": "adminProject",
              "description": "Indicates the user can perform `admin_project` on this resource"
            },
            {
              "name": "adminRemoteMirror",
              "description": "Indicates the user can perform `admin_remote_mirror` on this resource"
            },
            {
              "name": "adminWiki",
              "description": "Indicates the user can perform `admin_wiki` on this resource"
            },
            {
              "name": "archiveProject",
              "description": "Indicates the user can perform `archive_project` on this resource"
            },
            {
              "name": "changeNamespace",
              "description": "Indicates the user can perform `change_namespace` on this resource"
            },
            {
              "name": "changeVisibilityLevel",
              "description": "Indicates the user can perform `change_visibility_level` on this resource"
            },
            {
              "name": "createDeployment",
              "description": "Indicates the user can perform `create_deployment` on this resource"
            },
            {
              "name": "createDesign",
              "description": "Indicates the user can perform `create_design` on this resource"
            },
            {
              "name": "createIssue",
              "description": "Indicates the user can perform `create_issue` on this resource"
            },
            {
              "name": "createLabel",
              "description": "Indicates the user can perform `create_label` on this resource"
            },
            {
              "name": "createMergeRequestFrom",
              "description": "Indicates the user can perform `create_merge_request_from` on this resource"
            },
            {
              "name": "createMergeRequestIn",
              "description": "Indicates the user can perform `create_merge_request_in` on this resource"
            },
            {
              "name": "createPages",
              "description": "Indicates the user can perform `create_pages` on this resource"
            },
            {
              "name": "createPipeline",
              "description": "Indicates the user can perform `create_pipeline` on this resource"
            },
            {
              "name": "createPipelineSchedule",
              "description": "Indicates the user can perform `create_pipeline_schedule` on this resource"
            },
            {
              "name": "createSnippet",
              "description": "Indicates the user can perform `create_snippet` on this resource"
            },
            {
              "name": "createWiki",
              "description": "Indicates the user can perform `create_wiki` on this resource"
            },
            {
              "name": "destroyDesign",
              "description": "Indicates the user can perform `destroy_design` on this resource"
            },
            {
              "name": "destroyPages",
              "description": "Indicates the user can perform `destroy_pages` on this resource"
            },
            {
              "name": "destroyWiki",
              "description": "Indicates the user can perform `destroy_wiki` on this resource"
            },
            {
              "name": "downloadCode",
              "description": "Indicates the user can perform `download_code` on this resource"
            },
            {
              "name": "downloadWikiCode",
              "description": "Indicates the user can perform `download_wiki_code` on this resource"
            },
            {
              "name": "forkProject",
              "description": "Indicates the user can perform `fork_project` on this resource"
            },
            {
              "name": "pushCode",
              "description": "Indicates the user can perform `push_code` on this resource"
            },
            {
              "name": "pushToDeleteProtectedBranch",
              "description": "Indicates the user can perform `push_to_delete_protected_branch` on this resource"
            },
            {
              "name": "readCommitStatus",
              "description": "Indicates the user can perform `read_commit_status` on this resource"
            },
            {
              "name": "readCycleAnalytics",
              "description": "Indicates the user can perform `read_cycle_analytics` on this resource"
            },
            {
              "name": "readDesign",
              "description": "Indicates the user can perform `read_design` on this resource"
            },
            {
              "name": "readEnvironment",
              "description": "Indicates the user can perform `read_environment` on this resource"
            },
            {
              "name": "readMergeRequest",
              "description": "Indicates the user can perform `read_merge_request` on this resource"
            },
            {
              "name": "readPagesContent",
              "description": "Indicates the user can perform `read_pages_content` on this resource"
            },
            {
              "name": "readProject",
              "description": "Indicates the user can perform `read_project` on this resource"
            },
            {
              "name": "readProjectMember",
              "description": "Indicates the user can perform `read_project_member` on this resource"
            },
            {
              "name": "readWiki",
              "description": "Indicates the user can perform `read_wiki` on this resource"
            },
            {
              "name": "removeForkProject",
              "description": "Indicates the user can perform `remove_fork_project` on this resource"
            },
            {
              "name": "removePages",
              "description": "Indicates the user can perform `remove_pages` on this resource"
            },
            {
              "name": "removeProject",
              "description": "Indicates the user can perform `remove_project` on this resource"
            },
            {
              "name": "renameProject",
              "description": "Indicates the user can perform `rename_project` on this resource"
            },
            {
              "name": "requestAccess",
              "description": "Indicates the user can perform `request_access` on this resource"
            },
            {
              "name": "updatePages",
              "description": "Indicates the user can perform `update_pages` on this resource"
            },
            {
              "name": "updateWiki",
              "description": "Indicates the user can perform `update_wiki` on this resource"
            },
            {
              "name": "uploadFile",
              "description": "Indicates the user can perform `upload_file` on this resource"
            }
          ]
        },
        {
          "name": "ProjectSecurityPolicySource",
          "kind": "OBJECT",
          "description": "Represents the source of a security policy belonging to a project",
          "fields": [
            {
              "name": "project",
              "description": "Project the policy is associated with."
            }
          ]
        },
        {
          "name": "ProjectSecurityTraining",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "description",
              "description": "Description of the training provider."
            },
            {
              "name": "id",
              "description": "ID of the training provider."
            },
            {
              "name": "isEnabled",
              "description": "Represents whether the provider is enabled or not."
            },
            {
              "name": "isPrimary",
              "description": "Represents whether the provider is set as primary or not."
            },
            {
              "name": "logoUrl",
              "description": "Logo URL of the provider."
            },
            {
              "name": "name",
              "description": "Name of the training provider."
            },
            {
              "name": "url",
              "description": "URL of the provider."
            }
          ]
        },
        {
          "name": "ProjectSetComplianceFrameworkInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ProjectSetComplianceFramework",
          "fields": null
        },
        {
          "name": "ProjectSetComplianceFrameworkPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ProjectSetComplianceFramework",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "project",
              "description": "Project after mutation."
            }
          ]
        },
        {
          "name": "ProjectSetLockedInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ProjectSetLocked",
          "fields": null
        },
        {
          "name": "ProjectSetLockedPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ProjectSetLocked",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "project",
              "description": "Project after mutation."
            }
          ]
        },
        {
          "name": "ProjectStatistics",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "buildArtifactsSize",
              "description": "Build artifacts size of the project in bytes."
            },
            {
              "name": "commitCount",
              "description": "Commit count of the project."
            },
            {
              "name": "containerRegistrySize",
              "description": "Container Registry size of the project in bytes."
            },
            {
              "name": "lfsObjectsSize",
              "description": "Large File Storage (LFS) object size of the project in bytes."
            },
            {
              "name": "packagesSize",
              "description": "Packages size of the project in bytes."
            },
            {
              "name": "pipelineArtifactsSize",
              "description": "CI Pipeline artifacts size in bytes."
            },
            {
              "name": "repositorySize",
              "description": "Repository size of the project in bytes."
            },
            {
              "name": "snippetsSize",
              "description": "Snippets size of the project in bytes."
            },
            {
              "name": "storageSize",
              "description": "Storage size of the project in bytes."
            },
            {
              "name": "uploadsSize",
              "description": "Uploads size of the project in bytes."
            },
            {
              "name": "wikiSize",
              "description": "Wiki size of the project in bytes."
            }
          ]
        },
        {
          "name": "PrometheusAlert",
          "kind": "OBJECT",
          "description": "The alert condition for Prometheus",
          "fields": [
            {
              "name": "humanizedText",
              "description": "Human-readable text of the alert condition."
            },
            {
              "name": "id",
              "description": "ID of the alert condition."
            }
          ]
        },
        {
          "name": "PrometheusIntegrationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PrometheusIntegrationCreate",
          "fields": null
        },
        {
          "name": "PrometheusIntegrationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PrometheusIntegrationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "integration",
              "description": "Newly created integration."
            }
          ]
        },
        {
          "name": "PrometheusIntegrationResetTokenInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PrometheusIntegrationResetToken",
          "fields": null
        },
        {
          "name": "PrometheusIntegrationResetTokenPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PrometheusIntegrationResetToken",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "integration",
              "description": "Newly created integration."
            }
          ]
        },
        {
          "name": "PrometheusIntegrationUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PrometheusIntegrationUpdate",
          "fields": null
        },
        {
          "name": "PrometheusIntegrationUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PrometheusIntegrationUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "integration",
              "description": "Newly created integration."
            }
          ]
        },
        {
          "name": "PromoteToEpicInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of PromoteToEpic",
          "fields": null
        },
        {
          "name": "PromoteToEpicPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of PromoteToEpic",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epic",
              "description": "Epic after issue promotion."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "ProtectedEnvironment",
          "kind": "OBJECT",
          "description": "Protected Environments of the environment.",
          "fields": [
            {
              "name": "approvalRules",
              "description": "Which group, user or role is allowed to approve deployments to the environment."
            },
            {
              "name": "deployAccessLevels",
              "description": "Which group, user or role is allowed to execute deployments to the environment."
            },
            {
              "name": "group",
              "description": "Group details. Present if it's group-level protected environment."
            },
            {
              "name": "name",
              "description": "Name of the environment if it's a project-level protected environment. Tier of the environment if it's a group-level protected environment."
            },
            {
              "name": "project",
              "description": "Project details. Present if it's project-level protected environment."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentApprovalRule",
          "kind": "OBJECT",
          "description": "Which group, user or role is allowed to approve deployments to the environment.",
          "fields": [
            {
              "name": "accessLevel",
              "description": "Role details. Present if it's role specific access control."
            },
            {
              "name": "group",
              "description": "Group details. Present if it's group specific access control."
            },
            {
              "name": "requiredApprovals",
              "description": "Number of required approvals."
            },
            {
              "name": "user",
              "description": "User details. Present if it's user specific access control."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentApprovalRuleConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProtectedEnvironmentApprovalRule.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentApprovalRuleEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentApprovalRuleForSummary",
          "kind": "OBJECT",
          "description": "Which group, user or role is allowed to approve deployments to the environment.",
          "fields": [
            {
              "name": "accessLevel",
              "description": "Role details. Present if it's role specific access control."
            },
            {
              "name": "approvals",
              "description": "Current approvals of the deployment."
            },
            {
              "name": "approvedCount",
              "description": "Approved count."
            },
            {
              "name": "group",
              "description": "Group details. Present if it's group specific access control."
            },
            {
              "name": "pendingApprovalCount",
              "description": "Pending approval count."
            },
            {
              "name": "requiredApprovals",
              "description": "Number of required approvals."
            },
            {
              "name": "status",
              "description": "Status of the approval summary."
            },
            {
              "name": "user",
              "description": "User details. Present if it's user specific access control."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProtectedEnvironment.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentDeployAccessLevel",
          "kind": "OBJECT",
          "description": "Which group, user or role is allowed to execute deployments to the environment.",
          "fields": [
            {
              "name": "accessLevel",
              "description": "Role details. Present if it's role specific access control."
            },
            {
              "name": "group",
              "description": "Group details. Present if it's group specific access control."
            },
            {
              "name": "user",
              "description": "User details. Present if it's user specific access control."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentDeployAccessLevelConnection",
          "kind": "OBJECT",
          "description": "The connection type for ProtectedEnvironmentDeployAccessLevel.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentDeployAccessLevelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ProtectedEnvironmentEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PushAccessLevel",
          "kind": "OBJECT",
          "description": "Defines which user roles, users, or groups can push to a protected branch.",
          "fields": [
            {
              "name": "accessLevel",
              "description": "GitLab::Access level."
            },
            {
              "name": "accessLevelDescription",
              "description": "Human readable representation for this access level."
            },
            {
              "name": "group",
              "description": "Group associated with this access level."
            },
            {
              "name": "user",
              "description": "User associated with this access level."
            }
          ]
        },
        {
          "name": "PushAccessLevelConnection",
          "kind": "OBJECT",
          "description": "The connection type for PushAccessLevel.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "PushAccessLevelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "PushRules",
          "kind": "OBJECT",
          "description": "Represents rules that commit pushes must follow.",
          "fields": [
            {
              "name": "rejectUnsignedCommits",
              "description": "Indicates whether commits not signed through GPG will be rejected."
            }
          ]
        },
        {
          "name": "PypiMetadata",
          "kind": "OBJECT",
          "description": "Pypi metadata",
          "fields": [
            {
              "name": "id",
              "description": "ID of the metadatum."
            },
            {
              "name": "requiredPython",
              "description": "Required Python version of the Pypi package."
            }
          ]
        },
        {
          "name": "Query",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "boardList",
              "description": "Find an issue board list."
            },
            {
              "name": "ciApplicationSettings",
              "description": "CI related settings that apply to the entire instance."
            },
            {
              "name": "ciConfig",
              "description": "Linted and processed contents of a CI config.\nShould not be requested more than once per request.\n"
            },
            {
              "name": "ciMinutesUsage",
              "description": "CI/CD minutes usage data for a namespace."
            },
            {
              "name": "ciVariables",
              "description": "List of the instance's CI/CD variables."
            },
            {
              "name": "containerRepository",
              "description": "Find a container repository."
            },
            {
              "name": "currentLicense",
              "description": "Fields related to the current license."
            },
            {
              "name": "currentUser",
              "description": "Get information about current user."
            },
            {
              "name": "designManagement",
              "description": "Fields related to design management."
            },
            {
              "name": "devopsAdoptionEnabledNamespaces",
              "description": "Get configured DevOps adoption namespaces. **BETA** This endpoint is subject to change without notice."
            },
            {
              "name": "echo",
              "description": "Testing endpoint to validate the API with"
            },
            {
              "name": "epicBoardList",
              "description": null
            },
            {
              "name": "geoNode",
              "description": "Find a Geo node."
            },
            {
              "name": "gitpodEnabled",
              "description": "Whether Gitpod is enabled in application settings."
            },
            {
              "name": "group",
              "description": "Find a group."
            },
            {
              "name": "groups",
              "description": "Find groups."
            },
            {
              "name": "instanceSecurityDashboard",
              "description": "Fields related to Instance Security Dashboard."
            },
            {
              "name": "issue",
              "description": "Find an issue."
            },
            {
              "name": "iteration",
              "description": "Find an iteration."
            },
            {
              "name": "jobs",
              "description": "All jobs on this GitLab instance."
            },
            {
              "name": "licenseHistoryEntries",
              "description": "Fields related to entries in the license history."
            },
            {
              "name": "mergeRequest",
              "description": "Find a merge request."
            },
            {
              "name": "metadata",
              "description": "Metadata about GitLab."
            },
            {
              "name": "milestone",
              "description": "Find a milestone."
            },
            {
              "name": "namespace",
              "description": "Find a namespace."
            },
            {
              "name": "package",
              "description": "Find a package. This field can only be resolved for one query in any single request. Returns `null` if a package has no `default` status."
            },
            {
              "name": "project",
              "description": "Find a project."
            },
            {
              "name": "projects",
              "description": "Find projects visible to the current user."
            },
            {
              "name": "queryComplexity",
              "description": "Information about the complexity of the GraphQL query."
            },
            {
              "name": "runner",
              "description": "Find a runner."
            },
            {
              "name": "runners",
              "description": "Find runners visible to the current user."
            },
            {
              "name": "snippets",
              "description": "Find Snippets visible to the current user."
            },
            {
              "name": "subscriptionFutureEntries",
              "description": "Fields related to entries in future subscriptions."
            },
            {
              "name": "timelogs",
              "description": "Find timelogs visible to the current user."
            },
            {
              "name": "todo",
              "description": "Retrieve a single to-do item"
            },
            {
              "name": "topics",
              "description": "Find project topics."
            },
            {
              "name": "usageTrendsMeasurements",
              "description": "Get statistics on the instance."
            },
            {
              "name": "user",
              "description": "Find a user."
            },
            {
              "name": "users",
              "description": "Find users."
            },
            {
              "name": "vulnerabilities",
              "description": "Vulnerabilities reported on projects on the current user's instance security dashboard."
            },
            {
              "name": "vulnerabilitiesCountByDay",
              "description": "The historical number of vulnerabilities per day for the projects on the current user's instance security dashboard."
            },
            {
              "name": "vulnerability",
              "description": "Find a vulnerability."
            }
          ]
        },
        {
          "name": "QueryComplexity",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "limit",
              "description": "GraphQL query complexity limit."
            },
            {
              "name": "score",
              "description": "GraphQL query complexity score."
            }
          ]
        },
        {
          "name": "RecentFailures",
          "kind": "OBJECT",
          "description": "Recent failure history of a test case.",
          "fields": [
            {
              "name": "baseBranch",
              "description": "Name of the base branch of the project."
            },
            {
              "name": "count",
              "description": "Number of times the test case has failed in the past 14 days."
            }
          ]
        },
        {
          "name": "RegistryState",
          "kind": "ENUM",
          "description": "State of a Geo registry",
          "fields": null
        },
        {
          "name": "Release",
          "kind": "OBJECT",
          "description": "Represents a release",
          "fields": [
            {
              "name": "assets",
              "description": "Assets of the release."
            },
            {
              "name": "author",
              "description": "User that created the release."
            },
            {
              "name": "commit",
              "description": "Commit associated with the release."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the release was created."
            },
            {
              "name": "description",
              "description": "Description (also known as \"release notes\") of the release."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "evidences",
              "description": "Evidence for the release."
            },
            {
              "name": "historicalRelease",
              "description": "Indicates the release is an historical release."
            },
            {
              "name": "id",
              "description": "Global ID of the release."
            },
            {
              "name": "links",
              "description": "Links of the release."
            },
            {
              "name": "milestones",
              "description": "Milestones associated to the release."
            },
            {
              "name": "name",
              "description": "Name of the release."
            },
            {
              "name": "releasedAt",
              "description": "Timestamp of when the release was released."
            },
            {
              "name": "tagName",
              "description": "Name of the tag associated with the release."
            },
            {
              "name": "tagPath",
              "description": "Relative web path to the tag associated with the release."
            },
            {
              "name": "upcomingRelease",
              "description": "Indicates the release is an upcoming release."
            }
          ]
        },
        {
          "name": "ReleaseAssetLink",
          "kind": "OBJECT",
          "description": "Represents an asset link associated with a release",
          "fields": [
            {
              "name": "directAssetPath",
              "description": "Relative path for the direct asset link."
            },
            {
              "name": "directAssetUrl",
              "description": "Direct asset URL of the link."
            },
            {
              "name": "id",
              "description": "ID of the link."
            },
            {
              "name": "linkType",
              "description": "Type of the link: `other`, `runbook`, `image`, `package`; defaults to `other`."
            },
            {
              "name": "name",
              "description": "Name of the link."
            },
            {
              "name": "url",
              "description": "URL of the link."
            }
          ]
        },
        {
          "name": "ReleaseAssetLinkConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReleaseAssetLink.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ReleaseAssetLinkCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReleaseAssetLinkCreate",
          "fields": null
        },
        {
          "name": "ReleaseAssetLinkCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReleaseAssetLinkCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "link",
              "description": "Asset link after mutation."
            }
          ]
        },
        {
          "name": "ReleaseAssetLinkDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReleaseAssetLinkDelete",
          "fields": null
        },
        {
          "name": "ReleaseAssetLinkDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReleaseAssetLinkDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "link",
              "description": "Deleted release asset link."
            }
          ]
        },
        {
          "name": "ReleaseAssetLinkEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ReleaseAssetLinkInput",
          "kind": "INPUT_OBJECT",
          "description": "Fields that are available when modifying a release asset link",
          "fields": null
        },
        {
          "name": "ReleaseAssetLinkType",
          "kind": "ENUM",
          "description": "Type of the link: `other`, `runbook`, `image`, `package`",
          "fields": null
        },
        {
          "name": "ReleaseAssetLinkUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReleaseAssetLinkUpdate",
          "fields": null
        },
        {
          "name": "ReleaseAssetLinkUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReleaseAssetLinkUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "link",
              "description": "Asset link after mutation."
            }
          ]
        },
        {
          "name": "ReleaseAssets",
          "kind": "OBJECT",
          "description": "A container for all assets associated with a release",
          "fields": [
            {
              "name": "count",
              "description": "Number of assets of the release."
            },
            {
              "name": "links",
              "description": "Asset links of the release."
            },
            {
              "name": "sources",
              "description": "Sources of the release."
            }
          ]
        },
        {
          "name": "ReleaseAssetsInput",
          "kind": "INPUT_OBJECT",
          "description": "Fields that are available when modifying release assets",
          "fields": null
        },
        {
          "name": "ReleaseConnection",
          "kind": "OBJECT",
          "description": "The connection type for Release.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ReleaseCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReleaseCreate",
          "fields": null
        },
        {
          "name": "ReleaseCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReleaseCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "release",
              "description": "Release after mutation."
            }
          ]
        },
        {
          "name": "ReleaseDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReleaseDelete",
          "fields": null
        },
        {
          "name": "ReleaseDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReleaseDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "release",
              "description": "Deleted release."
            }
          ]
        },
        {
          "name": "ReleaseEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ReleaseEvidence",
          "kind": "OBJECT",
          "description": "Evidence for a release",
          "fields": [
            {
              "name": "collectedAt",
              "description": "Timestamp when the evidence was collected."
            },
            {
              "name": "filepath",
              "description": "URL from where the evidence can be downloaded."
            },
            {
              "name": "id",
              "description": "ID of the evidence."
            },
            {
              "name": "sha",
              "description": "SHA1 ID of the evidence hash."
            }
          ]
        },
        {
          "name": "ReleaseEvidenceConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReleaseEvidence.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ReleaseEvidenceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ReleaseID",
          "kind": "SCALAR",
          "description": "A `ReleaseID` is a global ID. It is encoded as a string.\n\nAn example `ReleaseID` is: `\"gid://gitlab/Release/1\"`.",
          "fields": null
        },
        {
          "name": "ReleaseLinks",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "closedIssuesUrl",
              "description": "HTTP URL of the issues page, filtered by this release and `state=closed`."
            },
            {
              "name": "closedMergeRequestsUrl",
              "description": "HTTP URL of the merge request page , filtered by this release and `state=closed`."
            },
            {
              "name": "editUrl",
              "description": "HTTP URL of the release's edit page."
            },
            {
              "name": "mergedMergeRequestsUrl",
              "description": "HTTP URL of the merge request page , filtered by this release and `state=merged`."
            },
            {
              "name": "openedIssuesUrl",
              "description": "HTTP URL of the issues page, filtered by this release and `state=open`."
            },
            {
              "name": "openedMergeRequestsUrl",
              "description": "HTTP URL of the merge request page, filtered by this release and `state=open`."
            },
            {
              "name": "selfUrl",
              "description": "HTTP URL of the release."
            }
          ]
        },
        {
          "name": "ReleaseSort",
          "kind": "ENUM",
          "description": "Values for sorting releases",
          "fields": null
        },
        {
          "name": "ReleaseSource",
          "kind": "OBJECT",
          "description": "Represents the source code attached to a release in a particular format",
          "fields": [
            {
              "name": "format",
              "description": "Format of the source."
            },
            {
              "name": "url",
              "description": "Download URL of the source."
            }
          ]
        },
        {
          "name": "ReleaseSourceConnection",
          "kind": "OBJECT",
          "description": "The connection type for ReleaseSource.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ReleaseSourceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ReleaseTagWildcardId",
          "kind": "ENUM",
          "description": "Release tag ID wildcard values",
          "fields": null
        },
        {
          "name": "ReleaseUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ReleaseUpdate",
          "fields": null
        },
        {
          "name": "ReleaseUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ReleaseUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "release",
              "description": "Release after mutation."
            }
          ]
        },
        {
          "name": "ReleasesLinkID",
          "kind": "SCALAR",
          "description": "A `ReleasesLinkID` is a global ID. It is encoded as a string.\n\nAn example `ReleasesLinkID` is: `\"gid://gitlab/Releases::Link/1\"`.",
          "fields": null
        },
        {
          "name": "RemoveProjectFromSecurityDashboardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RemoveProjectFromSecurityDashboard",
          "fields": null
        },
        {
          "name": "RemoveProjectFromSecurityDashboardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RemoveProjectFromSecurityDashboard",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ReplicationStateEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "RepositionImageDiffNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RepositionImageDiffNote",
          "fields": null
        },
        {
          "name": "RepositionImageDiffNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RepositionImageDiffNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "note",
              "description": "Note after mutation."
            }
          ]
        },
        {
          "name": "Repository",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "blobs",
              "description": "Blobs contained within the repository"
            },
            {
              "name": "branchNames",
              "description": "Names of branches available in this repository that match the search pattern."
            },
            {
              "name": "diskPath",
              "description": "Shows a disk path of the repository."
            },
            {
              "name": "empty",
              "description": "Indicates repository has no visible content."
            },
            {
              "name": "exists",
              "description": "Indicates a corresponding Git repository exists on disk."
            },
            {
              "name": "paginatedTree",
              "description": "Paginated tree of the repository."
            },
            {
              "name": "rootRef",
              "description": "Default branch of the repository."
            },
            {
              "name": "tree",
              "description": "Tree of the repository."
            }
          ]
        },
        {
          "name": "RepositoryBlob",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "archived",
              "description": "Whether the current project is archived."
            },
            {
              "name": "blamePath",
              "description": "Web path to blob blame page."
            },
            {
              "name": "canCurrentUserPushToBranch",
              "description": "Whether the current user can push to the branch."
            },
            {
              "name": "canModifyBlob",
              "description": "Whether the current user can modify the blob."
            },
            {
              "name": "codeNavigationPath",
              "description": "Web path for code navigation."
            },
            {
              "name": "codeOwners",
              "description": "List of code owners for the blob."
            },
            {
              "name": "editBlobPath",
              "description": "Web path to edit the blob in the old-style editor."
            },
            {
              "name": "environmentExternalUrlForRouteMap",
              "description": "Web path to blob on an environment."
            },
            {
              "name": "environmentFormattedExternalUrl",
              "description": "Environment on which the blob is available."
            },
            {
              "name": "externalStorage",
              "description": "External storage being used, if enabled (for instance, 'LFS')."
            },
            {
              "name": "externalStorageUrl",
              "description": "Web path to download the raw blob via external storage, if enabled."
            },
            {
              "name": "fileType",
              "description": "Expected format of the blob based on the extension."
            },
            {
              "name": "findFilePath",
              "description": "Web path to find file."
            },
            {
              "name": "forkAndEditPath",
              "description": "Web path to edit this blob using a forked project."
            },
            {
              "name": "forkAndViewPath",
              "description": "Web path to view this blob using a forked project."
            },
            {
              "name": "gitpodBlobUrl",
              "description": "URL to the blob within Gitpod."
            },
            {
              "name": "historyPath",
              "description": "Web path to blob history page."
            },
            {
              "name": "id",
              "description": "ID of the blob."
            },
            {
              "name": "ideEditPath",
              "description": "Web path to edit this blob in the Web IDE."
            },
            {
              "name": "ideForkAndEditPath",
              "description": "Web path to edit this blob in the Web IDE using a forked project."
            },
            {
              "name": "language",
              "description": "Blob language."
            },
            {
              "name": "lfsOid",
              "description": "LFS OID of the blob."
            },
            {
              "name": "mode",
              "description": "Blob mode."
            },
            {
              "name": "name",
              "description": "Blob name."
            },
            {
              "name": "oid",
              "description": "OID of the blob."
            },
            {
              "name": "path",
              "description": "Path of the blob."
            },
            {
              "name": "permalinkPath",
              "description": "Web path to blob permalink."
            },
            {
              "name": "pipelineEditorPath",
              "description": "Web path to edit .gitlab-ci.yml file."
            },
            {
              "name": "plainData",
              "description": "Blob plain highlighted data."
            },
            {
              "name": "projectBlobPathRoot",
              "description": "Web path for the root of the blob."
            },
            {
              "name": "rawBlob",
              "description": "Raw content of the blob."
            },
            {
              "name": "rawPath",
              "description": "Web path to download the raw blob."
            },
            {
              "name": "rawSize",
              "description": "Size (in bytes) of the blob, or the blob target if stored externally."
            },
            {
              "name": "rawTextBlob",
              "description": "Raw content of the blob, if the blob is text data."
            },
            {
              "name": "replacePath",
              "description": "Web path to replace the blob content."
            },
            {
              "name": "richViewer",
              "description": "Blob content rich viewer."
            },
            {
              "name": "simpleViewer",
              "description": "Blob content simple viewer."
            },
            {
              "name": "size",
              "description": "Size (in bytes) of the blob."
            },
            {
              "name": "storedExternally",
              "description": "Whether the blob's content is stored externally (for instance, in LFS)."
            },
            {
              "name": "webPath",
              "description": "Web path of the blob."
            }
          ]
        },
        {
          "name": "RepositoryBlobConnection",
          "kind": "OBJECT",
          "description": "The connection type for RepositoryBlob.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "RepositoryBlobEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "RepositoryLanguage",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "color",
              "description": "Color to visualize the repository language."
            },
            {
              "name": "name",
              "description": "Name of the repository language."
            },
            {
              "name": "share",
              "description": "Percentage of the repository's languages."
            }
          ]
        },
        {
          "name": "Requirement",
          "kind": "OBJECT",
          "description": "Represents a requirement",
          "fields": [
            {
              "name": "author",
              "description": "Author of the requirement."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the requirement was created."
            },
            {
              "name": "description",
              "description": "Description of the requirement."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`."
            },
            {
              "name": "id",
              "description": "ID of the requirement."
            },
            {
              "name": "lastTestReportManuallyCreated",
              "description": "Indicates if latest test report was created by user."
            },
            {
              "name": "lastTestReportState",
              "description": "Latest requirement test report state."
            },
            {
              "name": "project",
              "description": "Project to which the requirement belongs."
            },
            {
              "name": "state",
              "description": "State of the requirement."
            },
            {
              "name": "testReports",
              "description": "Test reports of the requirement."
            },
            {
              "name": "title",
              "description": "Title of the requirement."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the requirement was last updated."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "workItemIid",
              "description": "Work item IID of the requirement, will replace current IID as identifier soon."
            }
          ]
        },
        {
          "name": "RequirementConnection",
          "kind": "OBJECT",
          "description": "The connection type for Requirement.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "RequirementEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "RequirementLegacyFilterInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "RequirementPermissions",
          "kind": "OBJECT",
          "description": "Check permissions for the current user on a requirement",
          "fields": [
            {
              "name": "adminRequirement",
              "description": "Indicates the user can perform `admin_requirement` on this resource"
            },
            {
              "name": "createRequirement",
              "description": "Indicates the user can perform `create_requirement` on this resource"
            },
            {
              "name": "destroyRequirement",
              "description": "Indicates the user can perform `destroy_requirement` on this resource"
            },
            {
              "name": "readRequirement",
              "description": "Indicates the user can perform `read_requirement` on this resource"
            },
            {
              "name": "updateRequirement",
              "description": "Indicates the user can perform `update_requirement` on this resource"
            }
          ]
        },
        {
          "name": "RequirementState",
          "kind": "ENUM",
          "description": "State of a requirement",
          "fields": null
        },
        {
          "name": "RequirementStatesCount",
          "kind": "OBJECT",
          "description": "Counts of requirements by their state",
          "fields": [
            {
              "name": "archived",
              "description": "Number of archived requirements."
            },
            {
              "name": "opened",
              "description": "Number of opened requirements."
            }
          ]
        },
        {
          "name": "RequirementStatusFilter",
          "kind": "ENUM",
          "description": "Status of a requirement based on last test report",
          "fields": null
        },
        {
          "name": "ResolvableInterface",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "resolvable",
              "description": "Indicates if the object can be resolved."
            },
            {
              "name": "resolved",
              "description": "Indicates if the object is resolved."
            },
            {
              "name": "resolvedAt",
              "description": "Timestamp of when the object was resolved."
            },
            {
              "name": "resolvedBy",
              "description": "User who resolved the object."
            }
          ]
        },
        {
          "name": "RootStorageStatistics",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "buildArtifactsSize",
              "description": "CI artifacts size in bytes."
            },
            {
              "name": "containerRegistrySize",
              "description": "Container Registry size in bytes."
            },
            {
              "name": "dependencyProxySize",
              "description": "Dependency Proxy sizes in bytes."
            },
            {
              "name": "lfsObjectsSize",
              "description": "LFS objects size in bytes."
            },
            {
              "name": "packagesSize",
              "description": "Packages size in bytes."
            },
            {
              "name": "pipelineArtifactsSize",
              "description": "CI pipeline artifacts size in bytes."
            },
            {
              "name": "repositorySize",
              "description": "Git repository size in bytes."
            },
            {
              "name": "snippetsSize",
              "description": "Snippets size in bytes."
            },
            {
              "name": "storageSize",
              "description": "Total storage in bytes."
            },
            {
              "name": "uploadsSize",
              "description": "Uploads size in bytes."
            },
            {
              "name": "wikiSize",
              "description": "Wiki size in bytes."
            }
          ]
        },
        {
          "name": "RunnerArchitecture",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "downloadLocation",
              "description": "Download location for the runner for the platform architecture."
            },
            {
              "name": "name",
              "description": "Name of the runner platform architecture."
            }
          ]
        },
        {
          "name": "RunnerArchitectureConnection",
          "kind": "OBJECT",
          "description": "The connection type for RunnerArchitecture.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "RunnerArchitectureEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "RunnerDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RunnerDelete",
          "fields": null
        },
        {
          "name": "RunnerDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RunnerDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "RunnerPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "assignRunner",
              "description": "Indicates the user can perform `assign_runner` on this resource"
            },
            {
              "name": "deleteRunner",
              "description": "Indicates the user can perform `delete_runner` on this resource"
            },
            {
              "name": "readRunner",
              "description": "Indicates the user can perform `read_runner` on this resource"
            },
            {
              "name": "updateRunner",
              "description": "Indicates the user can perform `update_runner` on this resource"
            }
          ]
        },
        {
          "name": "RunnerPlatform",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "architectures",
              "description": "Runner architectures supported for the platform."
            },
            {
              "name": "humanReadableName",
              "description": "Human readable name of the runner platform."
            },
            {
              "name": "name",
              "description": "Name slug of the runner platform."
            }
          ]
        },
        {
          "name": "RunnerPlatformConnection",
          "kind": "OBJECT",
          "description": "The connection type for RunnerPlatform.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "RunnerPlatformEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "RunnerSetup",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "installInstructions",
              "description": "Instructions for installing the runner on the specified architecture."
            },
            {
              "name": "registerInstructions",
              "description": "Instructions for registering the runner. The actual registration tokens are not included in the commands. Instead, a placeholder `$REGISTRATION_TOKEN` is shown."
            }
          ]
        },
        {
          "name": "RunnerUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RunnerUpdate",
          "fields": null
        },
        {
          "name": "RunnerUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RunnerUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "runner",
              "description": "Runner after mutation."
            }
          ]
        },
        {
          "name": "RunnersRegistrationTokenResetInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of RunnersRegistrationTokenReset",
          "fields": null
        },
        {
          "name": "RunnersRegistrationTokenResetPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of RunnersRegistrationTokenReset",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "token",
              "description": "Runner token after mutation."
            }
          ]
        },
        {
          "name": "SastCiConfiguration",
          "kind": "OBJECT",
          "description": "Represents a CI configuration of SAST",
          "fields": [
            {
              "name": "analyzers",
              "description": "List of analyzers entities attached to SAST configuration."
            },
            {
              "name": "global",
              "description": "List of global entities related to SAST configuration."
            },
            {
              "name": "pipeline",
              "description": "List of pipeline entities related to SAST configuration."
            }
          ]
        },
        {
          "name": "SastCiConfigurationAnalyzersEntity",
          "kind": "OBJECT",
          "description": "Represents an analyzer entity in SAST CI configuration",
          "fields": [
            {
              "name": "description",
              "description": "Analyzer description that is displayed on the form."
            },
            {
              "name": "enabled",
              "description": "Indicates whether an analyzer is enabled."
            },
            {
              "name": "label",
              "description": "Analyzer label used in the config UI."
            },
            {
              "name": "name",
              "description": "Name of the analyzer."
            },
            {
              "name": "variables",
              "description": "List of supported variables."
            }
          ]
        },
        {
          "name": "SastCiConfigurationAnalyzersEntityConnection",
          "kind": "OBJECT",
          "description": "The connection type for SastCiConfigurationAnalyzersEntity.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SastCiConfigurationAnalyzersEntityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SastCiConfigurationAnalyzersEntityInput",
          "kind": "INPUT_OBJECT",
          "description": "Represents the analyzers entity in SAST CI configuration",
          "fields": null
        },
        {
          "name": "SastCiConfigurationEntity",
          "kind": "OBJECT",
          "description": "Represents an entity in SAST CI configuration",
          "fields": [
            {
              "name": "defaultValue",
              "description": "Default value that is used if value is empty."
            },
            {
              "name": "description",
              "description": "Entity description that is displayed on the form."
            },
            {
              "name": "field",
              "description": "CI keyword of entity."
            },
            {
              "name": "label",
              "description": "Label for entity used in the form."
            },
            {
              "name": "options",
              "description": "Different possible values of the field."
            },
            {
              "name": "size",
              "description": "Size of the UI component."
            },
            {
              "name": "type",
              "description": "Type of the field value."
            },
            {
              "name": "value",
              "description": "Current value of the entity."
            }
          ]
        },
        {
          "name": "SastCiConfigurationEntityConnection",
          "kind": "OBJECT",
          "description": "The connection type for SastCiConfigurationEntity.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SastCiConfigurationEntityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SastCiConfigurationEntityInput",
          "kind": "INPUT_OBJECT",
          "description": "Represents an entity in SAST CI configuration",
          "fields": null
        },
        {
          "name": "SastCiConfigurationInput",
          "kind": "INPUT_OBJECT",
          "description": "Represents a CI configuration of SAST",
          "fields": null
        },
        {
          "name": "SastCiConfigurationOptionsEntity",
          "kind": "OBJECT",
          "description": "Represents an entity for options in SAST CI configuration",
          "fields": [
            {
              "name": "label",
              "description": "Label of option entity."
            },
            {
              "name": "value",
              "description": "Value of option entity."
            }
          ]
        },
        {
          "name": "SastCiConfigurationOptionsEntityConnection",
          "kind": "OBJECT",
          "description": "The connection type for SastCiConfigurationOptionsEntity.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SastCiConfigurationOptionsEntityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SastUiComponentSize",
          "kind": "ENUM",
          "description": "Size of UI component in SAST configuration page",
          "fields": null
        },
        {
          "name": "SavedReply",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "content",
              "description": "Content of the saved reply."
            },
            {
              "name": "id",
              "description": "Global ID of the saved reply."
            },
            {
              "name": "name",
              "description": "Name of the saved reply."
            }
          ]
        },
        {
          "name": "SavedReplyConnection",
          "kind": "OBJECT",
          "description": "The connection type for SavedReply.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SavedReplyCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SavedReplyCreate",
          "fields": null
        },
        {
          "name": "SavedReplyCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SavedReplyCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "savedReply",
              "description": "Saved reply after mutation."
            }
          ]
        },
        {
          "name": "SavedReplyDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SavedReplyDestroy",
          "fields": null
        },
        {
          "name": "SavedReplyDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SavedReplyDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "savedReply",
              "description": "Saved reply after mutation."
            }
          ]
        },
        {
          "name": "SavedReplyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SavedReplyUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SavedReplyUpdate",
          "fields": null
        },
        {
          "name": "SavedReplyUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SavedReplyUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "savedReply",
              "description": "Saved reply after mutation."
            }
          ]
        },
        {
          "name": "Scan",
          "kind": "OBJECT",
          "description": "Represents the security scan information",
          "fields": [
            {
              "name": "errors",
              "description": "List of errors."
            },
            {
              "name": "name",
              "description": "Name of the scan."
            },
            {
              "name": "status",
              "description": "Indicates the status of the scan."
            },
            {
              "name": "warnings",
              "description": "List of warnings."
            }
          ]
        },
        {
          "name": "ScanConnection",
          "kind": "OBJECT",
          "description": "The connection type for Scan.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ScanEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ScanExecutionPolicy",
          "kind": "OBJECT",
          "description": "Represents the scan execution policy",
          "fields": [
            {
              "name": "description",
              "description": "Description of the policy."
            },
            {
              "name": "enabled",
              "description": "Indicates whether this policy is enabled."
            },
            {
              "name": "name",
              "description": "Name of the policy."
            },
            {
              "name": "source",
              "description": "Source of the policy. Its fields depend on the source type."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the policy YAML was last updated."
            },
            {
              "name": "yaml",
              "description": "YAML definition of the policy."
            }
          ]
        },
        {
          "name": "ScanExecutionPolicyCommitInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of ScanExecutionPolicyCommit",
          "fields": null
        },
        {
          "name": "ScanExecutionPolicyCommitPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of ScanExecutionPolicyCommit",
          "fields": [
            {
              "name": "branch",
              "description": "Name of the branch to which the policy changes are committed."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "ScanExecutionPolicyConnection",
          "kind": "OBJECT",
          "description": "The connection type for ScanExecutionPolicy.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ScanExecutionPolicyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ScanResultPolicy",
          "kind": "OBJECT",
          "description": "Represents the scan result policy",
          "fields": [
            {
              "name": "description",
              "description": "Description of the policy."
            },
            {
              "name": "enabled",
              "description": "Indicates whether this policy is enabled."
            },
            {
              "name": "groupApprovers",
              "description": "Approvers of the group type."
            },
            {
              "name": "name",
              "description": "Name of the policy."
            },
            {
              "name": "source",
              "description": "Source of the policy. Its fields depend on the source type."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the policy YAML was last updated."
            },
            {
              "name": "userApprovers",
              "description": "Approvers of the user type."
            },
            {
              "name": "yaml",
              "description": "YAML definition of the policy."
            }
          ]
        },
        {
          "name": "ScanResultPolicyConnection",
          "kind": "OBJECT",
          "description": "The connection type for ScanResultPolicy.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ScanResultPolicyEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ScanStatus",
          "kind": "ENUM",
          "description": "The status of the security scan",
          "fields": null
        },
        {
          "name": "ScannedResource",
          "kind": "OBJECT",
          "description": "Represents a resource scanned by a security scan",
          "fields": [
            {
              "name": "requestMethod",
              "description": "HTTP request method used to access the URL."
            },
            {
              "name": "url",
              "description": "URL scanned by the scanner."
            }
          ]
        },
        {
          "name": "ScannedResourceConnection",
          "kind": "OBJECT",
          "description": "The connection type for ScannedResource.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ScannedResourceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SecurityFindingCreateIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SecurityFindingCreateIssue",
          "fields": null
        },
        {
          "name": "SecurityFindingCreateIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SecurityFindingCreateIssue",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue created after mutation."
            }
          ]
        },
        {
          "name": "SecurityFindingDismissInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SecurityFindingDismiss",
          "fields": null
        },
        {
          "name": "SecurityFindingDismissPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SecurityFindingDismiss",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "uuid",
              "description": "UUID of dismissed finding."
            }
          ]
        },
        {
          "name": "SecurityFindingRevertToDetectedInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SecurityFindingRevertToDetected",
          "fields": null
        },
        {
          "name": "SecurityFindingRevertToDetectedPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SecurityFindingRevertToDetected",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "securityFinding",
              "description": "Finding reverted to detected."
            }
          ]
        },
        {
          "name": "SecurityPolicyProjectAssignInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SecurityPolicyProjectAssign",
          "fields": null
        },
        {
          "name": "SecurityPolicyProjectAssignPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SecurityPolicyProjectAssign",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "SecurityPolicyProjectCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SecurityPolicyProjectCreate",
          "fields": null
        },
        {
          "name": "SecurityPolicyProjectCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SecurityPolicyProjectCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "project",
              "description": "Security Policy Project that was created."
            }
          ]
        },
        {
          "name": "SecurityPolicyProjectUnassignInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SecurityPolicyProjectUnassign",
          "fields": null
        },
        {
          "name": "SecurityPolicyProjectUnassignPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SecurityPolicyProjectUnassign",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "SecurityPolicyRelationType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "SecurityPolicySource",
          "kind": "UNION",
          "description": "Represents a policy source. Its fields depend on the source type.",
          "fields": null
        },
        {
          "name": "SecurityReportSummary",
          "kind": "OBJECT",
          "description": "Represents summary of a security report",
          "fields": [
            {
              "name": "apiFuzzing",
              "description": "Aggregated counts for the `api_fuzzing` scan"
            },
            {
              "name": "clusterImageScanning",
              "description": "Aggregated counts for the `cluster_image_scanning` scan"
            },
            {
              "name": "containerScanning",
              "description": "Aggregated counts for the `container_scanning` scan"
            },
            {
              "name": "coverageFuzzing",
              "description": "Aggregated counts for the `coverage_fuzzing` scan"
            },
            {
              "name": "dast",
              "description": "Aggregated counts for the `dast` scan"
            },
            {
              "name": "dependencyScanning",
              "description": "Aggregated counts for the `dependency_scanning` scan"
            },
            {
              "name": "generic",
              "description": "Aggregated counts for the `generic` scan"
            },
            {
              "name": "sast",
              "description": "Aggregated counts for the `sast` scan"
            },
            {
              "name": "secretDetection",
              "description": "Aggregated counts for the `secret_detection` scan"
            }
          ]
        },
        {
          "name": "SecurityReportSummarySection",
          "kind": "OBJECT",
          "description": "Represents a section of a summary of a security report",
          "fields": [
            {
              "name": "scannedResources",
              "description": "List of the first 20 scanned resources."
            },
            {
              "name": "scannedResourcesCount",
              "description": "Total number of scanned resources."
            },
            {
              "name": "scannedResourcesCsvPath",
              "description": "Path to download all the scanned resources in CSV format."
            },
            {
              "name": "scans",
              "description": "List of security scans ran for the type."
            },
            {
              "name": "vulnerabilitiesCount",
              "description": "Total number of vulnerabilities."
            }
          ]
        },
        {
          "name": "SecurityReportTypeEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "SecurityScannerType",
          "kind": "ENUM",
          "description": "The type of the security scanner",
          "fields": null
        },
        {
          "name": "SecurityScanners",
          "kind": "OBJECT",
          "description": "Represents a list of security scanners",
          "fields": [
            {
              "name": "available",
              "description": "List of analyzers which are available for the project."
            },
            {
              "name": "enabled",
              "description": "List of analyzers which are enabled for the project."
            },
            {
              "name": "pipelineRun",
              "description": "List of analyzers which ran successfully in the latest pipeline."
            }
          ]
        },
        {
          "name": "SecurityTrainingProviderID",
          "kind": "SCALAR",
          "description": "A `SecurityTrainingProviderID` is a global ID. It is encoded as a string.\n\nAn example `SecurityTrainingProviderID` is: `\"gid://gitlab/Security::TrainingProvider/1\"`.",
          "fields": null
        },
        {
          "name": "SecurityTrainingUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of SecurityTrainingUpdate",
          "fields": null
        },
        {
          "name": "SecurityTrainingUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of SecurityTrainingUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "training",
              "description": "Represents the training entity subject to mutation."
            }
          ]
        },
        {
          "name": "SecurityTrainingUrl",
          "kind": "OBJECT",
          "description": "Represents a URL related to a security training",
          "fields": [
            {
              "name": "identifier",
              "description": "Name of the vulnerability identifier."
            },
            {
              "name": "name",
              "description": "Name of the training provider."
            },
            {
              "name": "status",
              "description": "Status of the request to training provider."
            },
            {
              "name": "url",
              "description": "URL of the link for security training content."
            }
          ]
        },
        {
          "name": "SentryDetailedError",
          "kind": "OBJECT",
          "description": "A Sentry error",
          "fields": [
            {
              "name": "count",
              "description": "Count of occurrences."
            },
            {
              "name": "culprit",
              "description": "Culprit of the error."
            },
            {
              "name": "externalBaseUrl",
              "description": "External Base URL of the Sentry Instance."
            },
            {
              "name": "externalUrl",
              "description": "External URL of the error."
            },
            {
              "name": "firstReleaseLastCommit",
              "description": "Commit the error was first seen."
            },
            {
              "name": "firstReleaseShortVersion",
              "description": "Release short version the error was first seen."
            },
            {
              "name": "firstReleaseVersion",
              "description": "Release version the error was first seen."
            },
            {
              "name": "firstSeen",
              "description": "Timestamp when the error was first seen."
            },
            {
              "name": "frequency",
              "description": "Last 24hr stats of the error."
            },
            {
              "name": "gitlabCommit",
              "description": "GitLab commit SHA attributed to the Error based on the release version."
            },
            {
              "name": "gitlabCommitPath",
              "description": "Path to the GitLab page for the GitLab commit attributed to the error."
            },
            {
              "name": "gitlabIssuePath",
              "description": "URL of GitLab Issue."
            },
            {
              "name": "id",
              "description": "ID (global ID) of the error."
            },
            {
              "name": "integrated",
              "description": "Error tracking backend."
            },
            {
              "name": "lastReleaseLastCommit",
              "description": "Commit the error was last seen."
            },
            {
              "name": "lastReleaseShortVersion",
              "description": "Release short version the error was last seen."
            },
            {
              "name": "lastReleaseVersion",
              "description": "Release version the error was last seen."
            },
            {
              "name": "lastSeen",
              "description": "Timestamp when the error was last seen."
            },
            {
              "name": "message",
              "description": "Sentry metadata message of the error."
            },
            {
              "name": "sentryId",
              "description": "ID (Sentry ID) of the error."
            },
            {
              "name": "sentryProjectId",
              "description": "ID of the project (Sentry project)."
            },
            {
              "name": "sentryProjectName",
              "description": "Name of the project affected by the error."
            },
            {
              "name": "sentryProjectSlug",
              "description": "Slug of the project affected by the error."
            },
            {
              "name": "shortId",
              "description": "Short ID (Sentry ID) of the error."
            },
            {
              "name": "status",
              "description": "Status of the error."
            },
            {
              "name": "tags",
              "description": "Tags associated with the Sentry Error."
            },
            {
              "name": "title",
              "description": "Title of the error."
            },
            {
              "name": "type",
              "description": "Type of the error."
            },
            {
              "name": "userCount",
              "description": "Count of users affected by the error."
            }
          ]
        },
        {
          "name": "SentryError",
          "kind": "OBJECT",
          "description": "A Sentry error. A simplified version of SentryDetailedError",
          "fields": [
            {
              "name": "count",
              "description": "Count of occurrences."
            },
            {
              "name": "culprit",
              "description": "Culprit of the error."
            },
            {
              "name": "externalUrl",
              "description": "External URL of the error."
            },
            {
              "name": "firstSeen",
              "description": "Timestamp when the error was first seen."
            },
            {
              "name": "frequency",
              "description": "Last 24hr stats of the error."
            },
            {
              "name": "id",
              "description": "ID (global ID) of the error."
            },
            {
              "name": "lastSeen",
              "description": "Timestamp when the error was last seen."
            },
            {
              "name": "message",
              "description": "Sentry metadata message of the error."
            },
            {
              "name": "sentryId",
              "description": "ID (Sentry ID) of the error."
            },
            {
              "name": "sentryProjectId",
              "description": "ID of the project (Sentry project)."
            },
            {
              "name": "sentryProjectName",
              "description": "Name of the project affected by the error."
            },
            {
              "name": "sentryProjectSlug",
              "description": "Slug of the project affected by the error."
            },
            {
              "name": "shortId",
              "description": "Short ID (Sentry ID) of the error."
            },
            {
              "name": "status",
              "description": "Status of the error."
            },
            {
              "name": "title",
              "description": "Title of the error."
            },
            {
              "name": "type",
              "description": "Type of the error."
            },
            {
              "name": "userCount",
              "description": "Count of users affected by the error."
            }
          ]
        },
        {
          "name": "SentryErrorCollection",
          "kind": "OBJECT",
          "description": "An object containing a collection of Sentry errors, and a detailed error",
          "fields": [
            {
              "name": "detailedError",
              "description": "Detailed version of a Sentry error on the project."
            },
            {
              "name": "errorStackTrace",
              "description": "Stack Trace of Sentry Error."
            },
            {
              "name": "errors",
              "description": "Collection of Sentry Errors."
            },
            {
              "name": "externalUrl",
              "description": "External URL for Sentry."
            }
          ]
        },
        {
          "name": "SentryErrorConnection",
          "kind": "OBJECT",
          "description": "The connection type for SentryError.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SentryErrorEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SentryErrorFrequency",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "count",
              "description": "Count of errors received since the previously recorded time."
            },
            {
              "name": "time",
              "description": "Time the error frequency stats were recorded."
            }
          ]
        },
        {
          "name": "SentryErrorStackTrace",
          "kind": "OBJECT",
          "description": "An object containing a stack trace entry for a Sentry error",
          "fields": [
            {
              "name": "dateReceived",
              "description": "Time the stack trace was received by Sentry."
            },
            {
              "name": "issueId",
              "description": "ID of the Sentry error."
            },
            {
              "name": "stackTraceEntries",
              "description": "Stack trace entries for the Sentry error."
            }
          ]
        },
        {
          "name": "SentryErrorStackTraceContext",
          "kind": "OBJECT",
          "description": "An object context for a Sentry error stack trace",
          "fields": [
            {
              "name": "code",
              "description": "Code number of the context."
            },
            {
              "name": "line",
              "description": "Line number of the context."
            }
          ]
        },
        {
          "name": "SentryErrorStackTraceEntry",
          "kind": "OBJECT",
          "description": "An object containing a stack trace entry for a Sentry error",
          "fields": [
            {
              "name": "col",
              "description": "Function in which the Sentry error occurred."
            },
            {
              "name": "fileName",
              "description": "File in which the Sentry error occurred."
            },
            {
              "name": "function",
              "description": "Function in which the Sentry error occurred."
            },
            {
              "name": "line",
              "description": "Function in which the Sentry error occurred."
            },
            {
              "name": "traceContext",
              "description": "Context of the Sentry error."
            }
          ]
        },
        {
          "name": "SentryErrorStatus",
          "kind": "ENUM",
          "description": "State of a Sentry error",
          "fields": null
        },
        {
          "name": "SentryErrorTags",
          "kind": "OBJECT",
          "description": "State of a Sentry error",
          "fields": [
            {
              "name": "level",
              "description": "Severity level of the Sentry Error."
            },
            {
              "name": "logger",
              "description": "Logger of the Sentry Error."
            }
          ]
        },
        {
          "name": "Service",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "active",
              "description": "Indicates if the service is active."
            },
            {
              "name": "serviceType",
              "description": "Type of the service."
            },
            {
              "name": "type",
              "description": "Class name of the service."
            }
          ]
        },
        {
          "name": "ServiceConnection",
          "kind": "OBJECT",
          "description": "The connection type for Service.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "ServiceEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "ServiceType",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "ShaFormat",
          "kind": "ENUM",
          "description": "How to format SHA strings.",
          "fields": null
        },
        {
          "name": "SharedRunnersSetting",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "Snippet",
          "kind": "OBJECT",
          "description": "Represents a snippet entry",
          "fields": [
            {
              "name": "author",
              "description": "Owner of the snippet."
            },
            {
              "name": "blobs",
              "description": "Snippet blobs."
            },
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "createdAt",
              "description": "Timestamp this snippet was created."
            },
            {
              "name": "description",
              "description": "Description of the snippet."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "fileName",
              "description": "File Name of the snippet."
            },
            {
              "name": "httpUrlToRepo",
              "description": "HTTP URL to the snippet repository."
            },
            {
              "name": "id",
              "description": "ID of the snippet."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "project",
              "description": "Project the snippet is associated with."
            },
            {
              "name": "rawUrl",
              "description": "Raw URL of the snippet."
            },
            {
              "name": "sshUrlToRepo",
              "description": "SSH URL to the snippet repository."
            },
            {
              "name": "title",
              "description": "Title of the snippet."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp this snippet was updated."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "visibilityLevel",
              "description": "Visibility Level of the snippet."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the snippet."
            }
          ]
        },
        {
          "name": "SnippetBlob",
          "kind": "OBJECT",
          "description": "Represents the snippet blob",
          "fields": [
            {
              "name": "binary",
              "description": "Shows whether the blob is binary."
            },
            {
              "name": "externalStorage",
              "description": "Blob external storage."
            },
            {
              "name": "mode",
              "description": "Blob mode."
            },
            {
              "name": "name",
              "description": "Blob name."
            },
            {
              "name": "path",
              "description": "Blob path."
            },
            {
              "name": "plainData",
              "description": "Blob plain highlighted data."
            },
            {
              "name": "rawPath",
              "description": "Blob raw content endpoint path."
            },
            {
              "name": "rawPlainData",
              "description": "Raw content of the blob, if the blob is text data."
            },
            {
              "name": "renderedAsText",
              "description": "Shows whether the blob is rendered as text."
            },
            {
              "name": "richData",
              "description": "Blob highlighted data."
            },
            {
              "name": "richViewer",
              "description": "Blob content rich viewer."
            },
            {
              "name": "simpleViewer",
              "description": "Blob content simple viewer."
            },
            {
              "name": "size",
              "description": "Blob size."
            }
          ]
        },
        {
          "name": "SnippetBlobActionEnum",
          "kind": "ENUM",
          "description": "Type of a snippet blob input action",
          "fields": null
        },
        {
          "name": "SnippetBlobActionInputType",
          "kind": "INPUT_OBJECT",
          "description": "Represents an action to perform over a snippet file",
          "fields": null
        },
        {
          "name": "SnippetBlobConnection",
          "kind": "OBJECT",
          "description": "The connection type for SnippetBlob.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "hasUnretrievableBlobs",
              "description": "Indicates if the snippet has unretrievable blobs."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SnippetBlobEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SnippetBlobViewer",
          "kind": "OBJECT",
          "description": "Represents how the blob content should be displayed",
          "fields": [
            {
              "name": "collapsed",
              "description": "Shows whether the blob should be displayed collapsed."
            },
            {
              "name": "fileType",
              "description": "Content file type."
            },
            {
              "name": "loadAsync",
              "description": "Shows whether the blob content is loaded asynchronously."
            },
            {
              "name": "loadingPartialName",
              "description": "Loading partial name."
            },
            {
              "name": "renderError",
              "description": "Error rendering the blob content."
            },
            {
              "name": "tooLarge",
              "description": "Shows whether the blob is too large to be displayed."
            },
            {
              "name": "type",
              "description": "Type of blob viewer."
            }
          ]
        },
        {
          "name": "SnippetConnection",
          "kind": "OBJECT",
          "description": "The connection type for Snippet.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SnippetEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SnippetID",
          "kind": "SCALAR",
          "description": "A `SnippetID` is a global ID. It is encoded as a string.\n\nAn example `SnippetID` is: `\"gid://gitlab/Snippet/1\"`.",
          "fields": null
        },
        {
          "name": "SnippetPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "adminSnippet",
              "description": "Indicates the user can perform `admin_snippet` on this resource"
            },
            {
              "name": "awardEmoji",
              "description": "Indicates the user can perform `award_emoji` on this resource"
            },
            {
              "name": "createNote",
              "description": "Indicates the user can perform `create_note` on this resource"
            },
            {
              "name": "readSnippet",
              "description": "Indicates the user can perform `read_snippet` on this resource"
            },
            {
              "name": "reportSnippet",
              "description": "Indicates the user can perform `report_snippet` on this resource"
            },
            {
              "name": "updateSnippet",
              "description": "Indicates the user can perform `update_snippet` on this resource"
            }
          ]
        },
        {
          "name": "SnippetRepositoryRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo sync and verification state of a snippet repository",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the SnippetRepositoryRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the SnippetRepositoryRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the SnippetRepositoryRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the SnippetRepositoryRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the SnippetRepositoryRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the SnippetRepositoryRegistry"
            },
            {
              "name": "snippetRepositoryId",
              "description": "ID of the Snippet Repository."
            },
            {
              "name": "state",
              "description": "Sync state of the SnippetRepositoryRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the SnippetRepositoryRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the SnippetRepositoryRegistry"
            }
          ]
        },
        {
          "name": "SnippetRepositoryRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for SnippetRepositoryRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SnippetRepositoryRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "Sort",
          "kind": "ENUM",
          "description": "Common sort values",
          "fields": null
        },
        {
          "name": "SortDirectionEnum",
          "kind": "ENUM",
          "description": "Values for sort direction",
          "fields": null
        },
        {
          "name": "SshSignature",
          "kind": "OBJECT",
          "description": "SSH signature for a signed commit",
          "fields": [
            {
              "name": "commitSha",
              "description": "SHA of the associated commit."
            },
            {
              "name": "key",
              "description": "SSH key used for the signature."
            },
            {
              "name": "project",
              "description": "Project of the associated commit."
            },
            {
              "name": "user",
              "description": "User associated with the key."
            },
            {
              "name": "verificationStatus",
              "description": "Indicates verification status of the associated key or certificate."
            }
          ]
        },
        {
          "name": "StatusAction",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "buttonTitle",
              "description": "Title for the button, for example: Retry this job."
            },
            {
              "name": "icon",
              "description": "Icon used in the action button."
            },
            {
              "name": "id",
              "description": "ID for a status action."
            },
            {
              "name": "method",
              "description": "Method for the action, for example: :post."
            },
            {
              "name": "path",
              "description": "Path for the action."
            },
            {
              "name": "title",
              "description": "Title for the action, for example: Retry."
            }
          ]
        },
        {
          "name": "StatusFilterInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "StatusInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "String",
          "kind": "SCALAR",
          "description": "Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.",
          "fields": null
        },
        {
          "name": "Submodule",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "flatPath",
              "description": "Flat path of the entry."
            },
            {
              "name": "id",
              "description": "ID of the entry."
            },
            {
              "name": "name",
              "description": "Name of the entry."
            },
            {
              "name": "path",
              "description": "Path of the entry."
            },
            {
              "name": "sha",
              "description": "Last commit SHA for the entry."
            },
            {
              "name": "treeUrl",
              "description": "Tree URL for the sub-module."
            },
            {
              "name": "type",
              "description": "Type of tree entry."
            },
            {
              "name": "webUrl",
              "description": "Web URL for the sub-module."
            }
          ]
        },
        {
          "name": "SubmoduleConnection",
          "kind": "OBJECT",
          "description": "The connection type for Submodule.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SubmoduleEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "Subscription",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "issuableAssigneesUpdated",
              "description": "Triggered when the assignees of an issuable are updated."
            },
            {
              "name": "issuableDatesUpdated",
              "description": "Triggered when the due date or start date of an issuable is updated."
            },
            {
              "name": "issuableDescriptionUpdated",
              "description": "Triggered when the description of an issuable is updated."
            },
            {
              "name": "issuableHealthStatusUpdated",
              "description": "Triggered when the health status of an issuable is updated."
            },
            {
              "name": "issuableIterationUpdated",
              "description": "Triggered when the iteration of an issuable is updated."
            },
            {
              "name": "issuableLabelsUpdated",
              "description": "Triggered when the labels of an issuable are updated."
            },
            {
              "name": "issuableMilestoneUpdated",
              "description": "Triggered when the milestone of an issuable is updated."
            },
            {
              "name": "issuableTitleUpdated",
              "description": "Triggered when the title of an issuable is updated."
            },
            {
              "name": "issuableWeightUpdated",
              "description": "Triggered when the weight of an issuable is updated."
            },
            {
              "name": "issueCrmContactsUpdated",
              "description": "Triggered when the crm contacts of an issuable are updated."
            },
            {
              "name": "mergeRequestApprovalStateUpdated",
              "description": "Triggered when approval state of a merge request is updated."
            },
            {
              "name": "mergeRequestMergeStatusUpdated",
              "description": "Triggered when the merge status of a merge request is updated."
            },
            {
              "name": "mergeRequestReviewersUpdated",
              "description": "Triggered when the reviewers of a merge request are updated."
            }
          ]
        },
        {
          "name": "SubscriptionFutureEntry",
          "kind": "OBJECT",
          "description": "Represents an entry from the future subscriptions",
          "fields": [
            {
              "name": "company",
              "description": "Company of the licensee."
            },
            {
              "name": "email",
              "description": "Email of the licensee."
            },
            {
              "name": "expiresAt",
              "description": "Date when the license expires."
            },
            {
              "name": "name",
              "description": "Name of the licensee."
            },
            {
              "name": "plan",
              "description": "Name of the subscription plan."
            },
            {
              "name": "startsAt",
              "description": "Date when the license started."
            },
            {
              "name": "type",
              "description": "Type of license the subscription will yield."
            },
            {
              "name": "usersInLicenseCount",
              "description": "Number of paid user seats."
            }
          ]
        },
        {
          "name": "SubscriptionFutureEntryConnection",
          "kind": "OBJECT",
          "description": "The connection type for SubscriptionFutureEntry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "SubscriptionFutureEntryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "SuggestedReviewersType",
          "kind": "OBJECT",
          "description": "Represents a Suggested Reviewers result set",
          "fields": [
            {
              "name": "accepted",
              "description": "List of accepted reviewer usernames."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the suggestions were created."
            },
            {
              "name": "suggested",
              "description": "List of suggested reviewer usernames."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the suggestions were updated."
            }
          ]
        },
        {
          "name": "SystemNoteMetadata",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "action",
              "description": "System note metadata action."
            },
            {
              "name": "descriptionVersion",
              "description": "Version of the changed description."
            },
            {
              "name": "id",
              "description": "Global ID of the specific system note metadata."
            }
          ]
        },
        {
          "name": "SystemNoteMetadataID",
          "kind": "SCALAR",
          "description": "A `SystemNoteMetadataID` is a global ID. It is encoded as a string.\n\nAn example `SystemNoteMetadataID` is: `\"gid://gitlab/SystemNoteMetadata/1\"`.",
          "fields": null
        },
        {
          "name": "TaskCompletionStatus",
          "kind": "OBJECT",
          "description": "Completion status of tasks",
          "fields": [
            {
              "name": "completedCount",
              "description": "Number of completed tasks."
            },
            {
              "name": "count",
              "description": "Number of total tasks."
            }
          ]
        },
        {
          "name": "TerraformState",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp the Terraform state was created."
            },
            {
              "name": "deletedAt",
              "description": "Timestamp the Terraform state was deleted."
            },
            {
              "name": "id",
              "description": "ID of the Terraform state."
            },
            {
              "name": "latestVersion",
              "description": "Latest version of the Terraform state."
            },
            {
              "name": "lockedAt",
              "description": "Timestamp the Terraform state was locked."
            },
            {
              "name": "lockedByUser",
              "description": "User currently holding a lock on the Terraform state."
            },
            {
              "name": "name",
              "description": "Name of the Terraform state."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the Terraform state was updated."
            }
          ]
        },
        {
          "name": "TerraformStateConnection",
          "kind": "OBJECT",
          "description": "The connection type for TerraformState.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TerraformStateDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TerraformStateDelete",
          "fields": null
        },
        {
          "name": "TerraformStateDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TerraformStateDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "TerraformStateEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TerraformStateID",
          "kind": "SCALAR",
          "description": "A `TerraformStateID` is a global ID. It is encoded as a string.\n\nAn example `TerraformStateID` is: `\"gid://gitlab/Terraform::State/1\"`.",
          "fields": null
        },
        {
          "name": "TerraformStateLockInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TerraformStateLock",
          "fields": null
        },
        {
          "name": "TerraformStateLockPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TerraformStateLock",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "TerraformStateUnlockInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TerraformStateUnlock",
          "fields": null
        },
        {
          "name": "TerraformStateUnlockPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TerraformStateUnlock",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "TerraformStateVersion",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp the version was created."
            },
            {
              "name": "createdByUser",
              "description": "User that created this version."
            },
            {
              "name": "downloadPath",
              "description": "URL for downloading the version's JSON file."
            },
            {
              "name": "id",
              "description": "ID of the Terraform state version."
            },
            {
              "name": "job",
              "description": "Job that created this version."
            },
            {
              "name": "serial",
              "description": "Serial number of the version."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp the version was updated."
            }
          ]
        },
        {
          "name": "TerraformStateVersionRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo sync and verification state of a terraform state version",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the TerraformStateVersionRegistry was created"
            },
            {
              "name": "id",
              "description": "ID of the TerraformStateVersionRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the TerraformStateVersionRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the TerraformStateVersionRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the TerraformStateVersionRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the TerraformStateVersionRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the TerraformStateVersionRegistry"
            },
            {
              "name": "terraformStateVersionId",
              "description": "ID of the terraform state version."
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the TerraformStateVersionRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the TerraformStateVersionRegistry"
            }
          ]
        },
        {
          "name": "TerraformStateVersionRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for TerraformStateVersionRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TerraformStateVersionRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TestCase",
          "kind": "OBJECT",
          "description": "Test case in pipeline test report.",
          "fields": [
            {
              "name": "attachmentUrl",
              "description": "URL of the test case attachment file."
            },
            {
              "name": "classname",
              "description": "Classname of the test case."
            },
            {
              "name": "executionTime",
              "description": "Test case execution time in seconds."
            },
            {
              "name": "file",
              "description": "Path to the file of the test case."
            },
            {
              "name": "name",
              "description": "Name of the test case."
            },
            {
              "name": "recentFailures",
              "description": "Recent failure history of the test case on the base branch."
            },
            {
              "name": "stackTrace",
              "description": "Stack trace of the test case."
            },
            {
              "name": "status",
              "description": "Status of the test case (error, failed, success, skipped)."
            },
            {
              "name": "systemOutput",
              "description": "System output of the test case."
            }
          ]
        },
        {
          "name": "TestCaseConnection",
          "kind": "OBJECT",
          "description": "The connection type for TestCase.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TestCaseEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TestCaseStatus",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "TestReport",
          "kind": "OBJECT",
          "description": "Represents a requirement test report",
          "fields": [
            {
              "name": "author",
              "description": "Author of the test report."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the test report was created."
            },
            {
              "name": "id",
              "description": "ID of the test report."
            },
            {
              "name": "state",
              "description": "State of the test report."
            },
            {
              "name": "usesLegacyIid",
              "description": "Indicates whether the test report was generated with references to legacy requirement IIDs."
            }
          ]
        },
        {
          "name": "TestReportConnection",
          "kind": "OBJECT",
          "description": "The connection type for TestReport.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TestReportEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TestReportState",
          "kind": "ENUM",
          "description": "State of a test report",
          "fields": null
        },
        {
          "name": "TestReportSummary",
          "kind": "OBJECT",
          "description": "Test report for a pipeline",
          "fields": [
            {
              "name": "testSuites",
              "description": "Test suites belonging to a pipeline test report."
            },
            {
              "name": "total",
              "description": "Total report statistics for a pipeline test report."
            }
          ]
        },
        {
          "name": "TestReportTotal",
          "kind": "OBJECT",
          "description": "Total test report statistics.",
          "fields": [
            {
              "name": "count",
              "description": "Total number of the test cases."
            },
            {
              "name": "error",
              "description": "Total number of test cases that had an error."
            },
            {
              "name": "failed",
              "description": "Total number of test cases that failed."
            },
            {
              "name": "skipped",
              "description": "Total number of test cases that were skipped."
            },
            {
              "name": "success",
              "description": "Total number of test cases that succeeded."
            },
            {
              "name": "suiteError",
              "description": "Test suite error message."
            },
            {
              "name": "time",
              "description": "Total duration of the tests."
            }
          ]
        },
        {
          "name": "TestSuite",
          "kind": "OBJECT",
          "description": "Test suite in a pipeline test report.",
          "fields": [
            {
              "name": "errorCount",
              "description": "Total number of test cases that had an error."
            },
            {
              "name": "failedCount",
              "description": "Total number of test cases that failed in the test suite."
            },
            {
              "name": "name",
              "description": "Name of the test suite."
            },
            {
              "name": "skippedCount",
              "description": "Total number of test cases that were skipped in the test suite."
            },
            {
              "name": "successCount",
              "description": "Total number of test cases that succeeded in the test suite."
            },
            {
              "name": "suiteError",
              "description": "Test suite error message."
            },
            {
              "name": "testCases",
              "description": "Test cases in the test suite."
            },
            {
              "name": "totalCount",
              "description": "Total number of the test cases in the test suite."
            },
            {
              "name": "totalTime",
              "description": "Total duration of the tests in the test suite."
            }
          ]
        },
        {
          "name": "TestSuiteSummary",
          "kind": "OBJECT",
          "description": "Test suite summary in a pipeline test report.",
          "fields": [
            {
              "name": "buildIds",
              "description": "IDs of the builds used to run the test suite."
            },
            {
              "name": "errorCount",
              "description": "Total number of test cases that had an error."
            },
            {
              "name": "failedCount",
              "description": "Total number of test cases that failed in the test suite."
            },
            {
              "name": "name",
              "description": "Name of the test suite."
            },
            {
              "name": "skippedCount",
              "description": "Total number of test cases that were skipped in the test suite."
            },
            {
              "name": "successCount",
              "description": "Total number of test cases that succeeded in the test suite."
            },
            {
              "name": "suiteError",
              "description": "Test suite error message."
            },
            {
              "name": "totalCount",
              "description": "Total number of the test cases in the test suite."
            },
            {
              "name": "totalTime",
              "description": "Total duration of the tests in the test suite."
            }
          ]
        },
        {
          "name": "TestSuiteSummaryConnection",
          "kind": "OBJECT",
          "description": "The connection type for TestSuiteSummary.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TestSuiteSummaryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "Time",
          "kind": "SCALAR",
          "description": "Time represented in ISO 8601.\n\nFor example: \"2021-03-09T14:58:50+00:00\".\n\nSee `https://www.iso.org/iso-8601-date-and-time-format.html`.\n",
          "fields": null
        },
        {
          "name": "TimeReportStats",
          "kind": "OBJECT",
          "description": "Represents the time report stats for timeboxes",
          "fields": [
            {
              "name": "complete",
              "description": "Completed issues metrics."
            },
            {
              "name": "incomplete",
              "description": "Incomplete issues metrics."
            },
            {
              "name": "total",
              "description": "Total issues metrics."
            }
          ]
        },
        {
          "name": "TimeTrackingTimelogCategory",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "billable",
              "description": "Whether the category is billable or not."
            },
            {
              "name": "billingRate",
              "description": "Billing rate for the category."
            },
            {
              "name": "color",
              "description": "Color assigned to the category."
            },
            {
              "name": "createdAt",
              "description": "When the category was created."
            },
            {
              "name": "description",
              "description": "Description of the category."
            },
            {
              "name": "id",
              "description": "Internal ID of the timelog category."
            },
            {
              "name": "name",
              "description": "Name of the category."
            },
            {
              "name": "updatedAt",
              "description": "When the category was last updated."
            }
          ]
        },
        {
          "name": "TimeTrackingTimelogCategoryConnection",
          "kind": "OBJECT",
          "description": "The connection type for TimeTrackingTimelogCategory.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TimeTrackingTimelogCategoryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TimeboxMetrics",
          "kind": "OBJECT",
          "description": "Represents measured stats metrics for timeboxes",
          "fields": [
            {
              "name": "count",
              "description": "Count metric."
            },
            {
              "name": "weight",
              "description": "Weight metric."
            }
          ]
        },
        {
          "name": "TimeboxReport",
          "kind": "OBJECT",
          "description": "Represents a historically accurate report about the timebox",
          "fields": [
            {
              "name": "burnupTimeSeries",
              "description": "Daily scope and completed totals for burnup charts."
            },
            {
              "name": "error",
              "description": "If the report cannot be generated, information about why."
            },
            {
              "name": "stats",
              "description": "Represents the time report stats for the timebox."
            }
          ]
        },
        {
          "name": "TimeboxReportError",
          "kind": "OBJECT",
          "description": "Explains why we could not generate a timebox report.",
          "fields": [
            {
              "name": "code",
              "description": "Machine readable code, categorizing the error."
            },
            {
              "name": "message",
              "description": "Human readable message explaining what happened."
            }
          ]
        },
        {
          "name": "TimeboxReportErrorReason",
          "kind": "ENUM",
          "description": "Category of error.",
          "fields": null
        },
        {
          "name": "TimeboxReportInterface",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "report",
              "description": "Historically accurate report about the timebox."
            }
          ]
        },
        {
          "name": "Timeframe",
          "kind": "INPUT_OBJECT",
          "description": "A time-frame defined as a closed inclusive range of two dates",
          "fields": null
        },
        {
          "name": "TimelineEventCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TimelineEventCreate",
          "fields": null
        },
        {
          "name": "TimelineEventCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TimelineEventCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "timelineEvent",
              "description": "Timeline event."
            }
          ]
        },
        {
          "name": "TimelineEventDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TimelineEventDestroy",
          "fields": null
        },
        {
          "name": "TimelineEventDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TimelineEventDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "timelineEvent",
              "description": "Timeline event."
            }
          ]
        },
        {
          "name": "TimelineEventPromoteFromNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TimelineEventPromoteFromNote",
          "fields": null
        },
        {
          "name": "TimelineEventPromoteFromNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TimelineEventPromoteFromNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "timelineEvent",
              "description": "Timeline event."
            }
          ]
        },
        {
          "name": "TimelineEventTagCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TimelineEventTagCreate",
          "fields": null
        },
        {
          "name": "TimelineEventTagCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TimelineEventTagCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "timelineEventTag",
              "description": "Timeline event tag."
            }
          ]
        },
        {
          "name": "TimelineEventTagType",
          "kind": "OBJECT",
          "description": "Describes a tag on an incident management timeline event.",
          "fields": [
            {
              "name": "id",
              "description": "ID of the timeline event tag."
            },
            {
              "name": "name",
              "description": "Name of the timeline event tag."
            }
          ]
        },
        {
          "name": "TimelineEventTagTypeConnection",
          "kind": "OBJECT",
          "description": "The connection type for TimelineEventTagType.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TimelineEventTagTypeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TimelineEventType",
          "kind": "OBJECT",
          "description": "Describes an incident management timeline event",
          "fields": [
            {
              "name": "action",
              "description": "Indicates the timeline event icon."
            },
            {
              "name": "author",
              "description": "User that created the timeline event."
            },
            {
              "name": "createdAt",
              "description": "Timestamp when the event created."
            },
            {
              "name": "editable",
              "description": "Indicates the timeline event is editable."
            },
            {
              "name": "id",
              "description": "ID of the timeline event."
            },
            {
              "name": "incident",
              "description": "Incident of the timeline event."
            },
            {
              "name": "note",
              "description": "Text note of the timeline event."
            },
            {
              "name": "noteHtml",
              "description": "HTML note of the timeline event."
            },
            {
              "name": "occurredAt",
              "description": "Timestamp when the event occurred."
            },
            {
              "name": "promotedFromNote",
              "description": "Note from which the timeline event was created."
            },
            {
              "name": "timelineEventTags",
              "description": "Tags for the incident timeline event."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp when the event updated."
            },
            {
              "name": "updatedByUser",
              "description": "User that updated the timeline event."
            }
          ]
        },
        {
          "name": "TimelineEventTypeConnection",
          "kind": "OBJECT",
          "description": "The connection type for TimelineEventType.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TimelineEventTypeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TimelineEventUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TimelineEventUpdate",
          "fields": null
        },
        {
          "name": "TimelineEventUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TimelineEventUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "timelineEvent",
              "description": "Timeline event."
            }
          ]
        },
        {
          "name": "Timelog",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "id",
              "description": "Internal ID of the timelog."
            },
            {
              "name": "issue",
              "description": "Issue that logged time was added to."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request that logged time was added to."
            },
            {
              "name": "note",
              "description": "Note where the quick action was executed to add the logged time."
            },
            {
              "name": "spentAt",
              "description": "Timestamp of when the time tracked was spent at."
            },
            {
              "name": "summary",
              "description": "Summary of how the time was spent."
            },
            {
              "name": "timeSpent",
              "description": "Time spent displayed in seconds."
            },
            {
              "name": "user",
              "description": "User that logged the time."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            }
          ]
        },
        {
          "name": "TimelogConnection",
          "kind": "OBJECT",
          "description": "The connection type for Timelog.",
          "fields": [
            {
              "name": "count",
              "description": "Total count of collection."
            },
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            },
            {
              "name": "totalSpentTime",
              "description": "Total time spent in seconds."
            }
          ]
        },
        {
          "name": "TimelogCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TimelogCreate",
          "fields": null
        },
        {
          "name": "TimelogCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TimelogCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "timelog",
              "description": "Timelog."
            }
          ]
        },
        {
          "name": "TimelogDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TimelogDelete",
          "fields": null
        },
        {
          "name": "TimelogDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TimelogDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "timelog",
              "description": "Timelog."
            }
          ]
        },
        {
          "name": "TimelogEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TimelogID",
          "kind": "SCALAR",
          "description": "A `TimelogID` is a global ID. It is encoded as a string.\n\nAn example `TimelogID` is: `\"gid://gitlab/Timelog/1\"`.",
          "fields": null
        },
        {
          "name": "TimelogPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "adminTimelog",
              "description": "Indicates the user can perform `admin_timelog` on this resource"
            }
          ]
        },
        {
          "name": "TimelogSort",
          "kind": "ENUM",
          "description": "Values for sorting timelogs",
          "fields": null
        },
        {
          "name": "Todo",
          "kind": "OBJECT",
          "description": "Representing a to-do entry",
          "fields": [
            {
              "name": "action",
              "description": "Action of the to-do item."
            },
            {
              "name": "author",
              "description": "Author of this to-do item."
            },
            {
              "name": "body",
              "description": "Body of the to-do item."
            },
            {
              "name": "createdAt",
              "description": "Timestamp this to-do item was created."
            },
            {
              "name": "group",
              "description": "Group this to-do item is associated with."
            },
            {
              "name": "id",
              "description": "ID of the to-do item."
            },
            {
              "name": "note",
              "description": "Note which created this to-do item."
            },
            {
              "name": "project",
              "description": "Project this to-do item is associated with."
            },
            {
              "name": "state",
              "description": "State of the to-do item."
            },
            {
              "name": "target",
              "description": "Target of the to-do item."
            },
            {
              "name": "targetType",
              "description": "Target type of the to-do item."
            }
          ]
        },
        {
          "name": "TodoActionEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "TodoConnection",
          "kind": "OBJECT",
          "description": "The connection type for Todo.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TodoCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TodoCreate",
          "fields": null
        },
        {
          "name": "TodoCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TodoCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "todo",
              "description": "To-do item created."
            }
          ]
        },
        {
          "name": "TodoEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TodoID",
          "kind": "SCALAR",
          "description": "A `TodoID` is a global ID. It is encoded as a string.\n\nAn example `TodoID` is: `\"gid://gitlab/Todo/1\"`.",
          "fields": null
        },
        {
          "name": "TodoMarkDoneInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TodoMarkDone",
          "fields": null
        },
        {
          "name": "TodoMarkDonePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TodoMarkDone",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "todo",
              "description": "Requested to-do item."
            }
          ]
        },
        {
          "name": "TodoRestoreInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TodoRestore",
          "fields": null
        },
        {
          "name": "TodoRestoreManyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TodoRestoreMany",
          "fields": null
        },
        {
          "name": "TodoRestoreManyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TodoRestoreMany",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "todos",
              "description": "Updated to-do items."
            }
          ]
        },
        {
          "name": "TodoRestorePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TodoRestore",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "todo",
              "description": "Requested to-do item."
            }
          ]
        },
        {
          "name": "TodoStateEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "TodoTargetEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "Todoable",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "webUrl",
              "description": "URL of this object."
            }
          ]
        },
        {
          "name": "TodoableID",
          "kind": "SCALAR",
          "description": "A `TodoableID` is a global ID. It is encoded as a string.\n\nAn example `TodoableID` is: `\"gid://gitlab/Todoable/1\"`.",
          "fields": null
        },
        {
          "name": "TodosMarkAllDoneInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of TodosMarkAllDone",
          "fields": null
        },
        {
          "name": "TodosMarkAllDonePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of TodosMarkAllDone",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "todos",
              "description": "Updated to-do items."
            }
          ]
        },
        {
          "name": "Topic",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "avatarUrl",
              "description": "URL to avatar image file of the topic."
            },
            {
              "name": "description",
              "description": "Description of the topic."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "id",
              "description": "ID of the topic."
            },
            {
              "name": "name",
              "description": "Name of the topic."
            },
            {
              "name": "title",
              "description": "Title of the topic."
            }
          ]
        },
        {
          "name": "TopicConnection",
          "kind": "OBJECT",
          "description": "The connection type for Topic.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TopicEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TrainingUrlRequestStatus",
          "kind": "ENUM",
          "description": "Status of the request to the training provider. The URL of a TrainingUrl is calculated asynchronously. When PENDING, the URL of the TrainingUrl will be null. When COMPLETED, the URL of the TrainingUrl will be available.",
          "fields": null
        },
        {
          "name": "Tree",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "blobs",
              "description": "Blobs of the tree."
            },
            {
              "name": "lastCommit",
              "description": "Last commit for the tree."
            },
            {
              "name": "submodules",
              "description": "Sub-modules of the tree."
            },
            {
              "name": "trees",
              "description": "Trees of the tree."
            }
          ]
        },
        {
          "name": "TreeConnection",
          "kind": "OBJECT",
          "description": "The connection type for Tree.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TreeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TreeEntry",
          "kind": "OBJECT",
          "description": "Represents a directory",
          "fields": [
            {
              "name": "flatPath",
              "description": "Flat path of the entry."
            },
            {
              "name": "id",
              "description": "ID of the entry."
            },
            {
              "name": "name",
              "description": "Name of the entry."
            },
            {
              "name": "path",
              "description": "Path of the entry."
            },
            {
              "name": "sha",
              "description": "Last commit SHA for the entry."
            },
            {
              "name": "type",
              "description": "Type of tree entry."
            },
            {
              "name": "webPath",
              "description": "Web path for the tree entry (directory)."
            },
            {
              "name": "webUrl",
              "description": "Web URL for the tree entry (directory)."
            }
          ]
        },
        {
          "name": "TreeEntryConnection",
          "kind": "OBJECT",
          "description": "The connection type for TreeEntry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "TreeEntryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "TypeEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "UnionedEpicFilterInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnionedIssueFilterInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UnprotectAccessLevel",
          "kind": "OBJECT",
          "description": "Defines which user roles, users, or groups can unprotect a protected branch.",
          "fields": [
            {
              "name": "accessLevel",
              "description": "GitLab::Access level."
            },
            {
              "name": "accessLevelDescription",
              "description": "Human readable representation for this access level."
            },
            {
              "name": "group",
              "description": "Group associated with this access level."
            },
            {
              "name": "user",
              "description": "User associated with this access level."
            }
          ]
        },
        {
          "name": "UnprotectAccessLevelConnection",
          "kind": "OBJECT",
          "description": "The connection type for UnprotectAccessLevel.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "UnprotectAccessLevelEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "UntrustedRegexp",
          "kind": "SCALAR",
          "description": "A regexp containing patterns sourced from user input",
          "fields": null
        },
        {
          "name": "UpdateAlertStatusInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateAlertStatus",
          "fields": null
        },
        {
          "name": "UpdateAlertStatusPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateAlertStatus",
          "fields": [
            {
              "name": "alert",
              "description": "Alert after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue created after mutation."
            },
            {
              "name": "todo",
              "description": "To-do item after mutation."
            }
          ]
        },
        {
          "name": "UpdateBoardEpicUserPreferencesInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateBoardEpicUserPreferences",
          "fields": null
        },
        {
          "name": "UpdateBoardEpicUserPreferencesPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateBoardEpicUserPreferences",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epicUserPreferences",
              "description": "User preferences for the epic in the board after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "UpdateBoardInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateBoard",
          "fields": null
        },
        {
          "name": "UpdateBoardListInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateBoardList",
          "fields": null
        },
        {
          "name": "UpdateBoardListPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateBoardList",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "list",
              "description": "Mutated list."
            }
          ]
        },
        {
          "name": "UpdateBoardPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateBoard",
          "fields": [
            {
              "name": "board",
              "description": "Board after mutation."
            },
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "UpdateComplianceFrameworkInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateComplianceFramework",
          "fields": null
        },
        {
          "name": "UpdateComplianceFrameworkPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateComplianceFramework",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "complianceFramework",
              "description": "Compliance framework after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "UpdateContainerExpirationPolicyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateContainerExpirationPolicy",
          "fields": null
        },
        {
          "name": "UpdateContainerExpirationPolicyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateContainerExpirationPolicy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "containerExpirationPolicy",
              "description": "Container expiration policy after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "UpdateDependencyProxyImageTtlGroupPolicyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateDependencyProxyImageTtlGroupPolicy",
          "fields": null
        },
        {
          "name": "UpdateDependencyProxyImageTtlGroupPolicyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateDependencyProxyImageTtlGroupPolicy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dependencyProxyImageTtlPolicy",
              "description": "Group image TTL policy after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "UpdateDependencyProxySettingsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateDependencyProxySettings",
          "fields": null
        },
        {
          "name": "UpdateDependencyProxySettingsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateDependencyProxySettings",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "dependencyProxySetting",
              "description": "Group dependency proxy settings after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "UpdateDiffImagePositionInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "UpdateEpicBoardListInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEpicBoardList",
          "fields": null
        },
        {
          "name": "UpdateEpicBoardListPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEpicBoardList",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "list",
              "description": "Mutated epic list."
            }
          ]
        },
        {
          "name": "UpdateEpicInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateEpic",
          "fields": null
        },
        {
          "name": "UpdateEpicPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateEpic",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "epic",
              "description": "Epic after mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "UpdateImageDiffNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateImageDiffNote",
          "fields": null
        },
        {
          "name": "UpdateImageDiffNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateImageDiffNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "note",
              "description": "Note after mutation."
            }
          ]
        },
        {
          "name": "UpdateIssueInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateIssue",
          "fields": null
        },
        {
          "name": "UpdateIssuePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateIssue",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "issue",
              "description": "Issue after mutation."
            }
          ]
        },
        {
          "name": "UpdateIterationInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateIteration",
          "fields": null
        },
        {
          "name": "UpdateIterationPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateIteration",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "iteration",
              "description": "Updated iteration."
            }
          ]
        },
        {
          "name": "UpdateNamespacePackageSettingsInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateNamespacePackageSettings",
          "fields": null
        },
        {
          "name": "UpdateNamespacePackageSettingsPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateNamespacePackageSettings",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "packageSettings",
              "description": "Namespace package setting after mutation."
            }
          ]
        },
        {
          "name": "UpdateNoteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateNote",
          "fields": null
        },
        {
          "name": "UpdateNotePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateNote",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "note",
              "description": "Note after mutation."
            }
          ]
        },
        {
          "name": "UpdatePackagesCleanupPolicyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdatePackagesCleanupPolicy",
          "fields": null
        },
        {
          "name": "UpdatePackagesCleanupPolicyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdatePackagesCleanupPolicy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "packagesCleanupPolicy",
              "description": "Packages cleanup policy after mutation."
            }
          ]
        },
        {
          "name": "UpdateRequirementInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateRequirement",
          "fields": null
        },
        {
          "name": "UpdateRequirementPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateRequirement",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "requirement",
              "description": "Requirement after mutation."
            }
          ]
        },
        {
          "name": "UpdateSnippetInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UpdateSnippet",
          "fields": null
        },
        {
          "name": "UpdateSnippetPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UpdateSnippet",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "snippet",
              "description": "Snippet after mutation."
            }
          ]
        },
        {
          "name": "Upload",
          "kind": "SCALAR",
          "description": null,
          "fields": null
        },
        {
          "name": "UploadDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UploadDelete",
          "fields": null
        },
        {
          "name": "UploadDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UploadDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "upload",
              "description": "Deleted upload."
            }
          ]
        },
        {
          "name": "UploadID",
          "kind": "SCALAR",
          "description": "A `UploadID` is a global ID. It is encoded as a string.\n\nAn example `UploadID` is: `\"gid://gitlab/Upload/1\"`.",
          "fields": null
        },
        {
          "name": "UploadRegistry",
          "kind": "OBJECT",
          "description": "Represents the Geo replication and verification state of an upload.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp when the UploadRegistry was created"
            },
            {
              "name": "fileId",
              "description": "ID of the Upload."
            },
            {
              "name": "id",
              "description": "ID of the UploadRegistry"
            },
            {
              "name": "lastSyncFailure",
              "description": "Error message during sync of the UploadRegistry"
            },
            {
              "name": "lastSyncedAt",
              "description": "Timestamp of the most recent successful sync of the UploadRegistry"
            },
            {
              "name": "retryAt",
              "description": "Timestamp after which the UploadRegistry is resynced"
            },
            {
              "name": "retryCount",
              "description": "Number of consecutive failed sync attempts of the UploadRegistry"
            },
            {
              "name": "state",
              "description": "Sync state of the UploadRegistry"
            },
            {
              "name": "verificationRetryAt",
              "description": "Timestamp after which the UploadRegistry is reverified"
            },
            {
              "name": "verifiedAt",
              "description": "Timestamp of the most recent successful verification of the UploadRegistry"
            }
          ]
        },
        {
          "name": "UploadRegistryConnection",
          "kind": "OBJECT",
          "description": "The connection type for UploadRegistry.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "UploadRegistryEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "UsageTrendsMeasurement",
          "kind": "OBJECT",
          "description": "Represents a recorded measurement (object count) for the Admins",
          "fields": [
            {
              "name": "count",
              "description": "Object count."
            },
            {
              "name": "identifier",
              "description": "Type of objects being measured."
            },
            {
              "name": "recordedAt",
              "description": "Time the measurement was recorded."
            }
          ]
        },
        {
          "name": "UsageTrendsMeasurementConnection",
          "kind": "OBJECT",
          "description": "The connection type for UsageTrendsMeasurement.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "UsageTrendsMeasurementEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "User",
          "kind": "INTERFACE",
          "description": "Representation of a GitLab user.",
          "fields": [
            {
              "name": "assignedMergeRequests",
              "description": "Merge requests assigned to the user."
            },
            {
              "name": "authoredMergeRequests",
              "description": "Merge requests authored by the user."
            },
            {
              "name": "avatarUrl",
              "description": "URL of the user's avatar."
            },
            {
              "name": "bot",
              "description": "Indicates if the user is a bot."
            },
            {
              "name": "callouts",
              "description": "User callouts that belong to the user."
            },
            {
              "name": "commitEmail",
              "description": "User's default commit email."
            },
            {
              "name": "emails",
              "description": "User's email addresses."
            },
            {
              "name": "gitpodEnabled",
              "description": "Whether Gitpod is enabled at the user level."
            },
            {
              "name": "groupCount",
              "description": "Group count for the user."
            },
            {
              "name": "groupMemberships",
              "description": "Group memberships of the user."
            },
            {
              "name": "groups",
              "description": "Groups where the user has access."
            },
            {
              "name": "id",
              "description": "ID of the user."
            },
            {
              "name": "location",
              "description": "Location of the user."
            },
            {
              "name": "name",
              "description": "Human-readable name of the user. Returns `****` if the user is a project bot and the requester does not have permission to view the project."
            },
            {
              "name": "namespace",
              "description": "Personal namespace of the user."
            },
            {
              "name": "namespaceCommitEmails",
              "description": "User's custom namespace commit emails."
            },
            {
              "name": "preferencesGitpodPath",
              "description": "Web path to the Gitpod section within user preferences."
            },
            {
              "name": "profileEnableGitpodPath",
              "description": "Web path to enable Gitpod for the user."
            },
            {
              "name": "projectMemberships",
              "description": "Project memberships of the user."
            },
            {
              "name": "publicEmail",
              "description": "User's public email."
            },
            {
              "name": "reviewRequestedMergeRequests",
              "description": "Merge requests assigned to the user for review."
            },
            {
              "name": "savedReplies",
              "description": "Saved replies authored by the user. Will not return saved replies if `saved_replies` feature flag is disabled."
            },
            {
              "name": "savedReply",
              "description": "Saved reply authored by the user. Will not return saved reply if `saved_replies` feature flag is disabled."
            },
            {
              "name": "snippets",
              "description": "Snippets authored by the user."
            },
            {
              "name": "starredProjects",
              "description": "Projects starred by the user."
            },
            {
              "name": "state",
              "description": "State of the user."
            },
            {
              "name": "status",
              "description": "User status."
            },
            {
              "name": "timelogs",
              "description": "Time logged by the user."
            },
            {
              "name": "todos",
              "description": "To-do items of the user."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource."
            },
            {
              "name": "username",
              "description": "Username of the user. Unique within this instance of GitLab."
            },
            {
              "name": "webPath",
              "description": "Web path of the user."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the user."
            }
          ]
        },
        {
          "name": "UserCallout",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "dismissedAt",
              "description": "Date when the callout was dismissed."
            },
            {
              "name": "featureName",
              "description": "Name of the feature that the callout is for."
            }
          ]
        },
        {
          "name": "UserCalloutConnection",
          "kind": "OBJECT",
          "description": "The connection type for UserCallout.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "UserCalloutCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UserCalloutCreate",
          "fields": null
        },
        {
          "name": "UserCalloutCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UserCalloutCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "userCallout",
              "description": "User callout dismissed."
            }
          ]
        },
        {
          "name": "UserCalloutEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "UserCalloutFeatureNameEnum",
          "kind": "ENUM",
          "description": "Name of the feature that the callout is for.",
          "fields": null
        },
        {
          "name": "UserCore",
          "kind": "OBJECT",
          "description": "Core represention of a GitLab user.",
          "fields": [
            {
              "name": "assignedMergeRequests",
              "description": "Merge requests assigned to the user."
            },
            {
              "name": "authoredMergeRequests",
              "description": "Merge requests authored by the user."
            },
            {
              "name": "avatarUrl",
              "description": "URL of the user's avatar."
            },
            {
              "name": "bot",
              "description": "Indicates if the user is a bot."
            },
            {
              "name": "callouts",
              "description": "User callouts that belong to the user."
            },
            {
              "name": "commitEmail",
              "description": "User's default commit email."
            },
            {
              "name": "emails",
              "description": "User's email addresses."
            },
            {
              "name": "gitpodEnabled",
              "description": "Whether Gitpod is enabled at the user level."
            },
            {
              "name": "groupCount",
              "description": "Group count for the user."
            },
            {
              "name": "groupMemberships",
              "description": "Group memberships of the user."
            },
            {
              "name": "groups",
              "description": "Groups where the user has access."
            },
            {
              "name": "id",
              "description": "ID of the user."
            },
            {
              "name": "location",
              "description": "Location of the user."
            },
            {
              "name": "name",
              "description": "Human-readable name of the user. Returns `****` if the user is a project bot and the requester does not have permission to view the project."
            },
            {
              "name": "namespace",
              "description": "Personal namespace of the user."
            },
            {
              "name": "namespaceCommitEmails",
              "description": "User's custom namespace commit emails."
            },
            {
              "name": "preferencesGitpodPath",
              "description": "Web path to the Gitpod section within user preferences."
            },
            {
              "name": "profileEnableGitpodPath",
              "description": "Web path to enable Gitpod for the user."
            },
            {
              "name": "projectMemberships",
              "description": "Project memberships of the user."
            },
            {
              "name": "publicEmail",
              "description": "User's public email."
            },
            {
              "name": "reviewRequestedMergeRequests",
              "description": "Merge requests assigned to the user for review."
            },
            {
              "name": "savedReplies",
              "description": "Saved replies authored by the user. Will not return saved replies if `saved_replies` feature flag is disabled."
            },
            {
              "name": "savedReply",
              "description": "Saved reply authored by the user. Will not return saved reply if `saved_replies` feature flag is disabled."
            },
            {
              "name": "snippets",
              "description": "Snippets authored by the user."
            },
            {
              "name": "starredProjects",
              "description": "Projects starred by the user."
            },
            {
              "name": "state",
              "description": "State of the user."
            },
            {
              "name": "status",
              "description": "User status."
            },
            {
              "name": "timelogs",
              "description": "Time logged by the user."
            },
            {
              "name": "todos",
              "description": "To-do items of the user."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource."
            },
            {
              "name": "username",
              "description": "Username of the user. Unique within this instance of GitLab."
            },
            {
              "name": "webPath",
              "description": "Web path of the user."
            },
            {
              "name": "webUrl",
              "description": "Web URL of the user."
            }
          ]
        },
        {
          "name": "UserCoreConnection",
          "kind": "OBJECT",
          "description": "The connection type for UserCore.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "UserCoreEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "UserID",
          "kind": "SCALAR",
          "description": "A `UserID` is a global ID. It is encoded as a string.\n\nAn example `UserID` is: `\"gid://gitlab/User/1\"`.",
          "fields": null
        },
        {
          "name": "UserMergeRequestInteraction",
          "kind": "OBJECT",
          "description": "Information about a merge request given a specific user.\n\nThis object has two parts to its state: a `User` and a `MergeRequest`. All\nfields relate to interactions between the two entities.\n",
          "fields": [
            {
              "name": "applicableApprovalRules",
              "description": "Approval rules that apply to this user for this merge request."
            },
            {
              "name": "approved",
              "description": "Whether this user has approved this merge request."
            },
            {
              "name": "canMerge",
              "description": "Whether this user can merge this merge request."
            },
            {
              "name": "canUpdate",
              "description": "Whether this user can update this merge request."
            },
            {
              "name": "reviewState",
              "description": "State of the review by this user."
            },
            {
              "name": "reviewed",
              "description": "Whether this user has provided a review for this merge request."
            }
          ]
        },
        {
          "name": "UserPermissions",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "createSnippet",
              "description": "Indicates the user can perform `create_snippet` on this resource"
            }
          ]
        },
        {
          "name": "UserPreferences",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "issuesSort",
              "description": "Sort order for issue lists."
            }
          ]
        },
        {
          "name": "UserPreferencesUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of UserPreferencesUpdate",
          "fields": null
        },
        {
          "name": "UserPreferencesUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of UserPreferencesUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "userPreferences",
              "description": "User preferences after mutation."
            }
          ]
        },
        {
          "name": "UserState",
          "kind": "ENUM",
          "description": "Possible states of a user",
          "fields": null
        },
        {
          "name": "UserStatus",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "availability",
              "description": "User availability status."
            },
            {
              "name": "emoji",
              "description": "String representation of emoji."
            },
            {
              "name": "message",
              "description": "User status message."
            },
            {
              "name": "messageHtml",
              "description": "HTML of the user status message"
            }
          ]
        },
        {
          "name": "UsersSavedReplyID",
          "kind": "SCALAR",
          "description": "A `UsersSavedReplyID` is a global ID. It is encoded as a string.\n\nAn example `UsersSavedReplyID` is: `\"gid://gitlab/Users::SavedReply/1\"`.",
          "fields": null
        },
        {
          "name": "VerificationStateEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "VerificationStatus",
          "kind": "ENUM",
          "description": "Verification status of a GPG or X.509 signature for a commit.",
          "fields": null
        },
        {
          "name": "VisibilityLevelsEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "VisibilityScopesEnum",
          "kind": "ENUM",
          "description": null,
          "fields": null
        },
        {
          "name": "VulnerabilitiesCountByDay",
          "kind": "OBJECT",
          "description": "Represents the count of vulnerabilities by severity on a particular day. This data is retained for 365 days",
          "fields": [
            {
              "name": "critical",
              "description": "Total number of vulnerabilities on a particular day with critical severity"
            },
            {
              "name": "date",
              "description": "Date for the count."
            },
            {
              "name": "high",
              "description": "Total number of vulnerabilities on a particular day with high severity"
            },
            {
              "name": "info",
              "description": "Total number of vulnerabilities on a particular day with info severity"
            },
            {
              "name": "low",
              "description": "Total number of vulnerabilities on a particular day with low severity"
            },
            {
              "name": "medium",
              "description": "Total number of vulnerabilities on a particular day with medium severity"
            },
            {
              "name": "total",
              "description": "Total number of vulnerabilities on a particular day."
            },
            {
              "name": "unknown",
              "description": "Total number of vulnerabilities on a particular day with unknown severity"
            }
          ]
        },
        {
          "name": "VulnerabilitiesCountByDayConnection",
          "kind": "OBJECT",
          "description": "The connection type for VulnerabilitiesCountByDay.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "VulnerabilitiesCountByDayEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "VulnerabilitiesExternalIssueLinkID",
          "kind": "SCALAR",
          "description": "A `VulnerabilitiesExternalIssueLinkID` is a global ID. It is encoded as a string.\n\nAn example `VulnerabilitiesExternalIssueLinkID` is: `\"gid://gitlab/Vulnerabilities::ExternalIssueLink/1\"`.",
          "fields": null
        },
        {
          "name": "VulnerabilitiesFindingID",
          "kind": "SCALAR",
          "description": "A `VulnerabilitiesFindingID` is a global ID. It is encoded as a string.\n\nAn example `VulnerabilitiesFindingID` is: `\"gid://gitlab/Vulnerabilities::Finding/1\"`.",
          "fields": null
        },
        {
          "name": "VulnerabilitiesScannerID",
          "kind": "SCALAR",
          "description": "A `VulnerabilitiesScannerID` is a global ID. It is encoded as a string.\n\nAn example `VulnerabilitiesScannerID` is: `\"gid://gitlab/Vulnerabilities::Scanner/1\"`.",
          "fields": null
        },
        {
          "name": "Vulnerability",
          "kind": "OBJECT",
          "description": "Represents a vulnerability",
          "fields": [
            {
              "name": "commenters",
              "description": "All commenters on this noteable."
            },
            {
              "name": "confirmedAt",
              "description": "Timestamp of when the vulnerability state was changed to confirmed."
            },
            {
              "name": "confirmedBy",
              "description": "User that confirmed the vulnerability."
            },
            {
              "name": "description",
              "description": "Description of the vulnerability."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "details",
              "description": "Details of the vulnerability."
            },
            {
              "name": "detectedAt",
              "description": "Timestamp of when the vulnerability was first detected."
            },
            {
              "name": "discussions",
              "description": "All discussions on this noteable."
            },
            {
              "name": "dismissedAt",
              "description": "Timestamp of when the vulnerability state was changed to dismissed."
            },
            {
              "name": "dismissedBy",
              "description": "User that dismissed the vulnerability."
            },
            {
              "name": "externalIssueLinks",
              "description": "List of external issue links related to the vulnerability."
            },
            {
              "name": "falsePositive",
              "description": "Indicates whether the vulnerability is a false positive."
            },
            {
              "name": "hasSolutions",
              "description": "Indicates whether there is a solution available for this vulnerability."
            },
            {
              "name": "id",
              "description": "GraphQL ID of the vulnerability."
            },
            {
              "name": "identifiers",
              "description": "Identifiers of the vulnerability."
            },
            {
              "name": "issueLinks",
              "description": "List of issue links related to the vulnerability."
            },
            {
              "name": "links",
              "description": "List of links associated with the vulnerability."
            },
            {
              "name": "location",
              "description": "Location metadata for the vulnerability. Its fields depend on the type of security scan that found the vulnerability."
            },
            {
              "name": "mergeRequest",
              "description": "Merge request that fixes the vulnerability."
            },
            {
              "name": "message",
              "description": "Short text description of the vulnerability. This may include the finding's specific information."
            },
            {
              "name": "notes",
              "description": "All notes on this noteable."
            },
            {
              "name": "primaryIdentifier",
              "description": "Primary identifier of the vulnerability."
            },
            {
              "name": "project",
              "description": "Project on which the vulnerability was found."
            },
            {
              "name": "reportType",
              "description": "Type of the security report that found the vulnerability (SAST, DEPENDENCY_SCANNING, CONTAINER_SCANNING, DAST, SECRET_DETECTION, COVERAGE_FUZZING, API_FUZZING, CLUSTER_IMAGE_SCANNING, GENERIC). `Scan Type` in the UI."
            },
            {
              "name": "resolvedAt",
              "description": "Timestamp of when the vulnerability state was changed to resolved."
            },
            {
              "name": "resolvedBy",
              "description": "User that resolved the vulnerability."
            },
            {
              "name": "resolvedOnDefaultBranch",
              "description": "Indicates whether the vulnerability is fixed on the default branch or not."
            },
            {
              "name": "scanner",
              "description": "Scanner metadata for the vulnerability."
            },
            {
              "name": "severity",
              "description": "Severity of the vulnerability (INFO, UNKNOWN, LOW, MEDIUM, HIGH, CRITICAL)"
            },
            {
              "name": "state",
              "description": "State of the vulnerability (DETECTED, CONFIRMED, RESOLVED, DISMISSED)"
            },
            {
              "name": "stateComment",
              "description": "Comment given for the vulnerability state change."
            },
            {
              "name": "title",
              "description": "Title of the vulnerability."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the vulnerability was last updated."
            },
            {
              "name": "userNotesCount",
              "description": "Number of user notes attached to the vulnerability."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "vulnerabilityPath",
              "description": "Path to the vulnerability's details page."
            },
            {
              "name": "webUrl",
              "description": "URL to the vulnerability's details page."
            }
          ]
        },
        {
          "name": "VulnerabilityConfidence",
          "kind": "ENUM",
          "description": "Confidence that a given vulnerability is present in the codebase.",
          "fields": null
        },
        {
          "name": "VulnerabilityConfirmInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityConfirm",
          "fields": null
        },
        {
          "name": "VulnerabilityConfirmPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityConfirm",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "vulnerability",
              "description": "Vulnerability after state change."
            }
          ]
        },
        {
          "name": "VulnerabilityConnection",
          "kind": "OBJECT",
          "description": "The connection type for Vulnerability.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "VulnerabilityContainerImage",
          "kind": "OBJECT",
          "description": "Represents a container image reported on the related vulnerability",
          "fields": [
            {
              "name": "name",
              "description": "Name of the container image."
            }
          ]
        },
        {
          "name": "VulnerabilityContainerImageConnection",
          "kind": "OBJECT",
          "description": "The connection type for VulnerabilityContainerImage.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "VulnerabilityContainerImageEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "VulnerabilityCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityCreate",
          "fields": null
        },
        {
          "name": "VulnerabilityCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "vulnerability",
              "description": "Vulnerability created."
            }
          ]
        },
        {
          "name": "VulnerabilityDetail",
          "kind": "UNION",
          "description": "Represents a vulnerability detail field. The fields with data will depend on the vulnerability detail type",
          "fields": null
        },
        {
          "name": "VulnerabilityDetailBase",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details base",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "name",
              "description": "Name of the field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailBoolean",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details boolean value",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "value",
              "description": "Value of the field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailCode",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details code field",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "lang",
              "description": "Language of the code."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "value",
              "description": "Source code."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailCommit",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details commit field",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "value",
              "description": "Commit SHA value."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailDiff",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details diff field",
          "fields": [
            {
              "name": "after",
              "description": "Value of the field after the change."
            },
            {
              "name": "before",
              "description": "Value of the field before the change."
            },
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "name",
              "description": "Name of the field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailFileLocation",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details location within a file in the project",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "fileName",
              "description": "File name."
            },
            {
              "name": "lineEnd",
              "description": "End line number of the file location."
            },
            {
              "name": "lineStart",
              "description": "Start line number of the file location."
            },
            {
              "name": "name",
              "description": "Name of the field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailInt",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details integer value",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "value",
              "description": "Value of the field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailList",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details list value",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "items",
              "description": "List of details."
            },
            {
              "name": "name",
              "description": "Name of the field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailMarkdown",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details Markdown field",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "value",
              "description": "Value of the Markdown field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailModuleLocation",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details location within a file in the project",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "moduleName",
              "description": "Module name."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "offset",
              "description": "Offset of the module location."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailTable",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details table value",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "headers",
              "description": "Table headers."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "rows",
              "description": "Table rows."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailText",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details text field",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "value",
              "description": "Value of the text field."
            }
          ]
        },
        {
          "name": "VulnerabilityDetailUrl",
          "kind": "OBJECT",
          "description": "Represents the vulnerability details URL field",
          "fields": [
            {
              "name": "description",
              "description": "Description of the field."
            },
            {
              "name": "fieldName",
              "description": "Name of the field."
            },
            {
              "name": "href",
              "description": "Href of the URL."
            },
            {
              "name": "name",
              "description": "Name of the field."
            },
            {
              "name": "text",
              "description": "Text of the URL."
            }
          ]
        },
        {
          "name": "VulnerabilityDismissInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityDismiss",
          "fields": null
        },
        {
          "name": "VulnerabilityDismissPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityDismiss",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "vulnerability",
              "description": "Vulnerability after dismissal."
            }
          ]
        },
        {
          "name": "VulnerabilityDismissalReason",
          "kind": "ENUM",
          "description": "The dismissal reason of the Vulnerability",
          "fields": null
        },
        {
          "name": "VulnerabilityEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "VulnerabilityEvidence",
          "kind": "OBJECT",
          "description": "Represents a Vulnerability Evidence",
          "fields": [
            {
              "name": "request",
              "description": "HTTP request of the Vulnerability Evidence."
            },
            {
              "name": "response",
              "description": "HTTP response of the Vulnerability Evidence."
            },
            {
              "name": "source",
              "description": "Source of the Vulnerability Evidence."
            },
            {
              "name": "summary",
              "description": "Summary of the Vulnerability Evidence."
            },
            {
              "name": "supportingMessages",
              "description": "Supporting messages of the Vulnerability Evidence."
            }
          ]
        },
        {
          "name": "VulnerabilityEvidenceSource",
          "kind": "OBJECT",
          "description": "Represents a vulnerability evidence",
          "fields": [
            {
              "name": "identifier",
              "description": "ID of the Vulnerability Evidence Source."
            },
            {
              "name": "name",
              "description": "Name of the Vulnerability Evidence Source."
            },
            {
              "name": "url",
              "description": "URL of the Vulnerability Evidence Source."
            }
          ]
        },
        {
          "name": "VulnerabilityEvidenceSupportingMessage",
          "kind": "OBJECT",
          "description": "Represents a vulnerability evidence supporting message",
          "fields": [
            {
              "name": "name",
              "description": "Name of the vulnerability supporting message."
            },
            {
              "name": "request",
              "description": "HTTP request of the vulnerability evidence supporting message."
            },
            {
              "name": "response",
              "description": "HTTP response of the vulnerability evidence supporting message."
            }
          ]
        },
        {
          "name": "VulnerabilityExternalIssueLink",
          "kind": "OBJECT",
          "description": "Represents an external issue link of a vulnerability",
          "fields": [
            {
              "name": "externalIssue",
              "description": "The external issue attached to the issue link."
            },
            {
              "name": "id",
              "description": "GraphQL ID of the external issue link."
            },
            {
              "name": "linkType",
              "description": "Type of the external issue link."
            }
          ]
        },
        {
          "name": "VulnerabilityExternalIssueLinkConnection",
          "kind": "OBJECT",
          "description": "The connection type for VulnerabilityExternalIssueLink.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "VulnerabilityExternalIssueLinkCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityExternalIssueLinkCreate",
          "fields": null
        },
        {
          "name": "VulnerabilityExternalIssueLinkCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityExternalIssueLinkCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "externalIssueLink",
              "description": "Created external issue link."
            }
          ]
        },
        {
          "name": "VulnerabilityExternalIssueLinkDestroyInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityExternalIssueLinkDestroy",
          "fields": null
        },
        {
          "name": "VulnerabilityExternalIssueLinkDestroyPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityExternalIssueLinkDestroy",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            }
          ]
        },
        {
          "name": "VulnerabilityExternalIssueLinkEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "VulnerabilityExternalIssueLinkExternalTracker",
          "kind": "ENUM",
          "description": "The external tracker of the external issue link related to a vulnerability",
          "fields": null
        },
        {
          "name": "VulnerabilityExternalIssueLinkType",
          "kind": "ENUM",
          "description": "The type of the external issue link related to a vulnerability",
          "fields": null
        },
        {
          "name": "VulnerabilityFindingDismissInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityFindingDismiss",
          "fields": null
        },
        {
          "name": "VulnerabilityFindingDismissPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityFindingDismiss",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "finding",
              "description": "Finding after dismissal."
            }
          ]
        },
        {
          "name": "VulnerabilityGrade",
          "kind": "ENUM",
          "description": "The grade of the vulnerable project",
          "fields": null
        },
        {
          "name": "VulnerabilityID",
          "kind": "SCALAR",
          "description": "A `VulnerabilityID` is a global ID. It is encoded as a string.\n\nAn example `VulnerabilityID` is: `\"gid://gitlab/Vulnerability/1\"`.",
          "fields": null
        },
        {
          "name": "VulnerabilityIdentifier",
          "kind": "OBJECT",
          "description": "Represents a vulnerability identifier",
          "fields": [
            {
              "name": "externalId",
              "description": "External ID of the vulnerability identifier."
            },
            {
              "name": "externalType",
              "description": "External type of the vulnerability identifier."
            },
            {
              "name": "name",
              "description": "Name of the vulnerability identifier."
            },
            {
              "name": "url",
              "description": "URL of the vulnerability identifier."
            }
          ]
        },
        {
          "name": "VulnerabilityIdentifierInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "VulnerabilityIssueLink",
          "kind": "OBJECT",
          "description": "Represents an issue link of a vulnerability",
          "fields": [
            {
              "name": "id",
              "description": "GraphQL ID of the vulnerability."
            },
            {
              "name": "issue",
              "description": "Issue attached to issue link."
            },
            {
              "name": "linkType",
              "description": "Type of the issue link."
            }
          ]
        },
        {
          "name": "VulnerabilityIssueLinkConnection",
          "kind": "OBJECT",
          "description": "The connection type for VulnerabilityIssueLink.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "VulnerabilityIssueLinkEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "VulnerabilityIssueLinkType",
          "kind": "ENUM",
          "description": "The type of the issue link related to a vulnerability",
          "fields": null
        },
        {
          "name": "VulnerabilityLink",
          "kind": "OBJECT",
          "description": "Represents a link related to a vulnerability",
          "fields": [
            {
              "name": "name",
              "description": "Name of the link."
            },
            {
              "name": "url",
              "description": "URL of the link."
            }
          ]
        },
        {
          "name": "VulnerabilityLocation",
          "kind": "UNION",
          "description": "Represents a vulnerability location. The fields with data will depend on the vulnerability report type",
          "fields": null
        },
        {
          "name": "VulnerabilityLocationClusterImageScanning",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a cluster image scan",
          "fields": [
            {
              "name": "dependency",
              "description": "Dependency containing the vulnerability."
            },
            {
              "name": "image",
              "description": "Name of the vulnerable container image."
            },
            {
              "name": "kubernetesResource",
              "description": "Kubernetes resource which uses the vulnerable container image."
            },
            {
              "name": "operatingSystem",
              "description": "Operating system that runs on the vulnerable container image."
            }
          ]
        },
        {
          "name": "VulnerabilityLocationContainerScanning",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a container security scan",
          "fields": [
            {
              "name": "dependency",
              "description": "Dependency containing the vulnerability."
            },
            {
              "name": "image",
              "description": "Name of the vulnerable container image."
            },
            {
              "name": "operatingSystem",
              "description": "Operating system that runs on the vulnerable container image."
            }
          ]
        },
        {
          "name": "VulnerabilityLocationCoverageFuzzing",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a Coverage Fuzzing scan",
          "fields": [
            {
              "name": "blobPath",
              "description": "Blob path to the vulnerable file."
            },
            {
              "name": "crashAddress",
              "description": "Relative address in memory were the crash occurred."
            },
            {
              "name": "crashType",
              "description": "Type of the crash."
            },
            {
              "name": "endLine",
              "description": "Number of the last relevant line in the vulnerable file."
            },
            {
              "name": "file",
              "description": "Path to the vulnerable file."
            },
            {
              "name": "stacktraceSnippet",
              "description": "Stack trace recorded during fuzzing resulting the crash."
            },
            {
              "name": "startLine",
              "description": "Number of the first relevant line in the vulnerable file."
            },
            {
              "name": "vulnerableClass",
              "description": "Class containing the vulnerability."
            },
            {
              "name": "vulnerableMethod",
              "description": "Method containing the vulnerability."
            }
          ]
        },
        {
          "name": "VulnerabilityLocationDast",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a DAST scan",
          "fields": [
            {
              "name": "hostname",
              "description": "Domain name of the vulnerable request."
            },
            {
              "name": "param",
              "description": "Query parameter for the URL on which the vulnerability occurred."
            },
            {
              "name": "path",
              "description": "URL path and query string of the vulnerable request."
            },
            {
              "name": "requestMethod",
              "description": "HTTP method of the vulnerable request."
            }
          ]
        },
        {
          "name": "VulnerabilityLocationDependencyScanning",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a dependency security scan",
          "fields": [
            {
              "name": "blobPath",
              "description": "Blob path to the vulnerable file."
            },
            {
              "name": "dependency",
              "description": "Dependency containing the vulnerability."
            },
            {
              "name": "file",
              "description": "Path to the vulnerable file."
            }
          ]
        },
        {
          "name": "VulnerabilityLocationGeneric",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a generic scanner.",
          "fields": [
            {
              "name": "description",
              "description": "Free-form description of where the vulnerability is located."
            }
          ]
        },
        {
          "name": "VulnerabilityLocationSast",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a SAST scan",
          "fields": [
            {
              "name": "blobPath",
              "description": "Blob path to the vulnerable file."
            },
            {
              "name": "endLine",
              "description": "Number of the last relevant line in the vulnerable file."
            },
            {
              "name": "file",
              "description": "Path to the vulnerable file."
            },
            {
              "name": "startLine",
              "description": "Number of the first relevant line in the vulnerable file."
            },
            {
              "name": "vulnerableClass",
              "description": "Class containing the vulnerability."
            },
            {
              "name": "vulnerableMethod",
              "description": "Method containing the vulnerability."
            }
          ]
        },
        {
          "name": "VulnerabilityLocationSecretDetection",
          "kind": "OBJECT",
          "description": "Represents the location of a vulnerability found by a secret detection scan",
          "fields": [
            {
              "name": "blobPath",
              "description": "Blob path to the vulnerable file."
            },
            {
              "name": "endLine",
              "description": "Number of the last relevant line in the vulnerable file."
            },
            {
              "name": "file",
              "description": "Path to the vulnerable file."
            },
            {
              "name": "startLine",
              "description": "Number of the first relevant line in the vulnerable file."
            },
            {
              "name": "vulnerableClass",
              "description": "Class containing the vulnerability."
            },
            {
              "name": "vulnerableMethod",
              "description": "Method containing the vulnerability."
            }
          ]
        },
        {
          "name": "VulnerabilityPermissions",
          "kind": "OBJECT",
          "description": "Check permissions for the current user on a vulnerability",
          "fields": [
            {
              "name": "adminVulnerability",
              "description": "Indicates the user can perform `admin_vulnerability` on this resource"
            },
            {
              "name": "adminVulnerabilityExternalIssueLink",
              "description": "Indicates the user can perform `admin_vulnerability_external_issue_link` on this resource"
            },
            {
              "name": "adminVulnerabilityIssueLink",
              "description": "Indicates the user can perform `admin_vulnerability_issue_link` on this resource"
            },
            {
              "name": "createVulnerability",
              "description": "Indicates the user can perform `create_vulnerability` on this resource"
            },
            {
              "name": "createVulnerabilityExport",
              "description": "Indicates the user can perform `create_vulnerability_export` on this resource"
            },
            {
              "name": "createVulnerabilityFeedback",
              "description": "Indicates the user can perform `create_vulnerability_feedback` on this resource"
            },
            {
              "name": "destroyVulnerabilityFeedback",
              "description": "Indicates the user can perform `destroy_vulnerability_feedback` on this resource"
            },
            {
              "name": "readVulnerabilityFeedback",
              "description": "Indicates the user can perform `read_vulnerability_feedback` on this resource"
            },
            {
              "name": "updateVulnerabilityFeedback",
              "description": "Indicates the user can perform `update_vulnerability_feedback` on this resource"
            }
          ]
        },
        {
          "name": "VulnerabilityRemediationType",
          "kind": "OBJECT",
          "description": "Represents a vulnerability remediation type.",
          "fields": [
            {
              "name": "diff",
              "description": "Diff of the remediation."
            },
            {
              "name": "summary",
              "description": "Summary of the remediation."
            }
          ]
        },
        {
          "name": "VulnerabilityReportType",
          "kind": "ENUM",
          "description": "The type of the security scan that found the vulnerability",
          "fields": null
        },
        {
          "name": "VulnerabilityRequest",
          "kind": "OBJECT",
          "description": "Represents a Vulnerability Request",
          "fields": [
            {
              "name": "body",
              "description": "Body of the Vulnerability Request."
            },
            {
              "name": "headers",
              "description": "HTTP headers of the Vulnerability Request."
            },
            {
              "name": "method",
              "description": "Method of the Vulnerability Request."
            },
            {
              "name": "url",
              "description": "URL of the Vulnerability Request."
            }
          ]
        },
        {
          "name": "VulnerabilityRequestResponseHeader",
          "kind": "OBJECT",
          "description": "Represents a Vulnerability Request/Response Header",
          "fields": [
            {
              "name": "name",
              "description": "Name of the Vulnerability Request/Response Header."
            },
            {
              "name": "value",
              "description": "Value of the Vulnerability Request/Response Header."
            }
          ]
        },
        {
          "name": "VulnerabilityResolveInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityResolve",
          "fields": null
        },
        {
          "name": "VulnerabilityResolvePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityResolve",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "vulnerability",
              "description": "Vulnerability after state change."
            }
          ]
        },
        {
          "name": "VulnerabilityResponse",
          "kind": "OBJECT",
          "description": "Represents a Vulnerability Response",
          "fields": [
            {
              "name": "body",
              "description": "Body of the Vulnerability Response."
            },
            {
              "name": "headers",
              "description": "HTTP headers of the Vulnerability Response."
            },
            {
              "name": "reasonPhrase",
              "description": "Reason Phrase of the Vulnerability Response."
            },
            {
              "name": "statusCode",
              "description": "Status Code of the Vulnerability Response."
            }
          ]
        },
        {
          "name": "VulnerabilityRevertToDetectedInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of VulnerabilityRevertToDetected",
          "fields": null
        },
        {
          "name": "VulnerabilityRevertToDetectedPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of VulnerabilityRevertToDetected",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "vulnerability",
              "description": "Vulnerability after revert."
            }
          ]
        },
        {
          "name": "VulnerabilityScanner",
          "kind": "OBJECT",
          "description": "Represents a vulnerability scanner",
          "fields": [
            {
              "name": "externalId",
              "description": "External ID of the vulnerability scanner."
            },
            {
              "name": "id",
              "description": "ID of the scanner."
            },
            {
              "name": "name",
              "description": "Name of the vulnerability scanner."
            },
            {
              "name": "reportType",
              "description": "Type of the vulnerability report."
            },
            {
              "name": "reportTypeHumanized",
              "description": "Humanized type of the vulnerability report."
            },
            {
              "name": "vendor",
              "description": "Vendor of the vulnerability scanner."
            }
          ]
        },
        {
          "name": "VulnerabilityScannerConnection",
          "kind": "OBJECT",
          "description": "The connection type for VulnerabilityScanner.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "VulnerabilityScannerEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "VulnerabilityScannerInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "VulnerabilityScannerVendorInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "VulnerabilitySeveritiesCount",
          "kind": "OBJECT",
          "description": "Represents vulnerability counts by severity",
          "fields": [
            {
              "name": "critical",
              "description": "Number of vulnerabilities of CRITICAL severity of the project"
            },
            {
              "name": "high",
              "description": "Number of vulnerabilities of HIGH severity of the project"
            },
            {
              "name": "info",
              "description": "Number of vulnerabilities of INFO severity of the project"
            },
            {
              "name": "low",
              "description": "Number of vulnerabilities of LOW severity of the project"
            },
            {
              "name": "medium",
              "description": "Number of vulnerabilities of MEDIUM severity of the project"
            },
            {
              "name": "unknown",
              "description": "Number of vulnerabilities of UNKNOWN severity of the project"
            }
          ]
        },
        {
          "name": "VulnerabilitySeverity",
          "kind": "ENUM",
          "description": "The severity of the vulnerability",
          "fields": null
        },
        {
          "name": "VulnerabilitySort",
          "kind": "ENUM",
          "description": "Vulnerability sort values",
          "fields": null
        },
        {
          "name": "VulnerabilityState",
          "kind": "ENUM",
          "description": "The state of the vulnerability",
          "fields": null
        },
        {
          "name": "VulnerableDependency",
          "kind": "OBJECT",
          "description": "Represents a vulnerable dependency. Used in vulnerability location data",
          "fields": [
            {
              "name": "package",
              "description": "Package associated with the vulnerable dependency."
            },
            {
              "name": "version",
              "description": "Version of the vulnerable dependency."
            }
          ]
        },
        {
          "name": "VulnerableKubernetesResource",
          "kind": "OBJECT",
          "description": "Represents a vulnerable Kubernetes resource. Used in vulnerability location data",
          "fields": [
            {
              "name": "agent",
              "description": "Kubernetes Agent which performed the scan."
            },
            {
              "name": "clusterId",
              "description": "ID of the Cluster integration which was used to perform the scan."
            },
            {
              "name": "containerName",
              "description": "Name of the container that had its image scanned."
            },
            {
              "name": "kind",
              "description": "Kind of the Kubernetes resource."
            },
            {
              "name": "name",
              "description": "Name of the Kubernetes resource."
            },
            {
              "name": "namespace",
              "description": "Kubernetes namespace which the resource resides in."
            }
          ]
        },
        {
          "name": "VulnerablePackage",
          "kind": "OBJECT",
          "description": "Represents a vulnerable package. Used in vulnerability dependency data",
          "fields": [
            {
              "name": "name",
              "description": "Name of the vulnerable package."
            }
          ]
        },
        {
          "name": "VulnerableProjectsByGrade",
          "kind": "OBJECT",
          "description": "Represents vulnerability letter grades with associated projects",
          "fields": [
            {
              "name": "count",
              "description": "Number of projects within this grade."
            },
            {
              "name": "grade",
              "description": "Grade based on the highest severity vulnerability present."
            },
            {
              "name": "projects",
              "description": "Projects within this grade."
            }
          ]
        },
        {
          "name": "WeightWildcardId",
          "kind": "ENUM",
          "description": "Weight ID wildcard values",
          "fields": null
        },
        {
          "name": "WorkItem",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "closedAt",
              "description": "Timestamp of when the work item was closed."
            },
            {
              "name": "confidential",
              "description": "Indicates the work item is confidential."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the work item was created."
            },
            {
              "name": "description",
              "description": "Description of the work item."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "id",
              "description": "Global ID of the work item."
            },
            {
              "name": "iid",
              "description": "Internal ID of the work item."
            },
            {
              "name": "lockVersion",
              "description": "Lock version of the work item. Incremented each time the work item is updated."
            },
            {
              "name": "state",
              "description": "State of the work item."
            },
            {
              "name": "title",
              "description": "Title of the work item."
            },
            {
              "name": "titleHtml",
              "description": "GitLab Flavored Markdown rendering of `title`"
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the work item was last updated."
            },
            {
              "name": "userPermissions",
              "description": "Permissions for the current user on the resource"
            },
            {
              "name": "webUrl",
              "description": "URL of this object."
            },
            {
              "name": "widgets",
              "description": "Collection of widgets that belong to the work item."
            },
            {
              "name": "workItemType",
              "description": "Type assigned to the work item."
            }
          ]
        },
        {
          "name": "WorkItemConnection",
          "kind": "OBJECT",
          "description": "The connection type for WorkItem.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "WorkItemConvertTaskInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemCreateFromTaskInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of WorkItemCreateFromTask",
          "fields": null
        },
        {
          "name": "WorkItemCreateFromTaskPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of WorkItemCreateFromTask",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "newWorkItem",
              "description": "New work item created from task."
            },
            {
              "name": "workItem",
              "description": "Updated work item."
            }
          ]
        },
        {
          "name": "WorkItemCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of WorkItemCreate",
          "fields": null
        },
        {
          "name": "WorkItemCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of WorkItemCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "workItem",
              "description": "Created work item."
            }
          ]
        },
        {
          "name": "WorkItemDeleteInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of WorkItemDelete",
          "fields": null
        },
        {
          "name": "WorkItemDeletePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of WorkItemDelete",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "project",
              "description": "Project the deleted work item belonged to."
            }
          ]
        },
        {
          "name": "WorkItemDeleteTaskInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of WorkItemDeleteTask",
          "fields": null
        },
        {
          "name": "WorkItemDeleteTaskPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of WorkItemDeleteTask",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "workItem",
              "description": "Updated work item."
            }
          ]
        },
        {
          "name": "WorkItemDeletedTaskInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "WorkItemID",
          "kind": "SCALAR",
          "description": "A `WorkItemID` is a global ID. It is encoded as a string.\n\nAn example `WorkItemID` is: `\"gid://gitlab/WorkItem/1\"`.\n\nWhile we transition from Issues into Work Items this type will temporarily support\n`IssueID` like: `\"gid://gitlab/Issue/1\"`. This behavior will be removed without notice in the future.\n",
          "fields": null
        },
        {
          "name": "WorkItemPermissions",
          "kind": "OBJECT",
          "description": "Check permissions for the current user on a work item",
          "fields": [
            {
              "name": "adminWorkItem",
              "description": "Indicates the user can perform `admin_work_item` on this resource"
            },
            {
              "name": "deleteWorkItem",
              "description": "Indicates the user can perform `delete_work_item` on this resource"
            },
            {
              "name": "readWorkItem",
              "description": "Indicates the user can perform `read_work_item` on this resource"
            },
            {
              "name": "updateWorkItem",
              "description": "Indicates the user can perform `update_work_item` on this resource"
            }
          ]
        },
        {
          "name": "WorkItemSort",
          "kind": "ENUM",
          "description": "Values for sorting work items",
          "fields": null
        },
        {
          "name": "WorkItemState",
          "kind": "ENUM",
          "description": "State of a GitLab work item",
          "fields": null
        },
        {
          "name": "WorkItemStateEvent",
          "kind": "ENUM",
          "description": "Values for work item state events",
          "fields": null
        },
        {
          "name": "WorkItemType",
          "kind": "OBJECT",
          "description": null,
          "fields": [
            {
              "name": "iconName",
              "description": "Icon name of the work item type."
            },
            {
              "name": "id",
              "description": "Global ID of the work item type."
            },
            {
              "name": "name",
              "description": "Name of the work item type."
            }
          ]
        },
        {
          "name": "WorkItemTypeConnection",
          "kind": "OBJECT",
          "description": "The connection type for WorkItemType.",
          "fields": [
            {
              "name": "edges",
              "description": "A list of edges."
            },
            {
              "name": "nodes",
              "description": "A list of nodes."
            },
            {
              "name": "pageInfo",
              "description": "Information to aid in pagination."
            }
          ]
        },
        {
          "name": "WorkItemTypeEdge",
          "kind": "OBJECT",
          "description": "An edge in a connection.",
          "fields": [
            {
              "name": "cursor",
              "description": "A cursor for use in pagination."
            },
            {
              "name": "node",
              "description": "The item at the end of the edge."
            }
          ]
        },
        {
          "name": "WorkItemUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of WorkItemUpdate",
          "fields": null
        },
        {
          "name": "WorkItemUpdatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of WorkItemUpdate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "workItem",
              "description": "Updated work item."
            }
          ]
        },
        {
          "name": "WorkItemUpdateTaskInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of WorkItemUpdateTask",
          "fields": null
        },
        {
          "name": "WorkItemUpdateTaskPayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of WorkItemUpdateTask",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "task",
              "description": "Updated task."
            },
            {
              "name": "workItem",
              "description": "Updated work item."
            }
          ]
        },
        {
          "name": "WorkItemUpdatedTaskInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidget",
          "kind": "INTERFACE",
          "description": null,
          "fields": [
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetAssignees",
          "kind": "OBJECT",
          "description": "Represents an assignees widget",
          "fields": [
            {
              "name": "allowsMultipleAssignees",
              "description": "Indicates whether multiple assignees are allowed."
            },
            {
              "name": "assignees",
              "description": "Assignees of the work item."
            },
            {
              "name": "canInviteMembers",
              "description": "Indicates whether the current user can invite members to the work item's project."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetAssigneesInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetDescription",
          "kind": "OBJECT",
          "description": "Represents a description widget",
          "fields": [
            {
              "name": "description",
              "description": "Description of the work item."
            },
            {
              "name": "descriptionHtml",
              "description": "GitLab Flavored Markdown rendering of `description`"
            },
            {
              "name": "edited",
              "description": "Whether the description has been edited since the work item was created."
            },
            {
              "name": "lastEditedAt",
              "description": "Timestamp of when the work item's description was last edited."
            },
            {
              "name": "lastEditedBy",
              "description": "User that made the last edit to the work item's description."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetDescriptionInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetHealthStatus",
          "kind": "OBJECT",
          "description": "Represents a health status widget",
          "fields": [
            {
              "name": "healthStatus",
              "description": "Health status of the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetHealthStatusInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetHierarchy",
          "kind": "OBJECT",
          "description": "Represents a hierarchy widget",
          "fields": [
            {
              "name": "children",
              "description": "Child work items."
            },
            {
              "name": "hasChildren",
              "description": "Indicates if the work item has children."
            },
            {
              "name": "parent",
              "description": "Parent work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetHierarchyCreateInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetHierarchyUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetIteration",
          "kind": "OBJECT",
          "description": "Represents an iteration widget",
          "fields": [
            {
              "name": "iteration",
              "description": "Iteration of the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetIterationInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetLabels",
          "kind": "OBJECT",
          "description": "Represents the labels widget",
          "fields": [
            {
              "name": "allowsScopedLabels",
              "description": "Indicates whether a scoped label is allowed."
            },
            {
              "name": "labels",
              "description": "Labels assigned to the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetLabelsUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetMilestone",
          "kind": "OBJECT",
          "description": "Represents a milestone widget",
          "fields": [
            {
              "name": "milestone",
              "description": "Milestone of the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetMilestoneInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetNotes",
          "kind": "OBJECT",
          "description": "Represents a notes widget",
          "fields": [
            {
              "name": "discussions",
              "description": "Notes on this work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetProgress",
          "kind": "OBJECT",
          "description": "Represents a progress widget",
          "fields": [
            {
              "name": "progress",
              "description": "Progress of the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetProgressInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetRequirementLegacy",
          "kind": "OBJECT",
          "description": "Represents a legacy requirement widget",
          "fields": [
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetStartAndDueDate",
          "kind": "OBJECT",
          "description": "Represents a start and due date widget",
          "fields": [
            {
              "name": "dueDate",
              "description": "Due date of the work item."
            },
            {
              "name": "startDate",
              "description": "Start date of the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetStartAndDueDateUpdateInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemWidgetStatus",
          "kind": "OBJECT",
          "description": "Represents a status widget",
          "fields": [
            {
              "name": "status",
              "description": "Status of the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetTestReports",
          "kind": "OBJECT",
          "description": "Represents a test reports widget",
          "fields": [
            {
              "name": "testReports",
              "description": "Test reports of the work item."
            },
            {
              "name": "type",
              "description": "Widget type."
            }
          ]
        },
        {
          "name": "WorkItemWidgetType",
          "kind": "ENUM",
          "description": "Type of a work item widget",
          "fields": null
        },
        {
          "name": "WorkItemWidgetWeight",
          "kind": "OBJECT",
          "description": "Represents a weight widget",
          "fields": [
            {
              "name": "type",
              "description": "Widget type."
            },
            {
              "name": "weight",
              "description": "Weight of the work item."
            }
          ]
        },
        {
          "name": "WorkItemWidgetWeightInput",
          "kind": "INPUT_OBJECT",
          "description": null,
          "fields": null
        },
        {
          "name": "WorkItemsTypeID",
          "kind": "SCALAR",
          "description": "A `WorkItemsTypeID` is a global ID. It is encoded as a string.\n\nAn example `WorkItemsTypeID` is: `\"gid://gitlab/WorkItems::Type/1\"`.",
          "fields": null
        },
        {
          "name": "X509Certificate",
          "kind": "OBJECT",
          "description": "Represents an X.509 certificate.",
          "fields": [
            {
              "name": "certificateStatus",
              "description": "Indicates if the certificate is good or revoked."
            },
            {
              "name": "createdAt",
              "description": "Timestamp of when the certificate was saved."
            },
            {
              "name": "email",
              "description": "Email associated with the cerificate."
            },
            {
              "name": "id",
              "description": "ID of the certificate."
            },
            {
              "name": "serialNumber",
              "description": "Serial number of the certificate."
            },
            {
              "name": "subject",
              "description": "Subject of the certificate."
            },
            {
              "name": "subjectKeyIdentifier",
              "description": "Subject key identifier of the certificate."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the certificate was last updated."
            },
            {
              "name": "x509Issuer",
              "description": "Issuer of the certificate."
            }
          ]
        },
        {
          "name": "X509Issuer",
          "kind": "OBJECT",
          "description": "Issuer of an X.509 certificate.",
          "fields": [
            {
              "name": "createdAt",
              "description": "Timestamp of when the issuer was created."
            },
            {
              "name": "crlUrl",
              "description": "Certificate revokation list of the issuer."
            },
            {
              "name": "id",
              "description": "ID of the issuer."
            },
            {
              "name": "subject",
              "description": "Subject of the issuer."
            },
            {
              "name": "subjectKeyIdentifier",
              "description": "Subject key identifier of the issuer."
            },
            {
              "name": "updatedAt",
              "description": "Timestamp of when the issuer was last updated."
            }
          ]
        },
        {
          "name": "X509Signature",
          "kind": "OBJECT",
          "description": "X.509 signature for a signed commit",
          "fields": [
            {
              "name": "commitSha",
              "description": "SHA of the associated commit."
            },
            {
              "name": "project",
              "description": "Project of the associated commit."
            },
            {
              "name": "user",
              "description": "User associated with the key."
            },
            {
              "name": "verificationStatus",
              "description": "Indicates verification status of the associated key or certificate."
            },
            {
              "name": "x509Certificate",
              "description": "Certificate used for the signature."
            }
          ]
        },
        {
          "name": "__Directive",
          "kind": "OBJECT",
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "fields": [
            {
              "name": "args",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "isRepeatable",
              "description": null
            },
            {
              "name": "locations",
              "description": null
            },
            {
              "name": "name",
              "description": null
            }
          ]
        },
        {
          "name": "__DirectiveLocation",
          "kind": "ENUM",
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "fields": null
        },
        {
          "name": "__EnumValue",
          "kind": "OBJECT",
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "fields": [
            {
              "name": "deprecationReason",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "isDeprecated",
              "description": null
            },
            {
              "name": "name",
              "description": null
            }
          ]
        },
        {
          "name": "__Field",
          "kind": "OBJECT",
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "fields": [
            {
              "name": "args",
              "description": null
            },
            {
              "name": "deprecationReason",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "isDeprecated",
              "description": null
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "type",
              "description": null
            }
          ]
        },
        {
          "name": "__InputValue",
          "kind": "OBJECT",
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "fields": [
            {
              "name": "defaultValue",
              "description": "A GraphQL-formatted string representing the default value for this input value."
            },
            {
              "name": "deprecationReason",
              "description": null
            },
            {
              "name": "description",
              "description": null
            },
            {
              "name": "isDeprecated",
              "description": null
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "type",
              "description": null
            }
          ]
        },
        {
          "name": "__Schema",
          "kind": "OBJECT",
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "fields": [
            {
              "name": "description",
              "description": null
            },
            {
              "name": "directives",
              "description": "A list of all directives supported by this server."
            },
            {
              "name": "mutationType",
              "description": "If this server supports mutation, the type that mutation operations will be rooted at."
            },
            {
              "name": "queryType",
              "description": "The type that query operations will be rooted at."
            },
            {
              "name": "subscriptionType",
              "description": "If this server support subscription, the type that subscription operations will be rooted at."
            },
            {
              "name": "types",
              "description": "A list of all types supported by this server."
            }
          ]
        },
        {
          "name": "__Type",
          "kind": "OBJECT",
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "fields": [
            {
              "name": "description",
              "description": null
            },
            {
              "name": "enumValues",
              "description": null
            },
            {
              "name": "fields",
              "description": null
            },
            {
              "name": "inputFields",
              "description": null
            },
            {
              "name": "interfaces",
              "description": null
            },
            {
              "name": "kind",
              "description": null
            },
            {
              "name": "name",
              "description": null
            },
            {
              "name": "ofType",
              "description": null
            },
            {
              "name": "possibleTypes",
              "description": null
            },
            {
              "name": "specifiedByUrl",
              "description": null
            }
          ]
        },
        {
          "name": "__TypeKind",
          "kind": "ENUM",
          "description": "An enum describing what kind of type a given `__Type` is.",
          "fields": null
        },
        {
          "name": "iterationCreateInput",
          "kind": "INPUT_OBJECT",
          "description": "Autogenerated input type of iterationCreate",
          "fields": null
        },
        {
          "name": "iterationCreatePayload",
          "kind": "OBJECT",
          "description": "Autogenerated return type of iterationCreate",
          "fields": [
            {
              "name": "clientMutationId",
              "description": "A unique identifier for the client performing the mutation."
            },
            {
              "name": "errors",
              "description": "Errors encountered during execution of the mutation."
            },
            {
              "name": "iteration",
              "description": "Created iteration."
            }
          ]
        }
      ]
    }
  }
}
